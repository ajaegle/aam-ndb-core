{"version":3,"sources":["(webpack)/buildin/global.js","./node_modules/moment/locale sync ^\\.\\/.*$","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/child-dev-project/aser/aser-component/aser.component.ts","./src/app/child-dev-project/aser/demo-aser-generator.service.ts","./src/app/child-dev-project/aser/model/aser.ts","./src/app/child-dev-project/attendance/add-day-attendance/add-day-attendance.component.ts","./src/app/child-dev-project/attendance/add-day-attendance/add-day-attendance.component.html","./src/app/child-dev-project/attendance/add-day-attendance/roll-call/roll-call.component.ts","./src/app/child-dev-project/attendance/add-day-attendance/roll-call/roll-call.component.html","./src/app/child-dev-project/attendance/add-month-attendance/add-month-attendance.component.ts","./src/app/child-dev-project/attendance/add-month-attendance/add-month-attendance.component.html","./src/app/child-dev-project/attendance/attendance-analysis/attendance-analysis.component.ts","./src/app/child-dev-project/attendance/attendance-analysis/attendance-analysis.component.html","./src/app/child-dev-project/attendance/attendance-block/attendance-block.component.ts","./src/app/child-dev-project/attendance/attendance-block/attendance-block.component.html","./src/app/child-dev-project/attendance/attendance-days/attendance-day-block.component.ts","./src/app/child-dev-project/attendance/attendance-days/attendance-day-block.component.html","./src/app/child-dev-project/attendance/attendance-days/attendance-days.component.ts","./src/app/child-dev-project/attendance/attendance-days/attendance-days.component.html","./src/app/child-dev-project/attendance/attendance-details/attendance-details.component.ts","./src/app/child-dev-project/attendance/attendance-details/attendance-details.component.html","./src/app/child-dev-project/attendance/attendance-manager/attendance-manager.component.ts","./src/app/child-dev-project/attendance/attendance-manager/attendance-manager.component.html","./src/app/child-dev-project/attendance/attendance-month-conflict-resolution-strategy.ts","./src/app/child-dev-project/attendance/child-attendance/child-attendance.component.ts","./src/app/child-dev-project/attendance/child-attendance/child-attendance.component.html","./src/app/child-dev-project/attendance/dashboard-widgets/attendance-average-dashboard/attendance-average-dashboard.component.ts","./src/app/child-dev-project/attendance/dashboard-widgets/attendance-average-dashboard/attendance-average-dashboard.component.html","./src/app/child-dev-project/attendance/dashboard-widgets/attendance-warnings-dashboard/attendance-warnings-dashboard.component.ts","./src/app/child-dev-project/attendance/dashboard-widgets/attendance-warnings-dashboard/attendance-warnings-dashboard.component.html","./src/app/child-dev-project/attendance/dashboard-widgets/attendance-week-dashboard/attendance-week-dashboard.component.ts","./src/app/child-dev-project/attendance/dashboard-widgets/attendance-week-dashboard/attendance-week-dashboard.component.html","./src/app/child-dev-project/attendance/demo-attendance-generator.service.ts","./src/app/child-dev-project/attendance/model/attendance-day.ts","./src/app/child-dev-project/attendance/model/attendance-month.ts","./src/app/child-dev-project/children/child-block/child-block.component.ts","./src/app/child-dev-project/children/child-block/child-block.component.html","./src/app/child-dev-project/children/child-details/child-details.component.ts","./src/app/child-dev-project/children/child-details/child-details.component.html","./src/app/child-dev-project/children/child-photo-service/child-photo.service.ts","./src/app/child-dev-project/children/child-photo-service/datatype-load-child-photo.ts","./src/app/child-dev-project/children/child-select/child-select.component.ts","./src/app/child-dev-project/children/child-select/child-select.component.html","./src/app/child-dev-project/children/children-count-dashboard/children-count-dashboard.component.ts","./src/app/child-dev-project/children/children-count-dashboard/children-count-dashboard.component.html","./src/app/child-dev-project/children/children-list/children-list.component.ts","./src/app/child-dev-project/children/children-list/children-list.component.html","./src/app/child-dev-project/children/children.module.ts","./src/app/child-dev-project/children/children.service.ts","./src/app/child-dev-project/children/demo-data-generators/demo-child-generator.service.ts","./src/app/child-dev-project/children/demo-data-generators/demo-child-school-relation-generator.service.ts","./src/app/child-dev-project/children/demo-data-generators/fixtures/centers.ts","./src/app/child-dev-project/children/demo-data-generators/fixtures/dropout-types.ts","./src/app/child-dev-project/children/demo-data-generators/fixtures/languages.ts","./src/app/child-dev-project/children/demo-data-generators/fixtures/religions.ts","./src/app/child-dev-project/children/model/Gender.ts","./src/app/child-dev-project/children/model/child.ts","./src/app/child-dev-project/children/model/childSchoolRelation.ts","./src/app/child-dev-project/children/select-group-children/select-group-children.component.ts","./src/app/child-dev-project/children/select-group-children/select-group-children.component.html","./src/app/child-dev-project/dashboard/dashboard.module.ts","./src/app/child-dev-project/dashboard/dashboard/dashboard.component.ts","./src/app/child-dev-project/dashboard/dashboard/dashboard.component.html","./src/app/child-dev-project/dashboard/demo-widget-generator.service.ts","./src/app/child-dev-project/dashboard/progress-dashboard/progress-dashboard-config.ts","./src/app/child-dev-project/dashboard/progress-dashboard/progress-dashboard.component.ts","./src/app/child-dev-project/dashboard/progress-dashboard/progress-dashboard.component.html","./src/app/child-dev-project/educational-material/demo-educational-material-generator.service.ts","./src/app/child-dev-project/educational-material/educational-material-component/educational-material.component.ts","./src/app/child-dev-project/educational-material/educational-material-component/educational-material.component.html","./src/app/child-dev-project/educational-material/model/educational-material.ts","./src/app/child-dev-project/health-checkup/demo-data/demo-health-check-generator.service.ts","./src/app/child-dev-project/health-checkup/demo-data/height-weight.ts","./src/app/child-dev-project/health-checkup/health-checkup-component/health-checkup.component.ts","./src/app/child-dev-project/health-checkup/health-checkup-component/health-checkup.component.html","./src/app/child-dev-project/health-checkup/model/health-check.ts","./src/app/child-dev-project/notes/dashboard-widgets/no-recent-notes-dashboard/no-recent-notes-dashboard.component.ts","./src/app/child-dev-project/notes/dashboard-widgets/no-recent-notes-dashboard/no-recent-notes-dashboard.component.html","./src/app/child-dev-project/notes/dashboard-widgets/recent-notes-dashboard/recent-notes-dashboard.component.ts","./src/app/child-dev-project/notes/dashboard-widgets/recent-notes-dashboard/recent-notes-dashboard.component.html","./src/app/child-dev-project/notes/demo-data/demo-note-generator.service.ts","./src/app/child-dev-project/notes/demo-data/notes_group-stories.ts","./src/app/child-dev-project/notes/demo-data/notes_individual-stories.ts","./src/app/child-dev-project/notes/demo-data/remarks.ts","./src/app/child-dev-project/notes/interaction-types.enum.ts","./src/app/child-dev-project/notes/meeting-note-attendance.ts","./src/app/child-dev-project/notes/model/note.ts","./src/app/child-dev-project/notes/note-details/child-meeting-attendance/child-meeting-note-attendance.component.ts","./src/app/child-dev-project/notes/note-details/child-meeting-attendance/child-meeting-note-attendance.component.html","./src/app/child-dev-project/notes/note-details/note-details.component.ts","./src/app/child-dev-project/notes/note-details/note-details.component.html","./src/app/child-dev-project/notes/note-details/note-presence-list/note-presence-list.component.ts","./src/app/child-dev-project/notes/note-details/note-presence-list/note-presence-list.component.html","./src/app/child-dev-project/notes/notes-manager/notes-manager.component.ts","./src/app/child-dev-project/notes/notes-manager/notes-manager.component.html","./src/app/child-dev-project/notes/notes-of-child/notes-of-child.component.ts","./src/app/child-dev-project/notes/notes-of-child/notes-of-child.component.html","./src/app/child-dev-project/notes/notes.module.ts","./src/app/child-dev-project/previous-schools/previous-schools.component.ts","./src/app/child-dev-project/previous-schools/previous-schools.component.html","./src/app/child-dev-project/schools/demo-school-generator.service.ts","./src/app/child-dev-project/schools/model/school.ts","./src/app/child-dev-project/schools/school-block/school-block.component.ts","./src/app/child-dev-project/schools/school-block/school-block.component.html","./src/app/child-dev-project/schools/school-details/school-details.component.ts","./src/app/child-dev-project/schools/school-details/school-details.component.html","./src/app/child-dev-project/schools/schools-list/schools-list.component.ts","./src/app/child-dev-project/schools/schools-list/schools-list.component.html","./src/app/child-dev-project/schools/schools.module.ts","./src/app/child-dev-project/schools/schools.service.ts","./src/app/child-dev-project/warning-level.ts","./src/app/conflict-resolution/auto-resolution/conflict-resolution-strategy.ts","./src/app/core/admin/admin.guard.ts","./src/app/core/admin/admin.module.ts","./src/app/core/admin/admin/admin.component.ts","./src/app/core/admin/admin/admin.component.html","./src/app/core/admin/export-data/export-data.component.ts","./src/app/core/admin/export-data/export-data.component.html","./src/app/core/admin/services/backup.service.ts","./src/app/core/admin/services/child-photo-update.service.ts","./src/app/core/admin/user-list/user-list.component.ts","./src/app/core/admin/user-list/user-list.component.html","./src/app/core/alerts/alert-display.ts","./src/app/core/alerts/alert.service.ts","./src/app/core/alerts/alert.ts","./src/app/core/alerts/alerts.module.ts","./src/app/core/alerts/alerts/alert.component.ts","./src/app/core/alerts/alerts/alert.component.html","./src/app/core/analytics/analytics.service.ts","./src/app/core/app-config/app-config.module.ts","./src/app/core/app-config/app-config.ts","./src/app/core/config/config.module.ts","./src/app/core/config/config.service.ts","./src/app/core/confirmation-dialog/confirmation-dialog.module.ts","./src/app/core/confirmation-dialog/confirmation-dialog.service.ts","./src/app/core/confirmation-dialog/confirmation-dialog/confirmation-dialog.component.ts","./src/app/core/confirmation-dialog/confirmation-dialog/confirmation-dialog.component.html","./src/app/core/database/database.service.provider.ts","./src/app/core/database/database.ts","./src/app/core/database/mock-database.ts","./src/app/core/database/pouch-database.ts","./src/app/core/demo-data/demo-data-generating-progress-dialog.component.ts","./src/app/core/demo-data/demo-data-generator.ts","./src/app/core/demo-data/demo-data.module.ts","./src/app/core/demo-data/demo-data.service.ts","./src/app/core/demo-data/faker.ts","./src/app/core/entity-subrecord/entity-subrecord.module.ts","./src/app/core/entity-subrecord/entity-subrecord/column-description-input-type.enum.ts","./src/app/core/entity-subrecord/entity-subrecord/column-description.ts","./src/app/core/entity-subrecord/entity-subrecord/entity-subrecord.component.ts","./src/app/core/entity-subrecord/entity-subrecord/entity-subrecord.component.html","./src/app/core/entity-subrecord/keys-pipe/keys.pipe.ts","./src/app/core/entity/database-entity.decorator.ts","./src/app/core/entity/database-field.decorator.ts","./src/app/core/entity/database-indexing/database-indexing.service.ts","./src/app/core/entity/entity-mapper.service.ts","./src/app/core/entity/entity.module.ts","./src/app/core/entity/entity.ts","./src/app/core/entity/schema-datatypes/datatype-array.ts","./src/app/core/entity/schema-datatypes/datatype-date-only.ts","./src/app/core/entity/schema-datatypes/datatype-date.ts","./src/app/core/entity/schema-datatypes/datatype-default.ts","./src/app/core/entity/schema-datatypes/datatype-month.ts","./src/app/core/entity/schema-datatypes/datatype-number.ts","./src/app/core/entity/schema-datatypes/datatype-schema-embed.ts","./src/app/core/entity/schema-datatypes/datatype-string.ts","./src/app/core/entity/schema/entity-schema.service.ts","./src/app/core/filter/filter-selection/filter-selection.ts","./src/app/core/form-dialog/form-dialog-wrapper/form-dialog-wrapper.component.ts","./src/app/core/form-dialog/form-dialog-wrapper/form-dialog-wrapper.component.html","./src/app/core/form-dialog/form-dialog.module.ts","./src/app/core/form-dialog/form-dialog.service.ts","./src/app/core/help/help.module.ts","./src/app/core/help/how-to/how-to.component.ts","./src/app/core/help/how-to/how-to.component.html","./src/app/core/latest-changes/app-version/app-version.component.ts","./src/app/core/latest-changes/app-version/app-version.component.html","./src/app/core/latest-changes/changelog/changelog.component.ts","./src/app/core/latest-changes/changelog/changelog.component.html","./src/app/core/latest-changes/latest-changes-dialog.service.ts","./src/app/core/latest-changes/latest-changes.module.ts","./src/app/core/latest-changes/latest-changes.service.ts","./src/app/core/latest-changes/update-manager.service.ts","./src/app/core/logging/log-level.ts","./src/app/core/logging/logging-error-handler.ts","./src/app/core/logging/logging.service.ts","./src/app/core/navigation/menu-item.ts","./src/app/core/navigation/navigation-items.service.ts","./src/app/core/navigation/navigation.module.ts","./src/app/core/navigation/navigation/navigation.component.ts","./src/app/core/navigation/navigation/navigation.component.html","./src/app/core/session/logged-in-guard/logged-in.guard.ts","./src/app/core/session/login/login.component.ts","./src/app/core/session/login/login.component.html","./src/app/core/session/session-service/local-session.ts","./src/app/core/session/session-service/mock-session.service.ts","./src/app/core/session/session-service/remote-session.ts","./src/app/core/session/session-service/session.service.ts","./src/app/core/session/session-service/synced-session.service.ts","./src/app/core/session/session-states/connection-state.enum.ts","./src/app/core/session/session-states/login-state.enum.ts","./src/app/core/session/session-states/state-handler.ts","./src/app/core/session/session-states/sync-state.enum.ts","./src/app/core/session/session.module.ts","./src/app/core/session/session.service.provider.ts","./src/app/core/sync-status/background-processing-indicator/background-processing-indicator.component.ts","./src/app/core/sync-status/background-processing-indicator/background-processing-indicator.component.html","./src/app/core/sync-status/sync-status.module.ts","./src/app/core/sync-status/sync-status/initial-sync-dialog.component.ts","./src/app/core/sync-status/sync-status/initial-sync-dialog.component.html","./src/app/core/sync-status/sync-status/sync-status.component.ts","./src/app/core/sync-status/sync-status/sync-status.component.html","./src/app/core/ui/primary-action/primary-action.component.ts","./src/app/core/ui/primary-action/primary-action.component.html","./src/app/core/ui/search/search.component.ts","./src/app/core/ui/search/search.component.html","./src/app/core/ui/ui.module.ts","./src/app/core/ui/ui/ui.component.ts","./src/app/core/ui/ui/ui.component.html","./src/app/core/user/demo-user-generator.service.ts","./src/app/core/user/user-account/user-account.component.ts","./src/app/core/user/user-account/user-account.component.html","./src/app/core/user/user.module.ts","./src/app/core/user/user.ts","./src/app/core/webdav/cloud-file-service-user-settings/cloud-file-service-user-settings.component.ts","./src/app/core/webdav/cloud-file-service-user-settings/cloud-file-service-user-settings.component.html","./src/app/core/webdav/cloud-file-service.service.ts","./src/app/core/webdav/webdav.module.ts","./src/app/utils/utils.ts","./src/environments/environment.ts","./src/main.ts","webpack:///util (ignored)?92aa","webpack:///buffer (ignored)?a8ac","webpack:///buffer (ignored)?45a0","buffer (ignored)","webpack:///buffer (ignored)?d019","webpack:///buffer (ignored)?d39f","webpack:///buffer (ignored)?c85e","webpack:///util (ignored)?7ad5","util (ignored)","webpack:///util (ignored)?bf05","webpack:///buffer (ignored)?d6e6","webpack:///buffer (ignored)?cdc4","crypto (ignored)","webpack:///util (ignored)?3849","webpack:///util (ignored)?81aa"],"names":[],"mappings":"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AAE,GAAG,EAAE,CAAC;IAC5B,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC1B,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC3B,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC3B,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC3B,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC7B,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC3B,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC7B,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5B,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC9B,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5B,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC9B,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5B,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC9B,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE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","file":"main.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit, ViewContainerRef } from \"@angular/core\";\nimport { AppConfig } from \"./core/app-config/app-config\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DemoDataGeneratingProgressDialogComponent } from \"./core/demo-data/demo-data-generating-progress-dialog.component\";\nimport { AnalyticsService } from \"./core/analytics/analytics.service\";\n\n/**\n * Component as the main entry point for the app.\n * Actual logic and UI structure is defined in other modules.\n */\n@Component({\n  selector: \"app-root\",\n  template: \"<app-ui></app-ui>\",\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private viewContainerRef: ViewContainerRef, // need this small hack in order to catch application root view container ref\n    private dialog: MatDialog,\n    private analyticsService: AnalyticsService\n  ) {\n    analyticsService.init();\n  }\n\n  ngOnInit() {\n    this.loadDemoData();\n  }\n\n  // TODO: move loading of demo data to a more suitable place\n  private loadDemoData() {\n    if (AppConfig.settings.database.useTemporaryDatabase) {\n      DemoDataGeneratingProgressDialogComponent.loadDemoDataWithLoadingDialog(\n        this.dialog\n      );\n    }\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { APP_INITIALIZER, ErrorHandler, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppComponent } from \"./app.component\";\nimport { UiModule } from \"./core/ui/ui.module\";\nimport { AppConfigModule } from \"./core/app-config/app-config.module\";\nimport { routing } from \"./app.routing\";\nimport { AlertsModule } from \"./core/alerts/alerts.module\";\nimport { SessionModule } from \"./core/session/session.module\";\nimport { SyncStatusModule } from \"./core/sync-status/sync-status.module\";\nimport { NavigationModule } from \"./core/navigation/navigation.module\";\nimport { LatestChangesModule } from \"./core/latest-changes/latest-changes.module\";\nimport { UserModule } from \"./core/user/user.module\";\n\nimport { DashboardModule } from \"./child-dev-project/dashboard/dashboard.module\";\nimport { ChildrenModule } from \"./child-dev-project/children/children.module\";\nimport { SchoolsModule } from \"./child-dev-project/schools/schools.module\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { ServiceWorkerModule } from \"@angular/service-worker\";\nimport { environment } from \"../environments/environment\";\nimport { MatIconModule, MatIconRegistry } from \"@angular/material/icon\";\nimport { AdminModule } from \"./core/admin/admin.module\";\nimport { EntityModule } from \"./core/entity/entity.module\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { HelpModule } from \"./core/help/help.module\";\nimport { DemoDataModule } from \"./core/demo-data/demo-data.module\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { LoggingErrorHandler } from \"./core/logging/logging-error-handler\";\nimport { DemoChildGenerator } from \"./child-dev-project/children/demo-data-generators/demo-child-generator.service\";\nimport { DemoSchoolGenerator } from \"./child-dev-project/schools/demo-school-generator.service\";\nimport { DemoChildSchoolRelationGenerator } from \"./child-dev-project/children/demo-data-generators/demo-child-school-relation-generator.service\";\nimport { DemoAttendanceGenerator } from \"./child-dev-project/attendance/demo-attendance-generator.service\";\nimport { DemoNoteGeneratorService } from \"./child-dev-project/notes/demo-data/demo-note-generator.service\";\nimport { DemoAserGeneratorService } from \"./child-dev-project/aser/demo-aser-generator.service\";\nimport { DemoEducationalMaterialGeneratorService } from \"./child-dev-project/educational-material/demo-educational-material-generator.service\";\nimport { DemoHealthCheckGeneratorService } from \"./child-dev-project/health-checkup/demo-data/demo-health-check-generator.service\";\nimport { DemoWidgetGeneratorService } from \"./child-dev-project/dashboard/demo-widget-generator.service\";\nimport { DemoUserGeneratorService } from \"./core/user/demo-user-generator.service\";\nimport { ConfirmationDialogModule } from \"./core/confirmation-dialog/confirmation-dialog.module\";\nimport { FormDialogModule } from \"./core/form-dialog/form-dialog.module\";\nimport { LoggingService } from \"./core/logging/logging.service\";\nimport { Angulartics2Module } from \"angulartics2\";\nimport { AnalyticsService } from \"./core/analytics/analytics.service\";\nimport { Angulartics2Piwik } from \"angulartics2/piwik\";\nimport { ConfigService } from \"./core/config/config.service\";\n\nexport function configFactory(configService: ConfigService) {\n  return (): Promise<any> => configService.loadConfig();\n}\n\n/**\n * Main entry point of the application.\n * Imports required modules and does basic setup.\n * Real functionality should be implemented in separate modules and imported here rather than being part of this module.\n */\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    ServiceWorkerModule.register(\"/ngsw-worker.js\", {\n      enabled: environment.production,\n    }),\n    Angulartics2Module.forRoot({\n      developerMode: !environment.production,\n    }),\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    routing,\n    FormsModule,\n    ConfirmationDialogModule,\n    FormDialogModule,\n    AlertsModule,\n    EntityModule,\n    AppConfigModule,\n    SessionModule,\n    UiModule,\n    SyncStatusModule,\n    LatestChangesModule,\n    NavigationModule,\n    UserModule,\n    DashboardModule,\n    ChildrenModule,\n    SchoolsModule,\n    AdminModule,\n    MatIconModule,\n    HelpModule,\n    MatNativeDateModule,\n    DemoDataModule.forRoot([\n      ...DemoChildGenerator.provider({ count: 150 }),\n      ...DemoSchoolGenerator.provider({ count: 8 }),\n      ...DemoChildSchoolRelationGenerator.provider(),\n      ...DemoAttendanceGenerator.provider(),\n      ...DemoNoteGeneratorService.provider({\n        minNotesPerChild: 2,\n        maxNotesPerChild: 10,\n        groupNotes: 3,\n      }),\n      ...DemoAserGeneratorService.provider(),\n      ...DemoEducationalMaterialGeneratorService.provider({\n        minCount: 3,\n        maxCount: 8,\n      }),\n      ...DemoHealthCheckGeneratorService.provider(),\n      ...DemoWidgetGeneratorService.provider(),\n      ...DemoUserGeneratorService.provider(),\n    ]),\n  ],\n  providers: [\n    { provide: ErrorHandler, useClass: LoggingErrorHandler },\n    MatIconRegistry,\n    CookieService,\n    AnalyticsService,\n    Angulartics2Piwik,\n    ConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: configFactory,\n      deps: [ConfigService],\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n  constructor(public matIconRegistry: MatIconRegistry) {\n    matIconRegistry.registerFontClassAlias(\"fontawesome\", \"fa\");\n    matIconRegistry.setDefaultFontSetClass(\"fa\");\n  }\n}\n\n// Initialize remote logging\nLoggingService.initRemoteLogging({\n  dsn: environment.remoteLoggingDsn,\n  whitelistUrls: [/https?:\\/\\/(.*)\\.?aam-digital\\.com/],\n});\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ModuleWithProviders } from \"@angular/core\";\nimport { DashboardComponent } from \"./child-dev-project/dashboard/dashboard/dashboard.component\";\nimport { SchoolsListComponent } from \"./child-dev-project/schools/schools-list/schools-list.component\";\nimport { SchoolDetailsComponent } from \"./child-dev-project/schools/school-details/school-details.component\";\nimport { ChildDetailsComponent } from \"./child-dev-project/children/child-details/child-details.component\";\nimport { UserAccountComponent } from \"./core/user/user-account/user-account.component\";\nimport { ChildrenListComponent } from \"./child-dev-project/children/children-list/children-list.component\";\nimport { ChildAttendanceComponent } from \"./child-dev-project/attendance/child-attendance/child-attendance.component\";\nimport { AdminComponent } from \"./core/admin/admin/admin.component\";\nimport { AdminGuard } from \"./core/admin/admin.guard\";\nimport { NotesManagerComponent } from \"./child-dev-project/notes/notes-manager/notes-manager.component\";\nimport { AddMonthAttendanceComponent } from \"./child-dev-project/attendance/add-month-attendance/add-month-attendance.component\";\nimport { AddDayAttendanceComponent } from \"./child-dev-project/attendance/add-day-attendance/add-day-attendance.component\";\nimport { AttendanceManagerComponent } from \"./child-dev-project/attendance/attendance-manager/attendance-manager.component\";\nimport { HowToComponent } from \"./core/help/how-to/how-to.component\";\nimport { UserListComponent } from \"./core/admin/user-list/user-list.component\";\nimport { AttendanceAnalysisComponent } from \"./child-dev-project/attendance/attendance-analysis/attendance-analysis.component\";\n\nconst nameComponentMap = {\n  Dashboard: DashboardComponent,\n  UserAccount: UserAccountComponent,\n  NotesManager: NotesManagerComponent,\n  UserList: UserListComponent,\n  Help: HowToComponent,\n  AttendanceManager: AttendanceManagerComponent,\n  AddMonthAttendance: AddMonthAttendanceComponent,\n  AddDayAttendance: AddDayAttendanceComponent,\n  SchoolsList: SchoolsListComponent,\n  SchoolDetails: SchoolDetailsComponent,\n  ChildrenList: ChildrenListComponent,\n  ChildDetails: ChildDetailsComponent,\n  ChildAttendance: ChildAttendanceComponent,\n};\n\nfunction createRoutes(): Routes {\n  return [];\n}\n\n/**\n * All routes configured for the main app routing.\n */\nexport const routes: Routes = [\n  { path: \"\", component: DashboardComponent },\n  { path: \"user\", component: UserAccountComponent },\n  { path: \"school\", component: SchoolsListComponent },\n  { path: \"school/:id\", component: SchoolDetailsComponent },\n  { path: \"child\", component: ChildrenListComponent },\n  { path: \"child/:id\", component: ChildDetailsComponent },\n  { path: \"child/:id/attendance\", component: ChildAttendanceComponent },\n  { path: \"note\", component: NotesManagerComponent },\n  { path: \"attendance\", component: AttendanceManagerComponent },\n  { path: \"attendance/analysis\", component: AttendanceAnalysisComponent },\n  { path: \"attendance/add/month\", component: AddMonthAttendanceComponent },\n  { path: \"attendance/add/day\", component: AddDayAttendanceComponent },\n  { path: \"admin\", component: AdminComponent, canActivate: [AdminGuard] },\n  { path: \"users\", component: UserListComponent, canActivate: [AdminGuard] },\n  {\n    path: \"admin/conflicts\",\n    canActivate: [AdminGuard],\n    loadChildren: () =>\n      import(\"./conflict-resolution/conflict-resolution.module\").then(\n        (m) => m[\"ConflictResolutionModule\"]\n      ),\n  },\n  { path: \"help\", component: HowToComponent },\n  { path: \"**\", redirectTo: \"/\" },\n];\n\n/**\n * Main app RouterModule with centrally configured routes.\n */\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { DatePipe } from \"@angular/common\";\nimport { Aser } from \"../model/aser\";\nimport { ColumnDescription } from \"../../../core/entity-subrecord/entity-subrecord/column-description\";\nimport { ChildrenService } from \"../../children/children.service\";\nimport { ColumnDescriptionInputType } from \"../../../core/entity-subrecord/entity-subrecord/column-description-input-type.enum\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-aser\",\n  template:\n    '<app-entity-subrecord [records]=\"records\" [columns]=\"columns\" [newRecordFactory]=\"generateNewRecordFactory()\">' +\n    \"</app-entity-subrecord>\",\n})\nexport class AserComponent implements OnInit {\n  childId: string;\n  records: Array<Aser>;\n\n  columns: Array<ColumnDescription> = [\n    new ColumnDescription(\n      \"date\",\n      \"Date\",\n      ColumnDescriptionInputType.DATE,\n      null,\n      (v: Date) => this.datePipe.transform(v, \"yyyy-MM-dd\"),\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"math\",\n      \"Math\",\n      ColumnDescriptionInputType.SELECT,\n      Aser.MathLevels.map((s) => {\n        return { value: s, label: s };\n      }),\n      undefined,\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"english\",\n      \"English\",\n      ColumnDescriptionInputType.SELECT,\n      Aser.ReadingLevels.map((s) => {\n        return { value: s, label: s };\n      }),\n      undefined,\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"hindi\",\n      \"Hindi\",\n      ColumnDescriptionInputType.SELECT,\n      Aser.ReadingLevels.map((s) => {\n        return { value: s, label: s };\n      }),\n      undefined,\n      \"md\"\n    ),\n    new ColumnDescription(\n      \"bengali\",\n      \"Bengali\",\n      ColumnDescriptionInputType.SELECT,\n      Aser.ReadingLevels.map((s) => {\n        return { value: s, label: s };\n      }),\n      undefined,\n      \"md\"\n    ),\n    new ColumnDescription(\n      \"remarks\",\n      \"Remarks\",\n      ColumnDescriptionInputType.TEXT,\n      null,\n      undefined,\n      \"md\"\n    ),\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private childrenService: ChildrenService,\n    private datePipe: DatePipe\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.pipe(untilDestroyed(this)).subscribe((params) => {\n      this.childId = params.get(\"id\").toString();\n      this.loadData(this.childId);\n    });\n  }\n\n  loadData(id: string) {\n    this.childrenService\n      .getAserResultsOfChild(id)\n      .pipe(untilDestroyed(this))\n      .subscribe((results) => {\n        this.records = results.sort(\n          (a, b) =>\n            (b.date ? b.date.valueOf() : 0) - (a.date ? a.date.valueOf() : 0)\n        );\n      });\n  }\n\n  generateNewRecordFactory() {\n    // define values locally because \"this\" is a different scope after passing a function as input to another component\n    const child = this.childId;\n\n    return () => {\n      const newAtt = new Aser(Date.now().toString());\n      newAtt.date = new Date();\n      newAtt.child = child;\n\n      return newAtt;\n    };\n  }\n}\n","import { DemoChildGenerator } from \"../children/demo-data-generators/demo-child-generator.service\";\nimport { DemoDataGenerator } from \"../../core/demo-data/demo-data-generator\";\nimport { Injectable } from \"@angular/core\";\nimport { Child } from \"../children/model/child\";\nimport { faker } from \"../../core/demo-data/faker\";\nimport { WarningLevel } from \"../warning-level\";\nimport { Aser } from \"./model/aser\";\n\n/**\n * Generate ASER results every 12 months for each Child until passing.\n * Builds upon the generated demo Child entities.\n */\n@Injectable()\nexport class DemoAserGeneratorService extends DemoDataGenerator<Aser> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoAserGeneratorService.provider()]`\n   */\n  static provider() {\n    return [\n      { provide: DemoAserGeneratorService, useClass: DemoAserGeneratorService },\n    ];\n  }\n\n  constructor(private demoChildren: DemoChildGenerator) {\n    super();\n  }\n\n  public generateEntities(): Aser[] {\n    const data = [];\n\n    for (const child of this.demoChildren.entities) {\n      data.push(...this.generateAserResultsForChild(child));\n    }\n\n    return data;\n  }\n\n  private generateAserResultsForChild(child: Child): Aser[] {\n    const data = [];\n\n    let date = new Date(child.admissionDate.getTime());\n    let previousResult = new Aser(\"\");\n    const firstLanguage = child.motherTongue.toLowerCase();\n    do {\n      const aserResult = new Aser(faker.random.uuid());\n      aserResult.child = child.getId();\n      aserResult.date = date;\n      aserResult.math = this.selectNextSkillLevel(\n        Aser.MathLevels,\n        previousResult.math\n      );\n      aserResult.english = this.selectNextSkillLevel(\n        Aser.ReadingLevels,\n        previousResult.english\n      );\n      aserResult[firstLanguage] = this.selectNextSkillLevel(\n        Aser.ReadingLevels,\n        previousResult[firstLanguage]\n      );\n\n      data.push(aserResult);\n\n      date = new Date(date.getFullYear() + 1, 2, 1);\n      previousResult = aserResult;\n    } while (\n      date < faker.getEarlierDateOrToday(child.dropoutDate) &&\n      previousResult.getWarningLevel() !== WarningLevel.OK\n    );\n\n    return data;\n  }\n\n  /**\n   * Randomly select the next Aser level for a skill based on the previous result.\n   * @param skillRange The array of skill levels for the desired subject (Aser.MathLevels or Aser.ReadingLevels)\n   * @param previousSkillLevel The string indicating the level from the previous test for this subject\n   */\n  private selectNextSkillLevel(\n    skillRange: string[],\n    previousSkillLevel: string\n  ): string {\n    const previousSkillLevelIndex = skillRange.indexOf(previousSkillLevel);\n\n    let nextSkillLevelIndex;\n    const random = faker.random.number(100);\n    if (random < 20) {\n      nextSkillLevelIndex = previousSkillLevelIndex;\n    } else if (random < 90) {\n      nextSkillLevelIndex = previousSkillLevelIndex + 1;\n    } else {\n      nextSkillLevelIndex = previousSkillLevelIndex + 2;\n    }\n\n    return skillRange[this.trimToValidIndex(nextSkillLevelIndex, skillRange)];\n  }\n\n  /**\n   * Convert the given number to a valid index of the array by capping it to a range of [0, array.lenght -1]\n   * @param index\n   * @param array\n   */\n  private trimToValidIndex(index: number, array: any[]) {\n    if (index < 0) {\n      return 0;\n    }\n    return Math.min(index, array.length - 1);\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Entity } from \"../../../core/entity/entity\";\nimport { WarningLevel } from \"../../warning-level\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\n\n@DatabaseEntity(\"Aser\")\nexport class Aser extends Entity {\n  static ReadingLevels = [\n    \"Nothing\",\n    \"Read Letters\",\n    \"Read Words\",\n    \"Read Sentence\",\n    \"Read Paragraph\",\n  ];\n  static MathLevels = [\n    \"Nothing\",\n    \"Numbers 1-9\",\n    \"Numbers 10-99\",\n    \"Subtraction\",\n    \"Division\",\n  ];\n\n  static isReadingPassedOrNA(level: string) {\n    if (level === \"\" || level === undefined) {\n      // not applicable\n      return true;\n    }\n    if (level === this.ReadingLevels[4]) {\n      // passed highest level\n      return true;\n    }\n    return false;\n  }\n  static isMathPassedOrNA(level: string) {\n    if (level === \"\" || level === undefined) {\n      // not applicable\n      return true;\n    }\n    if (level === this.MathLevels[4]) {\n      // passed highest level\n      return true;\n    }\n    return false;\n  }\n\n  @DatabaseField() child: string; // id of Child entity\n  @DatabaseField() date: Date = new Date();\n  @DatabaseField() hindi: string = \"\";\n  @DatabaseField() bengali: string = \"\";\n  @DatabaseField() english: string = \"\";\n  @DatabaseField() math: string = \"\";\n  @DatabaseField() remarks: string = \"\";\n\n  getWarningLevel(): WarningLevel {\n    let warningLevel = WarningLevel.NONE;\n\n    if (\n      Aser.isReadingPassedOrNA(this.english) &&\n      Aser.isReadingPassedOrNA(this.hindi) &&\n      Aser.isReadingPassedOrNA(this.bengali) &&\n      Aser.isMathPassedOrNA(this.math)\n    ) {\n      warningLevel = WarningLevel.OK;\n    } else {\n      warningLevel = WarningLevel.WARNING;\n    }\n\n    return warningLevel;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Child } from \"../../children/model/child\";\n\n@Component({\n  selector: \"app-add-day-attendance\",\n  templateUrl: \"./add-day-attendance.component.html\",\n  styleUrls: [\"./add-day-attendance.component.scss\"],\n})\nexport class AddDayAttendanceComponent {\n  currentStage = 0;\n\n  day = new Date();\n  attendanceType: string;\n  students: Child[] = [];\n\n  stages = [\"Setup Roll Call\", \"Select Student Group\", \"Roll Call\"];\n\n  constructor() {}\n\n  finishBasicInformationStage() {\n    this.currentStage = 1;\n  }\n\n  finishStudentSelectionStage(selectedStudents: Child[]) {\n    this.students = selectedStudents;\n\n    this.currentStage = 2;\n  }\n\n  finishRollCallState() {\n    this.currentStage = 0;\n  }\n}\n","<h1>Add Daily Attendance</h1>\n<h2>{{stages[currentStage]}}</h2>\n\n\n<div *ngIf='currentStage===0' fxLayout='column' fxLayoutAlign='space-around start'>\n  <mat-form-field>\n    <input matInput placeholder=\"Date\" [value]='day' (dateChange)='day=$event.target.value' [matDatepicker]=\"addDayAttendanceDatepicker\">\n    <mat-datepicker-toggle matSuffix [for]=\"addDayAttendanceDatepicker\"></mat-datepicker-toggle>\n    <mat-datepicker #addDayAttendanceDatepicker></mat-datepicker>\n  </mat-form-field>\n\n  <div class='form-field' fxFlex>\n    <mat-button-toggle-group name=\"attendanceType\" [(ngModel)]=\"attendanceType\">\n      <mat-button-toggle value=\"school\">School Attendance</mat-button-toggle>\n      <mat-button-toggle value=\"coaching\">Coaching Attendance</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n\n  <button mat-stroked-button (click)='finishBasicInformationStage()' [disabled]='!attendanceType || !day' fxFlex>\n    Continue\n  </button>\n</div>\n\n\n<div *ngIf='currentStage===1' fxLayout='column'>\n  <app-select-group-children (valueChange)='finishStudentSelectionStage($event)'>\n  </app-select-group-children>\n\n\n  <button mat-stroked-button (click)='currentStage = currentStage - 1' class='nav-button' fxFlex>\n    Back\n  </button>\n</div>\n\n\n\n\n<div *ngIf='currentStage===2'>\n  <app-roll-call [day]='day' [attendanceType]='attendanceType' [students]='students'\n                 (complete)='finishRollCallState()'>\n  </app-roll-call>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AttendanceStatus } from \"../../model/attendance-day\";\nimport { EntityMapperService } from \"../../../../core/entity/entity-mapper.service\";\nimport { Child } from \"../../../children/model/child\";\nimport { AttendanceMonth } from \"../../model/attendance-month\";\nimport { ChildrenService } from \"../../../children/children.service\";\nimport { RollCallRecord } from \"./roll-call-record\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport { AppConfig } from \"../../../../core/app-config/app-config\";\n\n/**\n * Displays the given children one by one to the user to mark the attendance status for the given day and type.\n * This component itself handles the loading and saving of the attendances entities internally.\n */\n@Component({\n  selector: \"app-roll-call\",\n  templateUrl: \"./roll-call.component.html\",\n  styleUrls: [\"./roll-call.component.scss\"],\n  animations: [\n    trigger(\"completeRollCall\", [\n      transition(\"void => *\", [\n        style({ backgroundColor: \"white\" }),\n        animate(1000),\n      ]),\n    ]),\n  ],\n})\nexport class RollCallComponent implements OnInit {\n  /**\n   * The day for which attendance will be recorded\n   */\n  @Input() day: Date;\n\n  /**\n   * The attendance type to be checked and saved (e.g. 'coaching' or 'school')\n   */\n  @Input() attendanceType: string;\n\n  /**\n   * The children for whom attendance will be recorded\n   */\n  @Input() students: Child[] = [];\n\n  /**\n   * Event emitted when the roll call is finished (or aborted).\n   */\n  @Output() complete = new EventEmitter();\n\n  isLoading: boolean = true;\n  currentIndex: number;\n  rollCallList: RollCallRecord[] = [];\n\n  AttStatus = AttendanceStatus;\n\n  showDebug = AppConfig.settings.debug;\n  debugContent: any;\n\n  constructor(\n    private entityMapper: EntityMapperService,\n    private childrenService: ChildrenService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadList();\n  }\n\n  private async loadList() {\n    this.isLoading = true;\n\n    this.rollCallList = await this.loadMonthAttendanceRecords(this.students);\n    this.sortRollCallList();\n\n    this.goToNextStudent(0);\n\n    this.isLoading = false;\n  }\n\n  private async loadMonthAttendanceRecords(\n    children: Child[]\n  ): Promise<RollCallRecord[]> {\n    const rollCallRecords: RollCallRecord[] = [];\n\n    const attendances = await this.childrenService\n      .getAttendancesOfMonth(this.day)\n      .toPromise();\n    children.forEach((child) => {\n      let attMonth: AttendanceMonth = attendances.find(\n        (a) =>\n          a.student === child.getId() && a.institution === this.attendanceType\n      );\n      if (attMonth === undefined) {\n        attMonth = AttendanceMonth.createAttendanceMonth(\n          child.getId(),\n          this.attendanceType\n        );\n        attMonth.month = new Date(this.day.getTime());\n      }\n\n      const attDay = attMonth.dailyRegister.find(\n        (d) =>\n          d.date.getDate() === this.day.getDate() &&\n          d.date.getMonth() === this.day.getMonth() &&\n          d.date.getFullYear() === this.day.getFullYear()\n      );\n\n      rollCallRecords.push({\n        child: child,\n        attendanceMonth: attMonth,\n        attendanceDay: attDay,\n      });\n    });\n\n    return rollCallRecords;\n  }\n\n  private sortRollCallList() {\n    this.rollCallList.sort((a: RollCallRecord, b: RollCallRecord) => {\n      if (a.child.schoolClass === b.child.schoolClass) {\n        return 0;\n      }\n\n      const diff =\n        parseInt(a.child.schoolClass, 10) - parseInt(b.child.schoolClass, 10);\n      if (!Number.isNaN(diff)) {\n        return diff;\n      }\n\n      if (\n        a.child.schoolClass < b.child.schoolClass ||\n        b.child.schoolClass === undefined\n      ) {\n        return -1;\n      }\n      return 1;\n    });\n  }\n\n  markAttendance(status: AttendanceStatus) {\n    const rollCallListEntry = this.rollCallList[this.currentIndex];\n    rollCallListEntry.attendanceDay.status = status;\n    this.entityMapper.save(rollCallListEntry.attendanceMonth);\n\n    setTimeout(() => this.goToNextStudent(), 750);\n  }\n\n  goToNextStudent(newIndex?: number) {\n    if (newIndex !== undefined) {\n      this.currentIndex = newIndex;\n    } else {\n      this.currentIndex++;\n    }\n\n    this.displayRecordForDebugging(this.rollCallList[this.currentIndex]);\n  }\n\n  endRollCall() {\n    this.complete.emit();\n  }\n\n  isFinished(): boolean {\n    return this.currentIndex >= this.rollCallList.length;\n  }\n\n  displayRecordForDebugging(rollCallRecord: RollCallRecord) {\n    if (!rollCallRecord) {\n      return;\n    }\n\n    console.log(rollCallRecord);\n    this.debugContent = JSON.stringify(rollCallRecord.attendanceDay, null, 2);\n  }\n}\n","<div *ngIf='isLoading'>\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  <div>Loading attendance list ...</div>\n</div>\n\n<div *ngIf='!isLoading'>\n\n  <!-- Individual Student's Page -->\n  <div *ngFor='let entry of rollCallList; let i = index' [ngClass]='{\"hidden\": (currentIndex!==i)}'>\n    <app-child-block [entity]='entry.child'></app-child-block>\n\n    <div fxLayout='column' fxLayoutAlign='space-between stretch' class='options-wrapper'>\n      <div class='group-select-option'\n           (click)='markAttendance(AttStatus.PRESENT)'\n           [ngClass]=\"{'attendance-P': entry.attendanceDay.status===AttStatus.PRESENT}\">\n        <span class='fa fa-check' *ngIf='entry.attendanceDay.status===AttStatus.PRESENT'></span>\n        Present\n      </div>\n      <div class='group-select-option'\n           (click)='markAttendance(AttStatus.ABSENT)'\n           [ngClass]=\"{'attendance-A': entry.attendanceDay.status===AttStatus.ABSENT}\">\n        <span class='fa fa-check' *ngIf='entry.attendanceDay.status===AttStatus.ABSENT'></span>\n        Absent\n      </div>\n      <div class='group-select-option'\n           (click)='markAttendance(AttStatus.LATE)'\n           [ngClass]=\"{'attendance-L': entry.attendanceDay.status===AttStatus.LATE}\">\n        <span class='fa fa-check' *ngIf='entry.attendanceDay.status===AttStatus.LATE'></span>\n        Late\n      </div>\n      <div class='group-select-option'\n           (click)='markAttendance(AttStatus.HOLIDAY)'\n           [ngClass]=\"{'attendance-H': entry.attendanceDay.status===AttStatus.HOLIDAY}\">\n        <span class='fa fa-check' *ngIf='entry.attendanceDay.status===AttStatus.HOLIDAY'></span>\n        Holiday\n      </div>\n      <div class='group-select-option'\n           (click)='markAttendance(AttStatus.EXCUSED)'\n           [ngClass]=\"{'attendance-E': entry.attendanceDay.status===AttStatus.EXCUSED}\">\n        <span class='fa fa-check' *ngIf='entry.attendanceDay.status===AttStatus.EXCUSED'></span>\n        Excused\n      </div>\n      <div class='group-select-option'\n           (click)='markAttendance(AttStatus.UNKNOWN)'\n           [ngClass]=\"{'attendance-U': entry.attendanceDay.status===AttStatus.UNKNOWN}\">\n        Skip\n      </div>\n    </div>\n\n  </div>\n\n\n  <!-- Completion Page -->\n  <div *ngIf='isFinished()' class='roll-call-complete' [@completeRollCall]>\n    <span class='fa fa-check-circle-o roll-call-complete-icon'></span><br>\n    Roll call completed.\n  </div>\n\n\n  <!-- Control Buttons -->\n  <div>\n    <button mat-stroked-button [disabled]='currentIndex < 1' (click)='currentIndex = currentIndex - 1'\n            class='nav-button' fxFlex>\n      Back\n    </button>\n\n    <button mat-stroked-button *ngIf='!isFinished()' (click)='endRollCall()' class='nav-button' fxFlex>\n      Abort\n    </button>\n\n    <button mat-stroked-button *ngIf='isFinished()' (click)='endRollCall()' class='nav-button' fxFlex>\n      <b>Finish</b>\n    </button>\n  </div>\n\n  <!-- Additional information for debugging issues -->\n  <mat-card *ngIf='showDebug'>\n    <mat-card-title>Debugging Information</mat-card-title>\n    <mat-card-content>\n      <p>Day: <em>{{day}}</em></p>\n      <p>Current Record: <em>{{debugContent}}</em></p>\n    </mat-card-content>\n  </mat-card>\n\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\nimport { Child } from \"../../children/model/child\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { AttendanceMonth } from \"../model/attendance-month\";\nimport { ConfirmationDialogService } from \"../../../core/confirmation-dialog/confirmation-dialog.service\";\nimport { AlertService } from \"../../../core/alerts/alert.service\";\nimport { ChildrenService } from \"../../children/children.service\";\nimport { School } from \"../../schools/model/school\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-add-month-attendance\",\n  templateUrl: \"./add-month-attendance.component.html\",\n  styleUrls: [\"./add-month-attendance.component.scss\"],\n})\nexport class AddMonthAttendanceComponent implements OnInit {\n  schools = new Array<School>();\n  centers = new Array<string>();\n\n  children = new Array<Child>();\n  childrenBySchool = new Map<string, Child[]>();\n  childrenByCenter = new Map<string, Child[]>();\n\n  attendanceDataSource = new MatTableDataSource();\n  columnsToDisplay = [\n    \"student\",\n    \"daysAttended\",\n    \"daysExcused\",\n    \"remarks\",\n    \"daysWorking\",\n  ];\n  loadingExistingRecords = false;\n\n  attendanceType = \"school\";\n  school;\n  coachingCenter;\n  workingDays;\n  month;\n\n  constructor(\n    private entityMapper: EntityMapperService,\n    private childrenService: ChildrenService,\n    private confirmDialog: ConfirmationDialogService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.entityMapper\n      .loadType<School>(School)\n      .then((schools) => (this.schools = schools));\n    this.childrenService\n      .getChildren()\n      .pipe(untilDestroyed(this))\n      .subscribe((children) => {\n        this.children = children.filter((c: Child) => c.isActive());\n        this.initChildrenLookupTables(this.children);\n\n        this.centers = children\n          .map((c) => c.center)\n          .filter((value, index, arr) => arr.indexOf(value) === index);\n      });\n  }\n\n  private initChildrenLookupTables(children: Child[]) {\n    this.childrenBySchool = new Map<string, Child[]>();\n    this.childrenByCenter = new Map<string, Child[]>();\n\n    children.forEach((c) => {\n      let arrS = this.childrenBySchool.get(c.schoolId);\n      if (arrS === undefined) {\n        arrS = [];\n        this.childrenBySchool.set(c.schoolId, arrS);\n      }\n      arrS.push(c);\n\n      let arrC = this.childrenByCenter.get(c.center);\n      if (arrC === undefined) {\n        arrC = [];\n        this.childrenByCenter.set(c.center, arrC);\n      }\n      arrC.push(c);\n    });\n  }\n\n  loadTable() {\n    const records = new Array<AttendanceMonth>();\n    this.getFilteredStudents()\n      .sort((a, b) => (a.schoolClass > b.schoolClass ? 1 : -1))\n      .forEach((c: Child) => {\n        const att = AttendanceMonth.createAttendanceMonth(\n          c.getId(),\n          this.attendanceType\n        );\n        att.month = this.month;\n        records.push(att);\n      });\n    this.loadExistingAttendanceRecordIfAvailable(\n      records,\n      this.month,\n      this.attendanceType\n    );\n\n    this.attendanceDataSource.data = records;\n  }\n\n  private getFilteredStudents(): Child[] {\n    let result;\n    if (this.attendanceType === \"school\") {\n      result = this.childrenBySchool.get(this.school);\n    }\n    if (this.attendanceType === \"coaching\") {\n      result = this.childrenByCenter.get(this.coachingCenter);\n    }\n\n    if (result === undefined) {\n      result = [];\n    }\n\n    return result;\n  }\n\n  updateWorkingDays() {\n    this.attendanceDataSource.data.forEach((att: AttendanceMonth) => {\n      if (!att.overridden) {\n        att.daysWorking = this.workingDays;\n      }\n    });\n  }\n\n  updateMonth(event) {\n    this.month = event.target.valueAsDate;\n    this.attendanceDataSource.data.forEach(\n      (att: AttendanceMonth) => (att.month = this.month)\n    );\n  }\n\n  resetOverriddenWorkingDays(att: AttendanceMonth) {\n    if (!att.overridden) {\n      att.daysWorking = this.workingDays;\n    }\n  }\n\n  isDataEnteredComplete() {\n    let okay = true;\n    if (this.month === undefined) {\n      okay = false;\n    }\n\n    this.attendanceDataSource.data.forEach((att: AttendanceMonth) => {\n      if (att.daysAttended === undefined || att.daysWorking === undefined) {\n        okay = false;\n      }\n    });\n\n    return okay;\n  }\n\n  save() {\n    if (!this.isDataEnteredComplete()) {\n      this.confirmDialog.openDialog(\n        \"Incomplete Data\",\n        \"Please complete the information for all students. Excused absences and remarks are optional.\",\n        false\n      );\n      return;\n    }\n\n    this.attendanceDataSource.data.forEach((att: AttendanceMonth) => {\n      this.entityMapper.save(att);\n    });\n    this.alertService.addInfo(\n      this.attendanceDataSource.data.length + \" attendance records saved.\"\n    );\n\n    this.reset();\n  }\n\n  private reset() {\n    this.workingDays = undefined;\n    this.school = undefined;\n    this.coachingCenter = undefined;\n    this.loadTable();\n  }\n\n  private loadExistingAttendanceRecordIfAvailable(\n    recordsToOverwrite: AttendanceMonth[],\n    month: Date,\n    attendanceType: string\n  ) {\n    if (month === undefined) {\n      return;\n    }\n\n    this.loadingExistingRecords = true;\n\n    this.childrenService\n      .getAttendancesOfMonth(this.month)\n      .pipe(untilDestroyed(this))\n      .subscribe((records) => {\n        recordsToOverwrite.forEach((recordToOverwrite) => {\n          const relevantExistingRecords = records.filter(\n            (a: AttendanceMonth) =>\n              a.student === recordToOverwrite.student &&\n              a.institution === attendanceType\n          );\n          if (relevantExistingRecords.length > 0) {\n            Object.assign(recordToOverwrite, relevantExistingRecords[0]);\n            recordToOverwrite.overridden = true;\n          }\n        });\n\n        this.loadingExistingRecords = false;\n      });\n  }\n}\n","<h1>Add Monthly Attendance</h1>\n\n<div fxLayoutGap='10px'>\n  <mat-button-toggle-group name=\"attendanceType\" [(ngModel)]=\"attendanceType\" (valueChange)='loadTable()'>\n    <mat-button-toggle value=\"school\">School</mat-button-toggle>\n    <mat-button-toggle value=\"coaching\">Coaching</mat-button-toggle>\n  </mat-button-toggle-group>\n\n\n  <mat-form-field *ngIf=\"attendanceType === 'school'\" style='width: 300px'>\n    <mat-label>\n      School\n    </mat-label>\n    <mat-select [(ngModel)]='school' (selectionChange)='loadTable()'>\n      <mat-option *ngFor=\"let s of schools\" [value]=\"s.getId()\">\n        <app-school-block [entity]='s' [linkDisabled]='true' class='mat-form-field'></app-school-block>\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field *ngIf=\"attendanceType === 'coaching'\">\n    <mat-label>\n      Center\n    </mat-label>\n    <mat-select [(ngModel)]='coachingCenter' (selectionChange)='loadTable()'>\n      <mat-option *ngFor=\"let center of centers\" [value]='center'>\n        {{center}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div fxLayoutGap='10px'>\n  <mat-form-field>\n    <input matInput placeholder=\"Month\" type=\"month\" (change)='updateMonth($event); loadTable();'>\n  </mat-form-field>\n\n  <mat-form-field>\n    <input matInput [(ngModel)]='workingDays' placeholder=\"Working Days\" type=\"number\" (change)='updateWorkingDays()'>\n  </mat-form-field>\n</div>\n\n<div *ngIf='loadingExistingRecords'>\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  Loading existing attendance records ...\n</div>\n\n<div style='margin-top:20px;'>\n  <table mat-table [dataSource]=\"attendanceDataSource\" matSort class=\"mat-elevation-z8 table-list\">\n    <ng-container matColumnDef=\"student\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Student </th>\n      <td mat-cell *matCellDef=\"let att\"> <app-child-block [entityId]='att.student'></app-child-block></td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"daysAttended\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Attended </th>\n      <td mat-cell *matCellDef=\"let att\">\n        <mat-form-field class='input-number'>\n          <input matInput [(ngModel)]='att.daysAttended' type=\"number\">\n        </mat-form-field>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"daysExcused\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Excused </th>\n      <td mat-cell *matCellDef=\"let att\">\n        <mat-form-field class='input-number'>\n          <input matInput [(ngModel)]='att.daysExcused' type=\"number\">\n        </mat-form-field>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"remarks\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Remarks </th>\n      <td mat-cell *matCellDef=\"let att\">\n        <mat-form-field>\n          <input matInput [(ngModel)]='att.remarks' type=\"text\">\n        </mat-form-field>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"daysWorking\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Working Days </th>\n      <td mat-cell *matCellDef=\"let att\" fxLayoutGap='10px'>\n        <mat-checkbox [(ngModel)]='att.overridden' (change)='resetOverriddenWorkingDays(att)'></mat-checkbox>\n        <mat-form-field class='input-number'>\n          <input matInput [(ngModel)]='att.daysWorking' type=\"number\" [disabled]='!att.overridden'>\n        </mat-form-field>\n      </td>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let att; columns: columnsToDisplay\"></tr>\n  </table>\n\n</div>\n\n<div style='margin-top:20px;'>\n  <button mat-stroked-button (click)='save()'>Save Attendance Records</button>\n</div>\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FilterSelection } from \"../../../core/filter/filter-selection/filter-selection\";\nimport { Child } from \"../../children/model/child\";\nimport { ChildrenService } from \"../../children/children.service\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { AttendanceMonth } from \"../model/attendance-month\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-attendance-analysis\",\n  templateUrl: \"./attendance-analysis.component.html\",\n  styleUrls: [\"./attendance-analysis.component.scss\"],\n})\nexport class AttendanceAnalysisComponent implements OnInit, AfterViewInit {\n  filterFrom: Date;\n  filterUntil: Date;\n  attendanceType = \"\";\n  displayType = \"daily\";\n\n  childrenAll: Child[];\n\n  dataSource = new MatTableDataSource<any>();\n  columnsToDisplay = [\n    \"child\",\n    \"attendanceType\",\n    \"averageAttendance\",\n    \"totalWorking\",\n    \"totalAttended\",\n    \"totalAbsent\",\n    \"totalLate\",\n    \"attendance\",\n    \"recordCount\",\n  ];\n  @ViewChild(MatSort) sort: MatSort;\n  loading = 0;\n\n  centerFS = new FilterSelection(\"center\", []);\n  dropoutFS = new FilterSelection(\"status\", [\n    {\n      key: \"active\",\n      label: \"Current Project Children\",\n      filterFun: (c: Child) => c.isActive(),\n    },\n    {\n      key: \"dropout\",\n      label: \"Dropouts\",\n      filterFun: (c: Child) => !c.isActive(),\n    },\n    { key: \"\", label: \"All\", filterFun: () => true },\n  ]);\n  filterSelections = [this.dropoutFS, this.centerFS];\n\n  constructor(private childrenService: ChildrenService) {}\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnInit() {\n    this.filterFrom = new Date();\n    this.filterFrom.setDate(1);\n    this.filterUntil = new Date();\n    this.filterUntil.setDate(1);\n    this.filterUntil.setMonth(this.filterUntil.getMonth() + 1);\n\n    this.childrenService\n      .getChildren()\n      .pipe(untilDestroyed(this))\n      .subscribe((data) => {\n        this.childrenAll = data.filter((c) => c.isActive());\n        this.initCenterFilterOptions();\n        this.applyFilterSelections();\n      });\n  }\n\n  private initCenterFilterOptions() {\n    const centers = this.childrenAll\n      .map((c) => c.center)\n      .filter((value, index, arr) => arr.indexOf(value) === index);\n\n    const options = [{ key: \"\", label: \"All\", filterFun: (c: Child) => true }];\n\n    centers.forEach((center) => {\n      options.push({\n        key: center.toLowerCase(),\n        label: center,\n        filterFun: (c: Child) => c.center === center,\n      });\n    });\n\n    this.centerFS.options = options;\n  }\n\n  applyFilterSelections() {\n    this.loading = 0;\n    let filteredData = this.childrenAll;\n\n    this.filterSelections.forEach((f) => {\n      filteredData = filteredData.filter(f.getSelectedFilterFunction());\n    });\n\n    let data = [];\n    filteredData.forEach(\n      (child) => (data = data.concat(this.loadChildRecords(child)))\n    );\n\n    this.dataSource.data = data;\n  }\n\n  loadChildRecords(child: Child): any[] {\n    this.loading++;\n    const recordCoaching = {\n      child: child,\n      attendanceType: \"coaching\",\n      attendance: [],\n      averageAttendance: 0,\n    };\n    const recordSchool = {\n      child: child,\n      attendanceType: \"school\",\n      attendance: [],\n      averageAttendance: 0,\n    };\n\n    this.childrenService\n      .getAttendancesOfChild(child.getId())\n      .pipe(untilDestroyed(this))\n      .subscribe((attendances) => {\n        attendances.forEach((att) => {\n          if (\n            this.isLaterOrEqualMonth(att.month, this.filterFrom) &&\n            this.isEarlierOrEqualMonth(att.month, this.filterUntil)\n          ) {\n            if (att.institution === \"school\") {\n              recordSchool.attendance.push(att);\n            } else if (att.institution === \"coaching\") {\n              recordCoaching.attendance.push(att);\n            }\n          }\n        });\n\n        this.calculateRecordStats(recordSchool);\n        this.calculateRecordStats(recordCoaching);\n\n        this.loading--;\n      });\n\n    return [recordSchool, recordCoaching];\n  }\n\n  calculateRecordStats(record) {\n    const stats = record.attendance.reduce(\n      (acc, a: AttendanceMonth) => {\n        if (a.daysWorking > 0) {\n          acc.count++;\n          acc.daysWorking += a.daysWorking;\n          acc.daysAttended += a.daysAttended;\n          acc.daysLate += a.daysLate;\n        }\n        return acc;\n      },\n      { sum: 0, count: 0, daysWorking: 0, daysAttended: 0, daysLate: 0 }\n    );\n    record.recordCount = stats.count;\n    record.averageAttendance = stats.daysAttended / stats.daysWorking;\n    record.totalWorking = stats.daysWorking;\n    record.totalAttended = stats.daysAttended;\n    record.totalAbsent = stats.daysWorking - stats.daysAttended;\n    record.totalLate = stats.daysLate;\n  }\n\n  private isLaterOrEqualMonth(month: Date, filterFrom: Date) {\n    return (\n      month.getFullYear() > filterFrom.getFullYear() ||\n      (month.getFullYear() === filterFrom.getFullYear() &&\n        month.getMonth() >= filterFrom.getMonth())\n    );\n  }\n  private isEarlierOrEqualMonth(month: Date, filterUntil: Date) {\n    return (\n      month.getFullYear() < filterUntil.getFullYear() ||\n      (month.getFullYear() === filterUntil.getFullYear() &&\n        month.getMonth() <= filterUntil.getMonth())\n    );\n  }\n}\n","<h1>Attendance Analysis</h1>\n\n<mat-expansion-panel\n  expanded=\"true\"\n  fxLayout=\"column\"\n  fxLayoutGap=\"10px\"\n  class=\"filter-panel\"\n>\n  <div fxHide.gt-xs>\n    <button mat-raised-button (click)=\"applyFilterSelections()\">\n      Search records\n    </button>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"margin-top: 20px;\">\n    <div>\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"From\"\n          [value]=\"filterFrom\"\n          (dateChange)=\"filterFrom = $event.target.value\"\n          [matDatepicker]=\"attendanceFromDatepicker\"\n        />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"attendanceFromDatepicker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #attendanceFromDatepicker></mat-datepicker>\n      </mat-form-field>\n      <mat-form-field>\n        <input\n          matInput\n          placeholder=\"Until\"\n          [value]=\"filterUntil\"\n          (dateChange)=\"filterUntil = $event.target.value\"\n          [matDatepicker]=\"attendanceUntilDatepicker\"\n        />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"attendanceUntilDatepicker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #attendanceUntilDatepicker></mat-datepicker>\n      </mat-form-field>\n    </div>\n\n    <div *ngIf=\"false\">\n      <mat-button-toggle-group name=\"displayType\" [(value)]=\"displayType\">\n        <mat-button-toggle value=\"daily\">Daily</mat-button-toggle>\n        <mat-button-toggle value=\"monthly\">Monthly</mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n\n    <div *ngIf=\"false\">\n      <mat-button-toggle-group name=\"attendanceType\" [(value)]=\"attendanceType\">\n        <mat-button-toggle value=\"\">Any</mat-button-toggle>\n        <mat-button-toggle value=\"school\">School Attendance</mat-button-toggle>\n        <mat-button-toggle value=\"coaching\"\n          >Coaching Attendance</mat-button-toggle\n        >\n        <mat-button-toggle value=\"none\">Has No Attendance</mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n\n    <div fxHide.lt-sm>\n      <button mat-raised-button (click)=\"applyFilterSelections()\">\n        Search records\n      </button>\n    </div>\n  </div>\n\n  <div\n    fxLayout=\"row wrap\"\n    fxLayoutGap=\"10px\"\n    class=\"filter-button\"\n    fxHide.lt-sm\n  >\n    <mat-button-toggle-group\n      *ngFor=\"let filterSelection of filterSelections\"\n      [name]=\"filterSelection.name\"\n      [value]=\"filterSelection.selectedOption\"\n    >\n      <mat-button-toggle\n        *ngFor=\"let option of filterSelection.options\"\n        [value]=\"option.key\"\n        (click)=\"\n          filterSelection.selectedOption = option.key; applyFilterSelections()\n        \"\n      >\n        {{ option.label }}\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n    <div class=\"align-form-field\">\n      (Showing {{ dataSource.filteredData.length / 2 }} children)\n    </div>\n  </div>\n  <div fxLayout=\"row wrap\" fxHide.gt-xs>\n    <mat-form-field\n      *ngFor=\"let filterSelection of filterSelections\"\n      style=\"padding-right: 1%;\"\n    >\n      <mat-label>{{ filterSelection.name }}</mat-label>\n      <mat-select\n        [id]=\"filterSelection.name\"\n        [value]=\"filterSelection.selectedOption\"\n        placeholder=\"filterSelection.name\"\n      >\n        <mat-option\n          *ngFor=\"let option of filterSelection.options\"\n          [value]=\"option.key\"\n          (click)=\"\n            filterSelection.selectedOption = option.key; applyFilterSelections()\n          \"\n        >\n          {{ option.label }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n</mat-expansion-panel>\n\n<div *ngIf=\"loading > 0\">\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n  <div>Loading data ({{ loading }}) ...</div>\n</div>\n\n<table\n  mat-table\n  [dataSource]=\"dataSource\"\n  matSort\n  class=\"mat-elevation-z8 table-list\"\n>\n  <ng-container matColumnDef=\"child\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Student</th>\n    <td mat-cell *matCellDef=\"let record\">\n      <app-child-block [entity]=\"record.child\"></app-child-block>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"attendanceType\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\n    <td mat-cell *matCellDef=\"let record\">\n      {{ record.attendanceType }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"averageAttendance\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Attendance</th>\n    <td mat-cell *matCellDef=\"let record\">\n      {{ record.averageAttendance | percent: \"1.0-0\" }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"recordCount\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Count</th>\n    <td mat-cell *matCellDef=\"let record\">\n      {{ record.recordCount }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalWorking\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Working Days</th>\n    <td mat-cell *matCellDef=\"let record\">\n      {{ record.totalWorking }}\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"totalAttended\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Attended</th>\n    <td mat-cell *matCellDef=\"let record\">\n      {{ record.totalAttended }}\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"totalAbsent\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Absent</th>\n    <td mat-cell *matCellDef=\"let record\">\n      {{ record.totalAbsent }}\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"totalLate\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Late</th>\n    <td mat-cell *matCellDef=\"let record\">\n      {{ record.totalLate }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"attendance\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Attendance</th>\n    <td mat-cell *matCellDef=\"let record\">\n      <app-attendance-block\n        *ngFor=\"let att of record.attendance\"\n        [attendanceData]=\"att\"\n      ></app-attendance-block>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr\n    mat-row\n    *matRowDef=\"let record; columns: columnsToDisplay; let i = index;\"\n    class=\"table-list-item\"\n    angulartics2On=\"click\"\n    angularticsCategory=\"Navigation\"\n    angularticsAction=\"attendance_manager_list_link\"\n    [angularticsLabel]=\"'list-entry-' + i\"\n  ></tr>\n</table>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { AttendanceMonth } from \"../model/attendance-month\";\n\n@Component({\n  selector: \"app-attendance-block\",\n  templateUrl: \"./attendance-block.component.html\",\n  styleUrls: [\"./attendance-block.component.scss\"],\n})\nexport class AttendanceBlockComponent implements OnInit {\n  @Input() attendanceData: AttendanceMonth;\n  tooltip = false;\n  tooltipTimeout;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  showTooltip() {\n    this.tooltip = true;\n    if (this.tooltipTimeout) {\n      clearTimeout(this.tooltipTimeout);\n    }\n  }\n  hideTooltip() {\n    this.tooltipTimeout = setTimeout(() => (this.tooltip = false), 250);\n  }\n}\n","<span class=\"mat-elevation-z1 attendance-block w-{{attendanceData.getWarningLevel()}}\" (mouseenter)=\"showTooltip()\" (mouseleave)=\"hideTooltip()\">\n  {{attendanceData.getAttendancePercentage() | percent:'1.0-0'}}\n</span>\n\n<div style=\"position:absolute;\" *ngIf=\"tooltip\">\n  <div class=\"mat-elevation-z5 attendance-tooltip\" (mouseenter)=\"showTooltip()\" (mouseleave)=\"hideTooltip()\">\n    <div class=\"attendance-tooltip-header\">{{attendanceData.month | date:'yyyy-MM'}} {{attendanceData.institution}}</div>\n    <div class=\"attendance-tooltip-content\">\n      attended {{attendanceData.daysAttended}} / {{attendanceData.daysWorking-attendanceData.daysExcused}} days\n    </div>\n    <div class=\"attendance-tooltip-content\" *ngIf=\"attendanceData.daysExcused>0\">\n      (excluding {{attendanceData.daysExcused}} days excused)\n    </div>\n    <div>\n      <app-attendance-days [attendanceMonth]='attendanceData'></app-attendance-days>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { AttendanceDay } from \"../model/attendance-day\";\n\n@Component({\n  selector: \"app-attendance-day-block]\",\n  templateUrl: \"./attendance-day-block.component.html\",\n  styleUrls: [\"./attendance-days.component.scss\"],\n})\nexport class AttendanceDayBlockComponent implements OnInit {\n  @Input() entity: AttendanceDay;\n  @Input() showDate = true;\n  @Input() showHighlighted = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class='day-cell attendance-{{entity.status}}' [ngClass]=\"{'selected': showHighlighted}\"\n    [matTooltip]='entity.remarks' matTooltipPosition='above'>\n  <span class='date' *ngIf='showDate'>\n    {{entity.date.getDate()}}\n  </span>\n  <span class='status'>\n    {{entity.status}}\n    <span *ngIf='entity.remarks'>*</span>\n  </span>\n</div>\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n} from \"@angular/core\";\nimport { AttendanceDay, AttendanceStatus } from \"../model/attendance-day\";\nimport { ConfirmationDialogService } from \"../../../core/confirmation-dialog/confirmation-dialog.service\";\nimport { AttendanceMonth } from \"../model/attendance-month\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\nimport { MatSelect } from \"@angular/material/select\";\n\n@Component({\n  selector: \"app-attendance-days\",\n  templateUrl: \"./attendance-days.component.html\",\n  styleUrls: [\"./attendance-days.component.scss\"],\n})\nexport class AttendanceDaysComponent implements OnChanges {\n  @Input() attendanceMonth: AttendanceMonth;\n  records: AttendanceDay[] = [];\n\n  selectedRecord: AttendanceDay;\n  selectedRecordChanged = false;\n\n  private dayStatusSelect: MatSelect;\n  @ViewChild(\"dayStatusSelect\") set content(content: MatSelect) {\n    this.dayStatusSelect = content;\n  }\n\n  statusValues = AttendanceStatus;\n\n  constructor(\n    private dialog: ConfirmationDialogService,\n    private entityMapper: EntityMapperService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.records = this.attendanceMonth.dailyRegister;\n  }\n\n  weekRecordsTrackByFunction = (index: number, item: any) =>\n    item.length > 0 ? item[0].date.getTime() : undefined;\n  recordTrackByFunction = (index: number, item: any) => item.date.getTime();\n\n  getWeeks(): AttendanceDay[] {\n    if (!this.records || this.records.length === 0) {\n      return [];\n    }\n\n    const weeks = [];\n    let currentWeek = [];\n\n    // fill first week with placeholder days if the month doesn't start on a Monday\n    const firstDay = this.records[0].date;\n    let daysUntilFirstOfMonth = firstDay.getDay();\n    if (firstDay.getDay() === 0) {\n      daysUntilFirstOfMonth = 7;\n    } // workaround if first day of month is Sunday\n    for (let i = 1; i < daysUntilFirstOfMonth; i++) {\n      const d = new Date(\n        firstDay.getFullYear(),\n        firstDay.getMonth(),\n        firstDay.getDate() - i\n      );\n      currentWeek.unshift(new AttendanceDay(d));\n    }\n\n    this.records.forEach((day) => {\n      if (day.date.getDay() === 1) {\n        weeks.push(currentWeek);\n        currentWeek = [];\n      }\n      currentWeek.push(day);\n    });\n    weeks.push(currentWeek);\n\n    return weeks;\n  }\n\n  selectCell(record: AttendanceDay) {\n    if (record.date.getMonth() !== this.attendanceMonth.month.getMonth()) {\n      this.selectedRecord = undefined;\n      return;\n    }\n    if (record === this.selectedRecord) {\n      this.selectedRecord = undefined;\n    } else {\n      this.selectedRecord = record;\n      setTimeout(() => this.dayStatusSelect.focus(), 100);\n    }\n  }\n\n  save() {\n    if (this.selectedRecordChanged) {\n      this.entityMapper.save(this.attendanceMonth, true);\n    }\n    this.selectedRecordChanged = false;\n  }\n}\n","<div>\n  <!-- Week -->\n  <table>\n    <thead>\n      <tr>\n        <th>Mon</th>\n        <th>Tue</th>\n        <th>Wed</th>\n        <th>Thu</th>\n        <th>Fri</th>\n        <th>Sat</th>\n        <th>Sun</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor='let weekRecords of getWeeks(); trackBy: weekRecordsTrackByFunction'>\n        <td *ngFor='let record of weekRecords; trackBy: recordTrackByFunction'\n            (click)='selectCell(record)'>\n          <app-attendance-day-block [entity]='record' class='day-box'\n                                    [showDate]='record.date.getMonth() === attendanceMonth.month.getMonth()'\n                                    [showHighlighted]='(selectedRecord === record)'></app-attendance-day-block>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div *ngIf='selectedRecord' class='selected form'>\n    <div>\n      {{selectedRecord.date.toLocaleDateString()}}\n    </div>\n\n    <button mat-icon-button class='form-close' (click)='selectedRecord=undefined'>\n      <span class='fa fa-times'></span>\n    </button>\n\n    <div>\n      <mat-form-field>\n        <mat-select [(ngModel)]='selectedRecord.status' (ngModelChange)='selectedRecordChanged=true; save()' #dayStatusSelect>\n          <mat-option *ngFor=\"let s of statusValues | keys\" [value]=\"s.value\">{{s.key}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field style='width: 100%;'>\n        <textarea matInput placeholder=\"Remarks\" [(ngModel)]=\"selectedRecord.remarks\" (ngModelChange)='selectedRecordChanged=true' (blur)='save()'></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n","import { Component, Input, ViewChild } from \"@angular/core\";\nimport { AttendanceMonth } from \"../model/attendance-month\";\nimport { ShowsEntity } from \"../../../core/form-dialog/shows-entity.interface\";\n\n@Component({\n  selector: \"app-attendance-details\",\n  templateUrl: \"./attendance-details.component.html\",\n  styleUrls: [\"./attendance-details.component.scss\"],\n})\nexport class AttendanceDetailsComponent implements ShowsEntity {\n  @Input() entity: AttendanceMonth = new AttendanceMonth(\"\");\n  @ViewChild(\"dialogForm\", { static: true }) formDialogWrapper;\n\n  constructor() {}\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<app-form-dialog-wrapper #dialogForm [entity]='entity'>\n  <h1>\n    Attendance of <app-child-block [entityId]='entity.student'></app-child-block>\n    for {{entity.month | date:'MM/yyyy' }}\n  </h1>\n\n  <form #entityForm=\"ngForm\">\n    <div fxLayout='row wrap' fxLayoutGap='20px'>\n      <div fxFlex>\n        <mat-form-field>\n          <input matInput placeholder=\"Month\" name=\"month\" type=\"month\"\n                 [valueAsDate]=\"entity.month\" (change)='entity.month=$event.target.valueAsDate;entityForm.form.markAsDirty();'>\n        </mat-form-field>\n      </div>\n      <div fxFlex>\n        <mat-form-field>\n          <mat-label>\n            Type/Institution\n          </mat-label>\n          <mat-select name=\"institution\" [(ngModel)]=\"entity.institution\">\n            <mat-option value=\"school\">School</mat-option>\n            <mat-option value=\"coaching\">Coaching</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"w-{{entity.getWarningLevel()}}\">\n      <div class='summary'>Attendance: {{entity?.getAttendancePercentage() | percent:'1.0-0'}}</div>\n      <div class='summary'>Late: {{entity?.daysLate / entity?.daysWorking | percent:'1.0-0'}}</div>\n    </div>\n\n    <div fxLayout='row wrap' fxLayoutGap='20px' class=\"w-{{entity.getWarningLevel()}}\">\n      <div fxFlex>\n        <mat-form-field>\n          <input matInput type=\"number\" min=\"0\" placeholder='Working Days'\n                 [value]='entity.daysWorking' (change)=\"entity.daysWorking=$event.target.valueAsNumber;entityForm.form.markAsDirty();\">\n          <button mat-button matSuffix mat-icon-button aria-label=\"Reset\" matTooltip='reset and use daily attendance data'\n                  *ngIf=\"entity.daysWorking_manuallyEntered\" (click)=\"entity.daysWorking_manuallyEntered=undefined\">\n            <mat-icon fontIcon='fa-times'></mat-icon>\n          </button>\n        </mat-form-field>\n\n        <span>\n        ({{entity.getDaysWorkingFromDailyAttendance()}} days\n        <span class='fa fa-question-circle' matTooltip='according to daily attendance register'></span>)\n      </span>\n      </div>\n\n      <div fxFlex>\n        <mat-form-field>\n          <input matInput type=\"number\" min=\"0\" placeholder='Attended Days'\n                 [value]='entity.daysAttended' (change)=\"entity.daysAttended=$event.target.valueAsNumber;entityForm.form.markAsDirty();\">\n          <button mat-button matSuffix mat-icon-button aria-label=\"Reset\" matTooltip='reset and use daily attendance data'\n                  *ngIf=\"entity.daysAttended_manuallyEntered\" (click)=\"entity.daysAttended_manuallyEntered=undefined\">\n            <mat-icon fontIcon='fa-times'></mat-icon>\n          </button>\n        </mat-form-field>\n\n        <span>\n        ({{entity.getDaysAttendedFromDailyAttendance()}} days\n        <span class='fa fa-question-circle' matTooltip='according to daily attendance register'></span>)\n      </span>\n      </div>\n\n      <div fxFlex>\n        <mat-form-field>\n          <input matInput type=\"number\" min=\"0\" placeholder='Excused Days'\n                 [value]='entity.daysExcused' (change)=\"entity.daysExcused=$event.target.valueAsNumber;entityForm.form.markAsDirty();\">\n          <button mat-button matSuffix mat-icon-button aria-label=\"Reset\" matTooltip='reset and use daily attendance data'\n                  *ngIf=\"entity.daysExcused_manuallyEntered\" (click)=\"entity.daysExcused_manuallyEntered=undefined\">\n            <mat-icon fontIcon='fa-times'></mat-icon>\n          </button>\n        </mat-form-field>\n\n        <span>\n        ({{entity.getDaysExcusedFromDailyAttendance()}} days\n        <span class='fa fa-question-circle' matTooltip='according to daily attendance register'></span>)\n      </span>\n      </div>\n\n      <div fxFlex>\n        <mat-form-field>\n          <input matInput type=\"number\" min=\"0\" placeholder='Late Days'\n                 [value]='entity.daysLate' (change)=\"entity.daysLate=$event.target.valueAsNumber;entityForm.form.markAsDirty();\">\n          <button mat-button matSuffix mat-icon-button aria-label=\"Reset\"\n                  *ngIf=\"entity.daysLate_manuallyEntered\" (click)=\"entity.daysLate_manuallyEntered=undefined\">\n            <mat-icon fontIcon='fa-times'></mat-icon>\n          </button>\n        </mat-form-field>\n\n        <span>\n        ({{entity.getDaysLateFromDailyAttendance()}} days\n        <span class='fa fa-question-circle' matTooltip='according to daily attendance register'></span>)\n      </span>\n      </div>\n    </div>\n\n    <div>\n      <mat-form-field class='input-max'>\n        <textarea matInput placeholder=\"Remarks\" name=\"remarks\" [(ngModel)]=\"entity.remarks\"></textarea>\n      </mat-form-field>\n    </div>\n\n    <div>\n      <app-attendance-days [attendanceMonth]='entity'></app-attendance-days>\n    </div>\n  </form>\n</app-form-dialog-wrapper>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-attendance-manager\",\n  templateUrl: \"./attendance-manager.component.html\",\n  styleUrls: [\"./attendance-manager.component.scss\"],\n})\nexport class AttendanceManagerComponent {\n  constructor() {}\n}\n","<h1>Attendance Register</h1>\n\n<p class=\"general-description\">\n  Attendance data can be seen and edited in an individual's details as well as here across groups.\n</p>\n\n<div fxLayout=\"row wrap\">\n  <mat-card fxFlex>\n    <mat-card-header>\n      <mat-card-title>Roll Call</mat-card-title>\n      <mat-card-subtitle>add a day's attendance</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      Select a group of children and easily mark their attendance one by one.\n      This works well on a smartphone to record attendance on site.\n    </mat-card-content>\n    <mat-card-actions>\n      <button routerLink=\"/attendance/add/day\"\n              angulartics2On=\"click\"\n              angularticsCategory=\"Navigation\"\n              angularticsAction=\"attendance_manager_add_a_day_attendance_link\"\n              class=\"action-button\"\n              mat-stroked-button>\n        Do Roll Call\n      </button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card fxFlex>\n    <mat-card-header>\n      <mat-card-title>Enter Monthly Attendance</mat-card-title>\n      <mat-card-subtitle>add a month's attendance</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      Enter attendance numbers for a whole month in a table format for a group of children.\n      This allows you to quickly record attendance that was collected on paper.\n      However, as you only enter a monthly total for each child you cannot see attendance in the day-wise calender.\n    </mat-card-content>\n    <mat-card-actions>\n      <button routerLink=\"/attendance/add/month\"\n              angulartics2On=\"click\"\n              angularticsCategory=\"Navigation\"\n              angularticsAction=\"attendance_manager_add_a_month_attendance_link\"\n              class=\"action-button\"\n              mat-stroked-button>\n        Enter Attendance\n      </button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card fxFlex>\n    <mat-card-header>\n      <mat-card-title>Analyse Attendance</mat-card-title>\n      <mat-card-subtitle>calculate summaries and averages</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      Analyse and compare attendance for all children.\n      To see an individual's attendance history you can open the child's overall details page.\n    </mat-card-content>\n    <mat-card-actions>\n      <button routerLink=\"/attendance/analysis\"\n              class=\"action-button\"\n              mat-stroked-button>\n        Analyse Attendance\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { ConflictResolutionStrategy } from \"../../conflict-resolution/auto-resolution/conflict-resolution-strategy\";\nimport { AttendanceMonth } from \"./model/attendance-month\";\nimport _ from \"lodash\";\nimport { diff } from \"deep-object-diff\";\nimport { EntitySchemaService } from \"../../core/entity/schema/entity-schema.service\";\n\n/**\n * Auto resolve simple database document conflicts concerning {@link AttendanceMonth} entities.\n */\n@Injectable()\nexport class AttendanceMonthConflictResolutionStrategy\n  implements ConflictResolutionStrategy {\n  constructor(private entitySchemaService: EntitySchemaService) {}\n\n  /**\n   * Checks if the given conflict is about AttendanceMonth entities (otherwise this strategy doesn't apply)\n   * and suggests whether the conflict is trivial and can be automatically deleted.\n   * @param currentDoc The currently active revision\n   * @param conflictingDoc The conflicting revision to be checked whether it can be deleted\n   */\n  public autoDeleteConflictingRevision(\n    currentDoc: any,\n    conflictingDoc: any\n  ): boolean {\n    if (!currentDoc._id.startsWith(AttendanceMonth.ENTITY_TYPE)) {\n      return false;\n    }\n\n    if (typeof currentDoc.getId === \"function\") {\n      currentDoc = this.entitySchemaService.transformEntityToDatabaseFormat(\n        currentDoc\n      );\n    }\n    if (typeof conflictingDoc.getId === \"function\") {\n      conflictingDoc = this.entitySchemaService.transformEntityToDatabaseFormat(\n        conflictingDoc\n      );\n    }\n\n    const currentDocC = _.merge({}, currentDoc);\n    delete currentDocC._rev;\n    const conflictingDocC = _.merge({}, conflictingDoc);\n    delete conflictingDocC._rev;\n\n    return this.isIrrelevantAttendanceMonthConflict(\n      currentDocC,\n      conflictingDocC\n    );\n  }\n\n  /**\n   * Calculate a diff between the two objects discarding trivial differences.\n   * @param currentDoc The object to compare against\n   * @param conflictingDoc The conflicting object version to compare\n   */\n  private isIrrelevantAttendanceMonthConflict(\n    currentDoc: any,\n    conflictingDoc: any\n  ): boolean {\n    const diffObject = diff(currentDoc, conflictingDoc);\n\n    const simplifiedDiff = this.removeTrivialDiffValuesRecursively(diffObject, [\n      \"?\",\n      \"\",\n      undefined,\n      null,\n    ]);\n\n    console.log(currentDoc);\n    console.log(conflictingDoc);\n    console.log(\"isIrrelevantAttendanceMonthConflict\", simplifiedDiff);\n\n    return _.isObjectLike(simplifiedDiff) && _.isEmpty(simplifiedDiff);\n  }\n\n  /**\n   * Changes the given object, deep scanning it to remove any values given as the second argument.\n   * @param diffObject\n   * @param trivialValues\n   */\n  private removeTrivialDiffValuesRecursively(\n    diffObject: any,\n    trivialValues: any[]\n  ) {\n    for (const k of Object.keys(diffObject)) {\n      if (trivialValues.includes(diffObject[k])) {\n        delete diffObject[k];\n      }\n\n      if (typeof diffObject[k] === \"object\" && diffObject[k] !== null) {\n        this.removeTrivialDiffValuesRecursively(diffObject[k], trivialValues);\n\n        if (_.isObjectLike(diffObject[k]) && _.isEmpty(diffObject[k])) {\n          delete diffObject[k];\n        }\n      }\n    }\n\n    return diffObject;\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AttendanceMonth } from \"../model/attendance-month\";\nimport { ChildrenService } from \"../../children/children.service\";\nimport { ColumnDescription } from \"../../../core/entity-subrecord/entity-subrecord/column-description\";\nimport { DatePipe, PercentPipe } from \"@angular/common\";\nimport { AttendanceDetailsComponent } from \"../attendance-details/attendance-details.component\";\nimport { ColumnDescriptionInputType } from \"../../../core/entity-subrecord/entity-subrecord/column-description-input-type.enum\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-child-attendance\",\n  templateUrl: \"./child-attendance.component.html\",\n})\nexport class ChildAttendanceComponent implements OnChanges {\n  @Input() childId: string;\n  @Input() institution: string;\n  @Input() showDailyAttendanceOfLatest = false;\n\n  records: Array<AttendanceMonth>;\n  detailsComponent = AttendanceDetailsComponent;\n\n  columns: Array<ColumnDescription> = [\n    new ColumnDescription(\n      \"month\",\n      \"Month\",\n      ColumnDescriptionInputType.MONTH,\n      null,\n      (v: Date) => this.datePipe.transform(v, \"yyyy-MM\"),\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"daysAttended\",\n      \"Present\",\n      ColumnDescriptionInputType.NUMBER,\n      null,\n      undefined,\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"daysWorking\",\n      \"Working Days\",\n      ColumnDescriptionInputType.NUMBER,\n      null,\n      undefined,\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"getAttendancePercentage\",\n      \"Attended\",\n      ColumnDescriptionInputType.FUNCTION,\n      null,\n      (v: number) => this.percentPipe.transform(v, \"1.0-0\"),\n      \"md\"\n    ),\n    new ColumnDescription(\n      \"daysExcused\",\n      \"Excused\",\n      ColumnDescriptionInputType.NUMBER,\n      null,\n      undefined,\n      \"md\"\n    ),\n    new ColumnDescription(\n      \"remarks\",\n      \"Remarks\",\n      ColumnDescriptionInputType.TEXTAREA,\n      null,\n      undefined,\n      \"xl\"\n    ),\n  ];\n\n  constructor(\n    private childrenService: ChildrenService,\n    private datePipe: DatePipe,\n    private percentPipe: PercentPipe\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.loadData(this.childId);\n  }\n\n  loadData(id: string) {\n    this.childrenService\n      .getAttendancesOfChild(id)\n      .pipe(untilDestroyed(this))\n      .subscribe((results) => {\n        this.records = results\n          .filter(\n            (r) =>\n              this.institution === undefined ||\n              r.institution === this.institution\n          )\n          .sort(\n            (a, b) =>\n              (b.month ? b.month.valueOf() : 0) -\n              (a.month ? a.month.valueOf() : 0)\n          );\n\n        if (this.showDailyAttendanceOfLatest) {\n          this.createCurrentMonthsAttendanceIfNotExists();\n        }\n      });\n  }\n\n  private createCurrentMonthsAttendanceIfNotExists() {\n    const now = new Date();\n    if (\n      this.records.length === 0 ||\n      this.records[0].month.getFullYear() !== now.getFullYear() ||\n      this.records[0].month.getMonth() !== now.getMonth()\n    ) {\n      this.records.unshift(\n        AttendanceMonth.createAttendanceMonth(this.childId, this.institution)\n      );\n    }\n  }\n\n  generateNewRecordFactory() {\n    // define values locally because 'this' is a different scope after passing a function as input to another component\n    const child = this.childId;\n    const institution = this.institution;\n\n    return () => {\n      return AttendanceMonth.createAttendanceMonth(child, institution);\n    };\n  }\n}\n","<app-attendance-days [attendanceMonth]='records[0]' *ngIf='showDailyAttendanceOfLatest && records && records.length > 0'></app-attendance-days>\n\n<app-entity-subrecord [records]=\"records\" [columns]=\"columns\" [newRecordFactory]=\"generateNewRecordFactory()\" [detailsComponent]=\"detailsComponent\">\n</app-entity-subrecord>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ChildrenService } from \"../../../children/children.service\";\nimport { Child } from \"../../../children/model/child\";\nimport { Router } from \"@angular/router\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-attendance-average-dashboard\",\n  templateUrl: \"./attendance-average-dashboard.component.html\",\n  styleUrls: [\"./attendance-average-dashboard.component.scss\"],\n})\nexport class AttendanceAverageDashboardComponent implements OnInit {\n  readonly ATTENDANCE_THRESHOLD = 0.9;\n\n  overallAttendance: number;\n  lastMonthsTopAttendence = []; // [[Child, average_last_3_months, last_months_attendance]]\n\n  constructor(\n    private childrenService: ChildrenService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    await this.loadAverageAttendances();\n  }\n\n  async loadAverageAttendances() {\n    const countMap = new Map<string, [Child, number, number]>();\n\n    const attendance3Months = await this.childrenService.queryAttendanceLast3Months();\n    let totalCount = 0;\n    let summedAverage = 0;\n    attendance3Months.rows.forEach((studentStat) => {\n      totalCount += studentStat.value.count;\n      summedAverage += studentStat.value.sum;\n\n      countMap.set(studentStat.key, [\n        undefined,\n        studentStat.value.sum / studentStat.value.count,\n        0,\n      ]);\n    });\n\n    this.overallAttendance = summedAverage / totalCount;\n\n    const attendanceLastMonth = await this.childrenService.queryAttendanceLastMonth();\n    attendanceLastMonth.rows.forEach((studentStat) => {\n      const record = countMap.get(studentStat.key);\n      record[2] = studentStat.value.sum / studentStat.value.count;\n\n      if (record[2] >= this.ATTENDANCE_THRESHOLD) {\n        this.childrenService\n          .getChild(studentStat.key)\n          .pipe(untilDestroyed(this))\n          .subscribe((child) => (record[0] = child));\n      } else {\n        countMap.delete(studentStat.key);\n      }\n    });\n\n    // remove elements that don't have a matching attendance from last month\n    countMap.forEach((v, k) => {\n      if (v[2] === 0) {\n        countMap.delete(k);\n      }\n    });\n\n    this.lastMonthsTopAttendence = Array.from(countMap.values()); // direct use of Map creates change detection problems\n  }\n\n  goToChild(childId: string) {\n    this.router.navigate([\"/child\", childId]);\n  }\n}\n","<mat-card class=\"dashboard-widget\">\n  <mat-card-header class=\"app-attendance\">\n    <div mat-card-avatar>\n      <mat-icon fontIcon=\"fa-line-chart\"></mat-icon>\n    </div>\n    <mat-card-title>{{ overallAttendance | percent: \"1.0-0\" }}</mat-card-title>\n    <mat-card-subtitle>Average Attendance Last 3 Months</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p class=\"dashboard-desc\">\n      Students above {{ ATTENDANCE_THRESHOLD | percent: \"1.0-0\" }} attendance\n      last month:\n    </p>\n    <table class=\"dashboard-table\">\n      <tr>\n        <th class=\"dashboard-table-cell\"></th>\n        <th class=\"dashboard-table-cell\">last month</th>\n        <th class=\"dashboard-table-cell\">3 months</th>\n        <th class=\"dashboard-table-cell\"></th>\n      </tr>\n      <tr\n        *ngFor=\"let entry of lastMonthsTopAttendence; let i=index;\"\n        class=\"dashboard-table-row w-OK\"\n        (click)=\"goToChild(entry[0].getId())\"\n        style=\"cursor: pointer;\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"Navigation\"\n        angularticsAction=\"dashboard_attendance_average_list_link\"\n        [angularticsLabel]=\"'list-entry-' + i\"\n      >\n        <td class=\"dashboard-table-cell\">\n          <app-child-block\n            *ngIf=\"entry[0]\"\n            [entity]=\"entry[0]\"\n          ></app-child-block>\n        </td>\n        <td class=\"dashboard-table-cell\" style=\"text-align: right;\">\n          {{ entry[2] | percent: \"1.0-0\" }}\n        </td>\n        <td class=\"dashboard-table-cell\" style=\"text-align: right;\">\n          {{ entry[1] | percent: \"1.0-0\" }}\n        </td>\n        <td class=\"dashboard-table-cell\">\n          <span class=\"fa fa-external-link-square\"></span>\n        </td>\n      </tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ChildrenService } from \"../../../children/children.service\";\nimport { Router } from \"@angular/router\";\nimport { AttendanceMonth } from \"../../model/attendance-month\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-attendance-warnings-dashboard\",\n  templateUrl: \"./attendance-warnings-dashboard.component.html\",\n  styleUrls: [\"./attendance-warnings-dashboard.component.scss\"],\n})\nexport class AttendanceWarningsDashboardComponent implements OnInit {\n  readonly ATTENDANCE_THRESHOLD = AttendanceMonth.THRESHOLD_WARNING;\n\n  lastMonthsLowAttendence = []; // [[Child, last_months_attendance]]\n\n  constructor(\n    private childrenService: ChildrenService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    await this.loadLastAttendances();\n  }\n\n  async loadLastAttendances() {\n    await this.childrenService\n      .queryAttendanceLastMonth()\n      .then((queryResults) => {\n        this.lastMonthsLowAttendence = [];\n        queryResults.rows.forEach((studentStat) => {\n          const att = studentStat.value.sum / studentStat.value.count;\n\n          let urgency = \"WARNING\";\n          if (att < AttendanceMonth.THRESHOLD_URGENT) {\n            urgency = \"URGENT\";\n          }\n\n          if (att < this.ATTENDANCE_THRESHOLD) {\n            this.childrenService\n              .getChild(studentStat.key)\n              .pipe(untilDestroyed(this))\n              .subscribe((child) =>\n                this.lastMonthsLowAttendence.push([child, att, urgency])\n              );\n          }\n        });\n        this.lastMonthsLowAttendence.sort((a, b) => a[1] - b[1]);\n      });\n  }\n\n  goToChild(childId: string) {\n    this.router.navigate([\"/child\", childId]);\n  }\n}\n","<mat-card class=\"dashboard-widget\">\n  <mat-card-header class=\"app-attendance\">\n    <div mat-card-avatar>\n      <mat-icon fontIcon=\"fa-exclamation-triangle\"></mat-icon>\n    </div>\n    <mat-card-title>{{ lastMonthsLowAttendence.length }}</mat-card-title>\n    <mat-card-subtitle>Students with low attendance</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p class=\"dashboard-desc\">\n      Students below {{ ATTENDANCE_THRESHOLD | percent: \"1.0-0\" }} attendance\n      last month:\n    </p>\n    <table class=\"dashboard-table\">\n      <tr\n        *ngFor=\"let entry of lastMonthsLowAttendence; let i = index\"\n        class=\"dashboard-table-row w-{{ entry[2] }}\"\n        (click)=\"goToChild(entry[0].getId())\"\n        style=\"cursor: pointer;\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"Navigation\"\n        angularticsAction=\"dashboard_attendance_warnings_list_link\"\n        [angularticsLabel]=\"'list-entry-' + i\"\n      >\n        <td class=\"dashboard-table-cell\">\n          <app-child-block\n            *ngIf=\"entry[0]\"\n            [entity]=\"entry[0]\"\n          ></app-child-block>\n        </td>\n        <td class=\"dashboard-table-cell\" style=\"text-align: right;\">\n          {{ entry[1] | percent: \"1.0-0\" }}\n        </td>\n        <td class=\"dashboard-table-cell\">\n          <span class=\"fa fa-external-link-square\"></span>\n        </td>\n      </tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { ChildrenService } from \"../../../children/children.service\";\nimport { Router } from \"@angular/router\";\nimport { AttendanceMonth } from \"../../model/attendance-month\";\nimport { AttendanceDay, AttendanceStatus } from \"../../model/attendance-day\";\nimport { Child } from \"../../../children/model/child\";\nimport { forkJoin } from \"rxjs\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-attendance-week-dashboard\",\n  templateUrl: \"./attendance-week-dashboard.component.html\",\n  styleUrls: [\"./attendance-week-dashboard.component.scss\"],\n})\nexport class AttendanceWeekDashboardComponent implements OnInit {\n  @Input() daysOffset: number;\n  @Input() periodLabel: string;\n\n  attendanceRecordsMap: Map<\n    string,\n    {\n      childId: string;\n      child: Child;\n      attendanceSchool: AttendanceDay[];\n      attendanceCoaching: AttendanceDay[];\n      schoolAbsences?: number;\n      coachingAbsences?: number;\n    }\n  >;\n  attendanceRecords;\n\n  constructor(\n    private childrenService: ChildrenService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.loadAttendanceOfAbsentees(this.daysOffset);\n  }\n\n  recordTrackByFunction = (index, item) => item.childId;\n\n  loadAttendanceOfAbsentees(daysOffset = 0) {\n    this.attendanceRecordsMap = new Map();\n\n    const today = new Date();\n    const previousMonday = new Date(\n      today.getFullYear(),\n      today.getMonth(),\n      today.getDate() - today.getDay() - 6 + daysOffset\n    );\n    const previousSaturday = new Date(\n      previousMonday.getFullYear(),\n      previousMonday.getMonth(),\n      previousMonday.getDate() + 5\n    );\n\n    const o1 = this.childrenService.getAttendancesOfMonth(previousMonday);\n    o1.pipe(untilDestroyed(this)).subscribe((attendances) => {\n      attendances.forEach((a) =>\n        this.extractRelevantAttendanceDays(a, previousMonday, previousSaturday)\n      );\n    });\n    let o2 = o1;\n    if (previousMonday.getMonth() !== previousSaturday.getMonth()) {\n      o2 = this.childrenService.getAttendancesOfMonth(previousSaturday);\n      o2.pipe(untilDestroyed(this)).subscribe((attendances) =>\n        attendances.forEach((a) =>\n          this.extractRelevantAttendanceDays(\n            a,\n            previousMonday,\n            previousSaturday\n          )\n        )\n      );\n    }\n    forkJoin(o1, o2).subscribe(() => this.filterAbsentees());\n  }\n\n  private extractRelevantAttendanceDays(\n    attendanceMonth: AttendanceMonth,\n    startDate: Date,\n    endDate: Date\n  ) {\n    let record = this.attendanceRecordsMap.get(attendanceMonth.student);\n    if (record === undefined) {\n      record = {\n        childId: attendanceMonth.student,\n        child: undefined,\n        attendanceCoaching: [],\n        attendanceSchool: [],\n      };\n      this.childrenService\n        .getChild(attendanceMonth.student)\n        .pipe(untilDestroyed(this))\n        .subscribe((child) => (record.child = child));\n      this.attendanceRecordsMap.set(attendanceMonth.student, record);\n    }\n\n    const relevantDays = attendanceMonth.dailyRegister.filter(\n      (a) =>\n        a.date.getTime() >= startDate.getTime() &&\n        a.date.getTime() <= endDate.getTime()\n    );\n\n    if (attendanceMonth.institution === \"coaching\") {\n      record.attendanceCoaching = record.attendanceCoaching\n        .concat(relevantDays)\n        .sort(\n          (a, b) =>\n            (a.date ? a.date.getTime() : 0) - (b.date ? b.date.getTime() : 0)\n        );\n    } else if (attendanceMonth.institution === \"school\") {\n      record.attendanceSchool = record.attendanceSchool\n        .concat(relevantDays)\n        .sort(\n          (a, b) =>\n            (a.date ? a.date.getTime() : 0) - (b.date ? b.date.getTime() : 0)\n        );\n    }\n  }\n\n  private filterAbsentees() {\n    this.attendanceRecords = [];\n\n    this.attendanceRecordsMap.forEach((record) => {\n      const countAbsencesFun = (acc, v) =>\n        v.status === AttendanceStatus.ABSENT ? acc + 1 : acc;\n      record.schoolAbsences = record.attendanceSchool.reduce(\n        countAbsencesFun,\n        0\n      );\n      record.coachingAbsences = record.attendanceCoaching.reduce(\n        countAbsencesFun,\n        0\n      );\n      if (record.schoolAbsences > 1 || record.coachingAbsences > 1) {\n        this.attendanceRecords.push(record);\n      }\n    });\n  }\n\n  goToChild(childId: string) {\n    this.router.navigate([\"/child\", childId]);\n  }\n}\n","<mat-card class=\"dashboard-widget\">\n  <mat-card-header class=\"app-attendance\">\n    <div mat-card-avatar>\n      <mat-icon fontIcon=\"fa-exclamation-triangle\"></mat-icon>\n    </div>\n    <mat-card-title>{{ attendanceRecords?.length }}</mat-card-title>\n    <mat-card-subtitle\n      >Students more than one day absent\n      <em>{{ periodLabel }}</em></mat-card-subtitle\n    >\n  </mat-card-header>\n  <mat-card-content>\n    <table class=\"dashboard-table\">\n      <tr\n        *ngFor=\"let record of attendanceRecords; trackBy: recordTrackByFunction; let i=index;\"\n        class=\"dashboard-table-row w-WARNING\"\n        (click)=\"goToChild(record.child.getId())\"\n        style=\"cursor: pointer;\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"Navigation\"\n        angularticsAction=\"dashboard_attendance_warnings_list_link\"\n        [angularticsLabel]=\"'list-entry-' + i\"\n      >\n        <td class=\"dashboard-table-first-cell dashboard-table-cell\">\n          <app-child-block [entity]=\"record.child\"></app-child-block>\n        </td>\n        <td class=\"dashboard-table-last-cell dashboard-table-cell\">\n          <table class=\"attendance-week-table\">\n            <tr>\n              <td *ngFor=\"let day of record.attendanceSchool\">\n                <app-attendance-day-block\n                  [entity]=\"day\"\n                  [showDate]=\"false\"\n                  class=\"day-box\"\n                ></app-attendance-day-block>\n              </td>\n            </tr>\n            <tr>\n              <td *ngFor=\"let day of record.attendanceCoaching\">\n                <app-attendance-day-block\n                  [entity]=\"day\"\n                  [showDate]=\"false\"\n                  class=\"day-box\"\n                ></app-attendance-day-block>\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import { DemoChildGenerator } from \"../children/demo-data-generators/demo-child-generator.service\";\nimport { DemoDataGenerator } from \"../../core/demo-data/demo-data-generator\";\nimport { Injectable } from \"@angular/core\";\nimport { Child } from \"../children/model/child\";\nimport { faker } from \"../../core/demo-data/faker\";\nimport { AttendanceMonth } from \"./model/attendance-month\";\nimport { AttendanceDay, AttendanceStatus } from \"./model/attendance-day\";\n\ninterface AttendanceProfile {\n  id: number;\n  present: number;\n  excused: number;\n  late: number;\n  absent: number;\n}\n\nconst ATTENDANCE_PROFILES: AttendanceProfile[] = [\n  {\n    id: 0,\n    present: 94,\n    excused: 3,\n    late: 1,\n    absent: 2,\n  },\n  {\n    id: 1,\n    present: 80,\n    excused: 5,\n    late: 5,\n    absent: 10,\n  },\n  {\n    id: 2,\n    present: 70,\n    excused: 5,\n    late: 10,\n    absent: 15,\n  },\n  {\n    id: 3,\n    present: 50,\n    excused: 5,\n    late: 5,\n    absent: 40,\n  },\n];\n\n/**\n * Generate AttendanceMonth entities for the last 15 months\n * Builds upon the generated demo Child entities.\n */\n@Injectable()\nexport class DemoAttendanceGenerator extends DemoDataGenerator<\n  AttendanceMonth\n> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoAttendanceGenerator.provider()]`\n   */\n  static provider() {\n    return [\n      { provide: DemoAttendanceGenerator, useClass: DemoAttendanceGenerator },\n    ];\n  }\n\n  public static isHoliday(date: Date) {\n    switch (date.getMonth()) {\n      case 0:\n        return (\n          (date.getDate() >= 1 && date.getDate() <= 6) ||\n          date.getDate() === 23 ||\n          date.getDate() === 26\n        );\n      case 2:\n        return (\n          date.getDate() === 4 || (date.getDate() >= 20 && date.getDate() <= 21)\n        );\n      case 3:\n        return (\n          date.getDate() === 15 ||\n          (date.getDate() >= 20 && date.getDate() <= 21)\n        );\n      case 4:\n        return date.getDate() === 1 || date.getDate() >= 23;\n      case 5:\n        return date.getDate() <= 21;\n      case 6:\n        return date.getDate() === 4;\n      case 7:\n        return date.getDate() === 15;\n      case 8:\n        return date.getDate() === 11;\n      case 9:\n        return date.getDate() >= 5 && date.getDate() <= 16;\n      case 10:\n        return date.getDate() === 2 || date.getDate() === 10;\n      case 11:\n        return date.getDate() >= 24;\n    }\n\n    return false;\n  }\n\n  constructor(private demoChildren: DemoChildGenerator) {\n    super();\n  }\n\n  generateEntities(): AttendanceMonth[] {\n    const data = [];\n\n    for (const child of this.demoChildren.entities) {\n      data.push(...this.generateAttendanceRecordsForChild(child as Child));\n    }\n\n    return data;\n  }\n\n  private generateAttendanceRecordsForChild(child: Child): AttendanceMonth[] {\n    const data = [];\n\n    const finalMonth = faker.getEarlierDateOrToday(child.dropoutDate);\n    finalMonth.setDate(1);\n\n    const month = new Date();\n    month.setDate(1);\n    month.setMonth(month.getMonth() - 15);\n    if (child.admissionDate > month) {\n      month.setMonth(child.admissionDate.getMonth());\n      month.setFullYear(child.admissionDate.getFullYear());\n    }\n\n    let attendanceProfile = undefined;\n    while (month <= finalMonth) {\n      attendanceProfile = this.selectNextAttendanceProfile(attendanceProfile);\n\n      data.push(\n        this.generateRecord(\n          child,\n          new Date(month.toISOString()),\n          \"school\",\n          attendanceProfile\n        )\n      );\n      data.push(\n        this.generateRecord(\n          child,\n          new Date(month.toISOString()),\n          \"coaching\",\n          attendanceProfile\n        )\n      );\n\n      month.setMonth(month.getMonth() + 1);\n    }\n\n    return data;\n  }\n\n  private generateRecord(\n    child: Child,\n    month: Date,\n    institution: string,\n    attendanceProfile: AttendanceProfile\n  ) {\n    const attendanceMonth = new AttendanceMonth(faker.random.uuid());\n    attendanceMonth.month = month;\n    attendanceMonth.student = child.getId();\n    attendanceMonth.institution = institution;\n    attendanceMonth.dailyRegister.forEach((attendanceDay) =>\n      this.setDayAttendance(\n        attendanceDay,\n        institution !== \"school\",\n        attendanceProfile\n      )\n    );\n    return attendanceMonth;\n  }\n\n  private setDayAttendance(\n    attendanceDay: AttendanceDay,\n    includeSaturday: boolean,\n    attendanceProfile: AttendanceProfile\n  ) {\n    if (attendanceDay.date > new Date()) {\n      return;\n    }\n\n    if (\n      attendanceDay.date.getDay() === 0 || // Sunday\n      (!includeSaturday && attendanceDay.date.getDay() === 6) // Saturday\n    ) {\n      return;\n    }\n\n    if (DemoAttendanceGenerator.isHoliday(attendanceDay.date)) {\n      attendanceDay.status = AttendanceStatus.HOLIDAY;\n      return;\n    }\n\n    const random = faker.random.number(100);\n    if (random < attendanceProfile.present) {\n      attendanceDay.status = AttendanceStatus.PRESENT;\n    } else if (random < attendanceProfile.present + attendanceProfile.excused) {\n      attendanceDay.status = AttendanceStatus.EXCUSED;\n      attendanceDay.remarks = faker.random.arrayElement([\n        \"fever\",\n        \"cough\",\n        \"death in family\",\n        \"family out of town\",\n      ]);\n    } else if (\n      random <\n      attendanceProfile.present +\n        attendanceProfile.excused +\n        attendanceProfile.late\n    ) {\n      attendanceDay.status = AttendanceStatus.LATE;\n    } else {\n      attendanceDay.status = AttendanceStatus.ABSENT;\n    }\n  }\n\n  /**\n   * Select a new attendance profile (likelihood for absences, etc.).\n   * It's most likely the profile will remain the same as in previous month.\n   * @param previousAttendanceProfile\n   */\n  private selectNextAttendanceProfile(\n    previousAttendanceProfile: AttendanceProfile\n  ) {\n    if (!previousAttendanceProfile) {\n      return faker.random.arrayElement(ATTENDANCE_PROFILES);\n    }\n\n    if (faker.random.number(100) < 80) {\n      return previousAttendanceProfile;\n    } else {\n      return faker.random.arrayElement(ATTENDANCE_PROFILES);\n    }\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\n\nexport enum AttendanceStatus {\n  UNKNOWN = \"?\",\n  HOLIDAY = \"H\",\n  ABSENT = \"A\",\n  PRESENT = \"P\",\n  LATE = \"L\",\n  EXCUSED = \"E\",\n}\n\nexport class AttendanceDay {\n  @DatabaseField({ dataType: \"date-only\" }) date: Date;\n  @DatabaseField() status: AttendanceStatus;\n  @DatabaseField() remarks: string = \"\";\n\n  constructor(date: Date, status: AttendanceStatus = AttendanceStatus.UNKNOWN) {\n    this.date = date;\n    this.status = status;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Entity } from \"../../../core/entity/entity\";\nimport { WarningLevel } from \"../../warning-level\";\nimport { AttendanceDay, AttendanceStatus } from \"./attendance-day\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\n\n@DatabaseEntity(\"AttendanceMonth\")\nexport class AttendanceMonth extends Entity {\n  static readonly THRESHOLD_URGENT = 0.6;\n  static readonly THRESHOLD_WARNING = 0.8;\n\n  public static createAttendanceMonth(childId: string, institution: string) {\n    const month = new Date();\n    const newAtt = new AttendanceMonth(\n      childId +\n        \"_\" +\n        month.getFullYear() +\n        \"-\" +\n        (month.getMonth() + 1) +\n        \"_\" +\n        institution\n    );\n    newAtt.month = month;\n    newAtt.student = childId;\n    newAtt.institution = institution;\n    return newAtt;\n  }\n\n  @DatabaseField() student: string; // id of Child entity\n  @DatabaseField() remarks: string = \"\";\n  @DatabaseField() institution: string;\n\n  private p_month: Date;\n  @DatabaseField({ dataType: \"month\" })\n  get month(): Date {\n    return this.p_month;\n  }\n  set month(value: Date) {\n    if (!(value instanceof Date)) {\n      console.warn(\n        \"Trying to set invalid date \" +\n          JSON.stringify(value) +\n          \" to Entity \" +\n          this._id\n      );\n      return;\n    }\n\n    if (value.getDate() !== 2) {\n      value.setDate(2);\n    }\n    this.p_month = new Date(value);\n    this.updateDailyRegister();\n  }\n\n  daysWorking_manuallyEntered: number;\n  @DatabaseField()\n  get daysWorking(): number {\n    if (this.daysWorking_manuallyEntered !== undefined) {\n      return this.daysWorking_manuallyEntered;\n    } else {\n      return this.getDaysWorkingFromDailyAttendance();\n    }\n  }\n\n  set daysWorking(value: number) {\n    this.daysWorking_manuallyEntered = value;\n  }\n\n  daysAttended_manuallyEntered: number;\n  @DatabaseField()\n  get daysAttended(): number {\n    if (this.daysAttended_manuallyEntered !== undefined) {\n      return this.daysAttended_manuallyEntered;\n    } else {\n      return this.getDaysAttendedFromDailyAttendance();\n    }\n  }\n\n  set daysAttended(value: number) {\n    this.daysAttended_manuallyEntered = value;\n  }\n\n  daysExcused_manuallyEntered: number;\n  @DatabaseField()\n  get daysExcused(): number {\n    if (this.daysExcused_manuallyEntered !== undefined) {\n      return this.daysExcused_manuallyEntered;\n    } else {\n      return this.getDaysExcusedFromDailyAttendance();\n    }\n  }\n\n  set daysExcused(value: number) {\n    this.daysExcused_manuallyEntered = value;\n  }\n\n  daysLate_manuallyEntered: number;\n  @DatabaseField()\n  get daysLate(): number {\n    if (this.daysLate_manuallyEntered !== undefined) {\n      return this.daysLate_manuallyEntered;\n    } else {\n      return this.calculateFromDailyRegister(AttendanceStatus.LATE);\n    }\n  }\n  set daysLate(value: number) {\n    this.daysLate_manuallyEntered = value;\n  }\n\n  overridden = false; // indicates individual override during bulk adding\n\n  private _dailyRegister = new Array<AttendanceDay>();\n  set dailyRegister(value: AttendanceDay[]) {\n    if (!value) {\n      return;\n    }\n\n    for (const attDay of value) {\n      if (typeof attDay.date.getTime !== \"function\") {\n        attDay.date = new Date(attDay.date);\n      }\n    }\n    this._dailyRegister = value;\n  }\n  @DatabaseField({ arrayDataType: \"schema-embed\", ext: AttendanceDay })\n  get dailyRegister(): AttendanceDay[] {\n    return this._dailyRegister;\n  }\n\n  constructor(id: string) {\n    super(id);\n    this.month = new Date();\n  }\n\n  private updateDailyRegister() {\n    if (this.month === undefined) {\n      return;\n    }\n\n    if (this.dailyRegister === undefined) {\n      this.dailyRegister = new Array<AttendanceDay>();\n    }\n\n    const expectedDays = daysInMonth(this.month);\n    const currentDays = this.dailyRegister.length;\n    if (currentDays < expectedDays) {\n      for (let i = currentDays + 1; i <= expectedDays; i++) {\n        const date = new Date(\n          this.month.getFullYear(),\n          this.month.getMonth(),\n          i\n        );\n        const day = new AttendanceDay(date);\n        this.dailyRegister.push(day);\n      }\n    } else if (currentDays > expectedDays) {\n      this.dailyRegister.splice(expectedDays);\n    }\n\n    this.dailyRegister.forEach((day) => {\n      day.date.setMonth(this.month.getMonth());\n      day.date.setFullYear(this.month.getFullYear());\n    });\n  }\n\n  private calculateFromDailyRegister(status: AttendanceStatus) {\n    let count = 0;\n    this.dailyRegister.forEach((day) => {\n      if (day.status === status) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  public getDaysWorkingFromDailyAttendance() {\n    return (\n      this.dailyRegister.length -\n      this.calculateFromDailyRegister(AttendanceStatus.HOLIDAY) -\n      this.calculateFromDailyRegister(AttendanceStatus.UNKNOWN)\n    );\n  }\n\n  public getDaysAttendedFromDailyAttendance() {\n    return (\n      this.calculateFromDailyRegister(AttendanceStatus.PRESENT) +\n      this.calculateFromDailyRegister(AttendanceStatus.LATE)\n    );\n  }\n\n  public getDaysExcusedFromDailyAttendance() {\n    return this.calculateFromDailyRegister(AttendanceStatus.EXCUSED);\n  }\n\n  public getDaysLateFromDailyAttendance() {\n    return this.calculateFromDailyRegister(AttendanceStatus.LATE);\n  }\n\n  getAttendancePercentage() {\n    return this.daysAttended / (this.daysWorking - this.daysExcused);\n  }\n\n  getWarningLevel() {\n    const attendance = this.getAttendancePercentage();\n    if (attendance < AttendanceMonth.THRESHOLD_URGENT) {\n      return WarningLevel.URGENT;\n    } else if (attendance < AttendanceMonth.THRESHOLD_WARNING) {\n      return WarningLevel.WARNING;\n    } else {\n      return WarningLevel.OK;\n    }\n  }\n}\n\nexport function daysInMonth(date: Date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { ChildrenService } from \"../children.service\";\nimport { Child } from \"../model/child\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-child-block\",\n  templateUrl: \"./child-block.component.html\",\n  styleUrls: [\"./child-block.component.scss\"],\n})\nexport class ChildBlockComponent implements OnInit {\n  @Input() entity: Child;\n  @Input() entityId: string;\n\n  /** prevent clicks on the component to navigate to the details page */\n  @Input() linkDisabled: boolean;\n\n  /** prevent additional details to be displayed in a tooltip on mouse over */\n  @Input() tooltipDisabled: boolean;\n  tooltipVisible = false;\n  tooltipTimeout;\n\n  constructor(\n    private router: Router,\n    private childrenService: ChildrenService\n  ) {}\n\n  async ngOnInit() {\n    if (this.entityId) {\n      this.childrenService\n        .getChild(this.entityId)\n        .pipe(untilDestroyed(this))\n        .subscribe((child) => {\n          this.entity = child;\n        });\n    }\n  }\n\n  showTooltip() {\n    if (this.tooltipDisabled) {\n      return;\n    }\n\n    this.tooltipVisible = true;\n    if (this.tooltipTimeout) {\n      clearTimeout(this.tooltipTimeout);\n    }\n  }\n\n  hideTooltip() {\n    this.tooltipTimeout = setTimeout(() => (this.tooltipVisible = false), 250);\n  }\n\n  showDetailsPage() {\n    if (this.linkDisabled) {\n      return;\n    }\n\n    this.router.navigate([\"/child\", this.entity.getId()]);\n  }\n}\n","<span *ngIf=\"entity\"\n      (mouseenter)=\"showTooltip()\" (mouseleave)=\"hideTooltip()\" (click)=\"showDetailsPage()\"\n      [ngClass]=\"{ 'inactive': !entity.isActive() }\">\n  <img [src]=\"entity?.photo?.value\" class=\"child-pic\">\n  {{entity?.name}} <span style=\"font-size: x-small\">({{entity?.projectNumber}})</span>\n</span>\n\n<div style=\"position:absolute;\" *ngIf=\"tooltipVisible\">\n  <div class=\"mat-elevation-z5 child-tooltip\" (mouseenter)=\"showTooltip()\" (mouseleave)=\"hideTooltip()\" fxLayout='row'>\n    <div fxFlex='30'>\n      <img [src]=\"entity?.photo?.value\" class=\"child-pic-large\">\n    </div>\n    <div fxFlex>\n      <h3>{{entity?.name}}</h3>\n      <p><span class='fa fa-phone'></span> {{entity?.phone}}</p>\n      <p><app-school-block [entityId]='entity?.schoolId'></app-school-block>,\n        class {{entity?.schoolClass}}\n      </p>\n    </div>\n  </div>\n</div>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Inject, OnInit } from \"@angular/core\";\nimport { Child } from \"../model/child\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\nimport { Gender } from \"../model/Gender\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Location } from \"@angular/common\";\nimport { ConfirmationDialogService } from \"../../../core/confirmation-dialog/confirmation-dialog.service\";\nimport * as uniqid from \"uniqid\";\nimport { AlertService } from \"../../../core/alerts/alert.service\";\nimport { ChildrenService } from \"../children.service\";\nimport { ChildPhotoService } from \"../child-photo-service/child-photo.service\";\nimport { SessionService } from \"../../../core/session/session-service/session.service\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-child-details\",\n  templateUrl: \"./child-details.component.html\",\n  styleUrls: [\"./child-details.component.scss\"],\n})\nexport class ChildDetailsComponent implements OnInit {\n  child: Child = new Child(\"\");\n\n  validateForm = false;\n  form: FormGroup;\n  healthCheckForm: FormGroup;\n  creatingNew = false;\n  editing = false;\n  enablePhotoUpload;\n  gender = Gender;\n\n  genders = Gender;\n  documentStatus = [\n    \"OK (copy with us)\",\n    \"OK (copy needed for us)\",\n    \"needs correction\",\n    \"applied\",\n    \"doesn't have\",\n    \"not eligible\",\n    \"\",\n  ];\n  eyeStatusValues = [\"Good\", \"Has Glasses\", \"Needs Glasses\", \"Needs Checkup\"];\n  vaccinationStatusValues = [\n    \"Good\",\n    \"Vaccination Due\",\n    \"Needs Checking\",\n    \"No Card/Information\",\n  ];\n  isAdminUser: boolean;\n\n  constructor(\n    private entityMapperService: EntityMapperService,\n    private childrenService: ChildrenService,\n    private route: ActivatedRoute,\n    @Inject(FormBuilder) public fb: FormBuilder,\n    private router: Router,\n    private location: Location,\n    private snackBar: MatSnackBar,\n    private confirmationDialog: ConfirmationDialogService,\n    private alertService: AlertService,\n    private childPhotoService: ChildPhotoService,\n    private sessionService: SessionService\n  ) {\n    this.route.paramMap.subscribe((params) => this.loadChild(params.get(\"id\")));\n    this.isAdminUser = this.sessionService.getCurrentUser().admin;\n  }\n\n  initForm() {\n    this.form = this.fb.group({\n      name: [\n        { value: this.child.name, disabled: !this.editing },\n        Validators.required,\n      ],\n      // gender:         [{value: this.child.gender}], // reactive forms seem broken for mat-select, using ngModel instead\n      projectNumber: [\n        { value: this.child.projectNumber, disabled: !this.editing },\n      ],\n      dateOfBirth: [{ value: this.child.dateOfBirth, disabled: !this.editing }],\n      motherTongue: [\n        { value: this.child.motherTongue, disabled: !this.editing },\n      ],\n      religion: [{ value: this.child.religion, disabled: !this.editing }],\n\n      center: [\n        { value: this.child.center, disabled: !this.editing },\n        Validators.required,\n      ],\n      status: [{ value: this.child.status, disabled: !this.editing }],\n      admissionDate: [\n        { value: this.child.admissionDate, disabled: !this.editing },\n      ],\n\n      address: [{ value: this.child.address, disabled: !this.editing }],\n      phone: [{ value: this.child.phone, disabled: !this.editing }],\n      guardianName: [\n        { value: this.child.guardianName, disabled: !this.editing },\n      ],\n      preferredTimeForGuardianMeeting: [\n        {\n          value: this.child.preferredTimeForGuardianMeeting,\n          disabled: !this.editing,\n        },\n      ],\n\n      // aadhar:         [{value: this.child.has_aadhar,         disabled: !this.editing}],\n      // kanyashree:     [{value: this.child.has_kanyashree,     disabled: !this.editing}],\n      // bankAccount:    [{value: this.child.has_bankAccount,    disabled: !this.editing}],\n      // rationCard:     [{value: this.child.has_rationCard,     disabled: !this.editing}],\n      // bplCard:        [{value: this.child.has_BplCard,        disabled: !this.editing}],\n\n      // health_vaccinationStatus:    [{value: this.child.health_vaccinationStatus,    disabled: !this.editing}],\n      health_bloodGroup: [\n        { value: this.child.health_bloodGroup, disabled: !this.editing },\n      ],\n      health_lastDentalCheckup: [\n        { value: this.child.health_lastDentalCheckup, disabled: !this.editing },\n      ],\n      health_lastEyeCheckup: [\n        { value: this.child.health_lastEyeCheckup, disabled: !this.editing },\n      ],\n      // health_eyeHealthStatus:   [{value: this.child.health_eyeHealthStatus,    disabled: !this.editing}],\n      health_lastENTCheckup: [\n        { value: this.child.health_lastENTCheckup, disabled: !this.editing },\n      ],\n      health_lastVitaminD: [\n        { value: this.child.health_lastVitaminD, disabled: !this.editing },\n      ],\n      health_lastDeworming: [\n        { value: this.child.health_lastDeworming, disabled: !this.editing },\n      ],\n\n      dropoutDate: [{ value: this.child.dropoutDate, disabled: !this.editing }],\n      dropoutType: [{ value: this.child.dropoutType, disabled: !this.editing }],\n      dropoutRemarks: [\n        { value: this.child.dropoutRemarks, disabled: !this.editing },\n      ],\n\n      photoFile: [{ value: this.child.photoFile, disabled: !this.editing }],\n    });\n  }\n\n  ngOnInit() {}\n\n  loadChild(id: string) {\n    if (id === \"new\") {\n      this.creatingNew = true;\n      this.editing = true;\n      this.child = new Child(uniqid());\n    } else {\n      this.childrenService\n        .getChild(id)\n        .pipe(untilDestroyed(this))\n        .subscribe((child) => {\n          this.child = child;\n          this.initForm();\n        });\n    }\n    this.initForm();\n  }\n\n  changedRecordInEntitySubrecord() {\n    this.childrenService\n      .getChild(this.child.getId())\n      .pipe(untilDestroyed(this))\n      .subscribe((child) => {\n        this.child = child;\n      });\n  }\n\n  switchEdit() {\n    this.editing = !this.editing;\n    this.enablePhotoUpload = this.childPhotoService.canSetImage();\n    this.initForm();\n  }\n\n  save() {\n    // errors regarding invalid fields wont be displayed unless marked as touched\n    this.form.markAllAsTouched();\n    this.validateForm = true;\n\n    if (this.form.valid) {\n      this.assignFormValuesToChild(this.child, this.form);\n\n      this.entityMapperService\n        .save<Child>(this.child)\n        .then(() => {\n          if (this.creatingNew) {\n            this.router.navigate([\"/child\", this.child.getId()]);\n            this.creatingNew = false;\n          }\n          this.alertService.addInfo(\"Saving Succesfull\");\n          this.switchEdit();\n        })\n        .catch((err) =>\n          this.alertService.addDanger(\n            'Could not save Child \"' + this.child.name + '\": ' + err\n          )\n        );\n    } else {\n      const invalidFields = this.getInvalidFields(this.form);\n      this.alertService.addDanger(\n        \"Form invalid, required fields (\" + invalidFields + \") missing\"\n      );\n    }\n  }\n\n  private assignFormValuesToChild(child: Child, form: FormGroup) {\n    Object.keys(form.controls).forEach((key) => {\n      const value = form.get(key).value;\n      if (value !== null) {\n        child[key] = value;\n      }\n    });\n  }\n\n  removeChild() {\n    const dialogRef = this.confirmationDialog.openDialog(\n      \"Delete?\",\n      \"Are you sure you want to delete this Child?\"\n    );\n\n    dialogRef.afterClosed().subscribe((confirmed) => {\n      if (confirmed) {\n        this.entityMapperService\n          .remove<Child>(this.child)\n          .then(() => this.router.navigate([\"/child\"]));\n\n        const snackBarRef = this.snackBar.open(\n          'Deleted Child \"' + this.child.name + '\"',\n          \"Undo\",\n          { duration: 8000 }\n        );\n        snackBarRef.onAction().subscribe(() => {\n          this.entityMapperService.save(this.child, true);\n          this.router.navigate([\"/child\", this.child.getId()]);\n        });\n      }\n    });\n  }\n\n  navigateBack() {\n    this.location.back();\n  }\n\n  getInvalidFields(form: FormGroup) {\n    const invalid = [];\n    const controls = this.form.controls;\n    for (const field in controls) {\n      if (controls[field].invalid) {\n        invalid.push(field);\n      }\n    }\n    return invalid;\n  }\n\n  /**\n   * hands over the selected file to the cloudFileService together with the childId\n   * @param event The event of the file upload dialog\n   */\n  async uploadChildPhoto(event) {\n    await this.childPhotoService.setImage(\n      event.target.files[0],\n      this.child.entityId\n    );\n    this.child.photo.next(await this.childPhotoService.getImage(this.child));\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n  <div>\n    <h1 class=\"page-header section-child\">\n      <button\n        mat-icon-button\n        (click)=\"navigateBack()\"\n        matTooltip=\"Back\"\n        style=\"vertical-align: middle;\"\n      >\n        <mat-icon fontIcon=\"fa-backward\"></mat-icon>\n      </button>\n\n      <i class=\"fa fa-child fa-fw\"></i>\n      <span *ngIf=\"!creatingNew\"\n        >{{ child.name }} [{{ child.projectNumber }}]</span\n      >\n      <span *ngIf=\"creatingNew\">Adding new Child</span>\n    </h1>\n  </div>\n\n  <div>\n    <button\n      *ngIf=\"creatingNew || editing\"\n      mat-stroked-button\n      class=\"edit-button\"\n      (click)=\"save()\"\n    >\n      Save\n    </button>\n\n    <button\n      *ngIf=\"!creatingNew && editing\"\n      mat-stroked-button\n      class=\"edit-button\"\n      style=\"color: red;\"\n      (click)=\"removeChild()\"\n    >\n      Delete\n    </button>\n\n    <button\n      *ngIf=\"creatingNew || editing\"\n      mat-stroked-button\n      class=\"edit-button\"\n      (click)=\"switchEdit()\"\n    >\n      Cancel\n    </button>\n\n    <button\n      *ngIf=\"!editing\"\n      mat-stroked-button\n      class=\"edit-button\"\n      (click)=\"switchEdit()\"\n    >\n      Edit\n    </button>\n  </div>\n</div>\n\n<mat-accordion multi=\"true\">\n  <form [formGroup]=\"form\">\n    <mat-expansion-panel\n      hideToggle=\"true\"\n      [expanded]=\"child.isActive()\"\n      title=\"Basic Information\"\n    >\n      <mat-expansion-panel-header class=\"section-header\">\n        <mat-panel-title>\n          Basic Information\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n\n      <div\n        fxLayout=\"row\"\n        fxLayout.xs=\"column wrap\"\n        fxLayout.md=\"column wrap\"\n        fxLayout.sm=\"column wrap\"\n      >\n        <div fxFlex=\"160px\" class=\"child-pic-container\">\n          <img\n            [src]=\"child?.photo?.value\"\n            class=\"child-pic\"\n            alt=\"child's photo\"\n          />\n\n          <input\n            style=\"display: none;\"\n            type=\"file\"\n            accept=\".jpg, .jpeg, .png\"\n            (change)=\"uploadChildPhoto($event)\"\n            #fileUpload\n          />\n          <button\n            *ngIf=\"enablePhotoUpload && (creatingNew || editing)\"\n            class=\"child-pic-upload\"\n            (click)=\"fileUpload.click()\"\n          >\n            <mat-icon class=\"upload-icon\" fontIcon=\"fa-upload\"></mat-icon>\n          </button>\n\n          <mat-form-field\n            *ngIf=\"(creatingNew || editing) && isAdminUser\"\n            class=\"child-pic-photofile\"\n          >\n            <input\n              #photoFileInput\n              matTooltip=\"filename for child photo uploaded by server administrator\"\n              matInput\n              formControlName=\"photoFile\"\n              placeholder=\"Photo filename\"\n              title=\"photoFile\"\n              type=\"text\"\n            />\n            <span\n              matSuffix\n              (click)=\"photoFileInput.value = ''\"\n              class=\"fa fa-times\"\n            ></span>\n          </mat-form-field>\n        </div>\n\n        <div fxFlex>\n          <mat-form-field style=\"width: 300px;\">\n            <input\n              matInput\n              formControlName=\"name\"\n              placeholder=\"Name\"\n              title=\"name\"\n              type=\"text\"\n            />\n            <mat-error *ngIf=\"this.form.get('name').invalid && validateForm\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field style=\"width: 100px;\">\n            <input\n              matInput\n              formControlName=\"projectNumber\"\n              placeholder=\"Project Number\"\n              type=\"text\"\n            />\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              formControlName=\"center\"\n              placeholder=\"Center\"\n              type=\"text\"\n            />\n            <mat-error *ngIf=\"this.form.get('center').invalid && validateForm\">\n              Center is required\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              formControlName=\"status\"\n              placeholder=\"Project Status\"\n              type=\"text\"\n            />\n          </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field style=\"width: 50px;\">\n            <input\n              matInput\n              placeholder=\"Age\"\n              type=\"number\"\n              [value]=\"child.age\"\n              [disabled]=\"true\"\n            />\n          </mat-form-field>\n          <mat-form-field style=\"width: 120px;\">\n            <input\n              matInput\n              formControlName=\"dateOfBirth\"\n              placeholder=\"Date of Birth\"\n              [matDatepicker]=\"dateOfBirthDatepicker\"\n              [disabled]=\"!editing\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"dateOfBirthDatepicker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #dateOfBirthDatepicker></mat-datepicker>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>\n              Gender\n            </mat-label>\n            <mat-select\n              [disabled]=\"!editing\"\n              [(ngModel)]=\"child.gender\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            >\n              <mat-option *ngFor=\"let g of genders | keys\" [value]=\"g.value\">{{\n                g.key\n              }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              formControlName=\"motherTongue\"\n              placeholder=\"Mother Tongue\"\n              type=\"text\"\n            />\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              formControlName=\"religion\"\n              placeholder=\"Religion\"\n              title=\"Religion\"\n              type=\"text\"\n            />\n          </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field style=\"width: 180px;\">\n            <input\n              matInput\n              formControlName=\"admissionDate\"\n              placeholder=\"Admission Date\"\n              [matDatepicker]=\"admissionDatepicker\"\n              [disabled]=\"!editing\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"admissionDatepicker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #admissionDatepicker></mat-datepicker>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>\n              Aadhar Status\n            </mat-label>\n            <mat-select\n              [disabled]=\"!editing\"\n              [(ngModel)]=\"child.has_aadhar\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            >\n              <mat-option *ngFor=\"let s of documentStatus\" [value]=\"s\">{{\n                s\n              }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>\n              Kanyashree Status\n            </mat-label>\n            <mat-select\n              [disabled]=\"!editing\"\n              [(ngModel)]=\"child.has_kanyashree\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            >\n              <mat-option *ngFor=\"let s of documentStatus\" [value]=\"s\">{{\n                s\n              }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>\n              Bank Account Status\n            </mat-label>\n            <mat-select\n              [disabled]=\"!editing\"\n              [(ngModel)]=\"child.has_bankAccount\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            >\n              <mat-option *ngFor=\"let s of documentStatus\" [value]=\"s\">{{\n                s\n              }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>\n              Ration Card Status\n            </mat-label>\n            <mat-select\n              [disabled]=\"!editing\"\n              [(ngModel)]=\"child.has_rationCard\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            >\n              <mat-option *ngFor=\"let s of documentStatus\" [value]=\"s\">{{\n                s\n              }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>\n              BPL Card Status\n            </mat-label>\n            <mat-select\n              [disabled]=\"!editing\"\n              [(ngModel)]=\"child.has_BplCard\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            >\n              <mat-option *ngFor=\"let s of documentStatus\" [value]=\"s\">{{\n                s\n              }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div>\n          <mat-form-field style=\"width: 300px;\">\n            <input\n              matInput\n              type=\"text\"\n              formControlName=\"address\"\n              placeholder=\"Address\"\n            />\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              type=\"text\"\n              formControlName=\"phone\"\n              placeholder=\"Phone No.\"\n            />\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              type=\"text\"\n              formControlName=\"guardianName\"\n              placeholder=\"Guardians\"\n            />\n          </mat-form-field>\n\n          <mat-form-field>\n            <input\n              matInput\n              type=\"text\"\n              formControlName=\"preferredTimeForGuardianMeeting\"\n              placeholder=\"Preferred time for guardians meeting\"\n            />\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel\n      expanded=\"false\"\n      title=\"Education\"\n      [disabled]=\"creatingNew\">\n      <mat-expansion-panel-header class=\"section-header\">\n        <mat-icon fontIcon=\"fa-exclamation-triangle\" *ngIf=\"creatingNew\"\n                  class=\"locked-icon\"\n                  matTooltip=\"Please save before entering further data\"\n                  [matTooltipDisabled]=\"!creatingNew\">\n        </mat-icon>\n        Education\n      </mat-expansion-panel-header>\n\n      <div\n        *ngIf=\"child.schoolId\"\n        matTooltip=\"To edit the current school or class, please add to the school history below\"\n      >\n        <em>\n          Currently attending class {{ child.schoolClass }} at\n          <app-school-block [entityId]=\"child.schoolId\"></app-school-block>\n        </em>\n      </div>\n\n      <div>\n        <h3>School History</h3>\n        <app-previous-schools\n          [childId]=\"child.getId()\"\n          (changedRecordInEntitySubrecord)=\"changedRecordInEntitySubrecord()\"\n        >\n        </app-previous-schools>\n      </div>\n      <br />\n\n      <div>\n        <h3>ASER Results</h3>\n        <app-aser></app-aser>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel expanded=\"false\" title=\"Attendance\"\n                         [disabled]=\"creatingNew\">\n      <mat-expansion-panel-header class=\"section-header\">\n        <mat-icon fontIcon=\"fa-exclamation-triangle\" *ngIf=\"creatingNew\"\n                  class=\"locked-icon\"\n                  matTooltip=\"Please save before entering further data\"\n                  [matTooltipDisabled]=\"!creatingNew\">\n        </mat-icon>\n        Attendance\n      </mat-expansion-panel-header>\n\n      <div fxLayout=\"row wrap\" fxLayout.lt-lg=\"column\" fxLayoutGap=\"2em\">\n        <div fxFlex=\"45\">\n          <h3>School Attendance</h3>\n          <app-child-attendance\n            [childId]=\"child.getId()\"\n            institution=\"school\"\n            [showDailyAttendanceOfLatest]=\"true\"\n          ></app-child-attendance>\n        </div>\n        <div fxFlex=\"45\">\n          <h3>Coaching Attendance</h3>\n          <app-child-attendance\n            [childId]=\"child.getId()\"\n            institution=\"coaching\"\n            [showDailyAttendanceOfLatest]=\"true\"\n          ></app-child-attendance>\n        </div>\n      </div>\n    </mat-expansion-panel>\n\n\n    <mat-expansion-panel expanded=\"false\"\n                         [disabled]=\"creatingNew\">\n      <mat-expansion-panel-header class=\"section-header\">\n        <mat-icon fontIcon=\"fa-exclamation-triangle\" *ngIf=\"creatingNew\"\n                  class=\"locked-icon\"\n                  matTooltip=\"Please save before entering further data\"\n                  [matTooltipDisabled]=\"!creatingNew\">\n        </mat-icon>\n        Notes & Reports\n      </mat-expansion-panel-header>\n\n      <app-notes-of-child [childId]=\"child.getId()\"></app-notes-of-child>\n    </mat-expansion-panel>\n\n\n    <mat-expansion-panel [expanded]=\"false\"\n                         [disabled]=\"creatingNew\">\n      <mat-expansion-panel-header class=\"section-header\">\n        <mat-icon fontIcon=\"fa-exclamation-triangle\" *ngIf=\"creatingNew\"\n                  class=\"locked-icon\"\n                  matTooltip=\"Please save before entering further data\"\n                  [matTooltipDisabled]=\"!creatingNew\">\n        </mat-icon>\n        Health\n      </mat-expansion-panel-header>\n\n      <div>\n        <mat-form-field>\n          <mat-label>\n            Vaccination Status\n          </mat-label>\n          <mat-select\n            [disabled]=\"!editing\"\n            [(ngModel)]=\"child.health_vaccinationStatus\"\n            [ngModelOptions]=\"{ standalone: true }\"\n          >\n            <mat-option\n              *ngFor=\"let value of vaccinationStatusValues\"\n              [value]=\"value\"\n              >{{ value }}</mat-option\n            >\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>\n            Eye Status\n          </mat-label>\n          <mat-select\n            [disabled]=\"!editing\"\n            [(ngModel)]=\"child.health_eyeHealthStatus\"\n            [ngModelOptions]=\"{ standalone: true }\"\n          >\n            <mat-option *ngFor=\"let value of eyeStatusValues\" [value]=\"value\">{{\n              value\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <!-- TODO: replace bloodGroup text field with a custom-select, once it is user configurable (#236) -->\n          <input\n            matInput\n            formControlName=\"health_bloodGroup\"\n            placeholder=\"Blood Group\"\n            type=\"text\"\n          />\n        </mat-form-field>\n      </div>\n\n      <div>\n        <mat-form-field>\n          <input\n            matInput\n            formControlName=\"health_lastDentalCheckup\"\n            placeholder=\"Last Dental Check-Up\"\n            [matDatepicker]=\"lastDentalCheckupDatepicker\"\n            [disabled]=\"!editing\"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"lastDentalCheckupDatepicker\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #lastDentalCheckupDatepicker></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field>\n          <input\n            matInput\n            formControlName=\"health_lastEyeCheckup\"\n            placeholder=\"Last Eye Check-Up\"\n            [matDatepicker]=\"lastEyeCheckupDatepicker\"\n            [disabled]=\"!editing\"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"lastEyeCheckupDatepicker\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #lastEyeCheckupDatepicker></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field>\n          <input\n            matInput\n            formControlName=\"health_lastENTCheckup\"\n            placeholder=\"Last ENT Check-Up\"\n            [matDatepicker]=\"lastENTCheckupDatepicker\"\n            [disabled]=\"!editing\"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"lastENTCheckupDatepicker\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #lastENTCheckupDatepicker></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field>\n          <input\n            matInput\n            formControlName=\"health_lastVitaminD\"\n            placeholder=\"Last Vitamin D\"\n            [matDatepicker]=\"lastVitaminDDatepicker\"\n            [disabled]=\"!editing\"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"lastVitaminDDatepicker\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #lastVitaminDDatepicker></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field>\n          <input\n            matInput\n            formControlName=\"health_lastDeworming\"\n            placeholder=\"Last De-Worming\"\n            [matDatepicker]=\"lastDewormingDatepicker\"\n            [disabled]=\"!editing\"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"lastDewormingDatepicker\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #lastDewormingDatepicker></mat-datepicker>\n        </mat-form-field>\n      </div>\n\n      <div>\n        <h3>Height & Weight Tracking</h3>\n        <app-health-checkup></app-health-checkup>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel [expanded]=\"false\"\n                         [disabled]=\"creatingNew\">\n      <mat-expansion-panel-header class=\"section-header\">\n        <mat-icon fontIcon=\"fa-exclamation-triangle\" *ngIf=\"creatingNew\"\n                  class=\"locked-icon\"\n                  matTooltip=\"Please save before entering further data\"\n                  [matTooltipDisabled]=\"!creatingNew\">\n        </mat-icon>\n        Educational Materials\n      </mat-expansion-panel-header>\n\n      <app-educational-material></app-educational-material>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel [expanded]=\"!child.isActive()\"\n                         [disabled]=\"creatingNew\">\n      <mat-expansion-panel-header class=\"section-header\">\n        <mat-icon fontIcon=\"fa-exclamation-triangle\" *ngIf=\"creatingNew\"\n                  class=\"locked-icon\"\n                  matTooltip=\"Please save before entering further data\"\n                  [matTooltipDisabled]=\"!creatingNew\">\n        </mat-icon>\n        Dropout\n      </mat-expansion-panel-header>\n\n      <mat-form-field>\n        <input\n          matInput\n          formControlName=\"dropoutDate\"\n          placeholder=\"Dropout Date\"\n          [matDatepicker]=\"dropoutDatepicker\"\n          [disabled]=\"!editing\"\n        />\n        <mat-datepicker-toggle\n          matSuffix\n          [for]=\"dropoutDatepicker\"\n        ></mat-datepicker-toggle>\n        <mat-datepicker #dropoutDatepicker></mat-datepicker>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input\n          matInput\n          formControlName=\"dropoutType\"\n          placeholder=\"Dropout Type\"\n          type=\"text\"\n        />\n      </mat-form-field>\n\n      <mat-form-field>\n        <textarea\n          matInput\n          formControlName=\"dropoutRemarks\"\n          placeholder=\"Dropout Remarks\"\n          type=\"text\"\n        >\n        </textarea>\n      </mat-form-field>\n    </mat-expansion-panel>\n  </form>\n</mat-accordion>\n","import { Injectable } from \"@angular/core\";\nimport { SafeUrl } from \"@angular/platform-browser\";\nimport { CloudFileService } from \"../../../core/webdav/cloud-file-service.service\";\nimport { Child } from \"../model/child\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ChildPhotoService {\n  private basePath = \"photos/\";\n\n  constructor(private cloudFileService: CloudFileService) {}\n\n  /**\n   * Creates an ArrayBuffer of the photo for that Child or the default image url.\n   * @param child\n   */\n  public async getImage(child: {\n    entityId: string;\n    photoFile?: string;\n  }): Promise<SafeUrl> {\n    let image = await this.getImageFromCloudService(child);\n    if (!image) {\n      image = this.getImageFromAssets(child);\n    }\n    return image;\n  }\n\n  private async getImageFromCloudService(child: {\n    entityId: string;\n  }): Promise<SafeUrl> {\n    let image;\n    if (this.cloudFileService.isConnected()) {\n      const imageType = [\".png\", \".jpg\", \".jpeg\", \"\"];\n      for (const ext of imageType) {\n        const filepath = this.basePath + child.entityId + ext;\n        try {\n          image = await this.cloudFileService.getFile(filepath);\n          break;\n        } catch (err) {\n          if (err === \"File not found\") {\n            // ignore and try next file extension\n          } else {\n            console.warn(\"Error loading image: \", err);\n          }\n        }\n      }\n    }\n    return image;\n  }\n\n  private getImageFromAssets(child: { photoFile?: string }): SafeUrl {\n    if (!child.photoFile || child.photoFile.trim() === \"\") {\n      return this.getDefaultImage();\n    }\n    return Child.generatePhotoPath(child.photoFile);\n  }\n\n  private getDefaultImage(): SafeUrl {\n    return \"assets/child.png\";\n  }\n\n  /**\n   * Load the image for the given child asynchronously, immediately returning an Observable\n   * that initially emits the static image and later resolves to the image from the cloud service if one exists.\n   * This allows to immediately display a proper placeholder while the loading may take some time.\n   * @param child The Child instance for which the photo should be loaded.\n   */\n  public getImageAsyncObservable(child: {\n    entityId: string;\n    photoFile?: string;\n  }): BehaviorSubject<SafeUrl> {\n    const resultSubject = new BehaviorSubject(this.getImageFromAssets(child));\n    this.getImageFromCloudService(child).then((photo) => {\n      if (photo && photo !== resultSubject.value) {\n        resultSubject.next(photo);\n      }\n      resultSubject.complete();\n    });\n    return resultSubject;\n  }\n\n  /**\n   * Check if saving/uploading images is supported in the current state.\n   */\n  public canSetImage(): boolean {\n    return this.cloudFileService.isConnected();\n  }\n\n  /**\n   * Uploads a given image through the CloudFileService if connected.\n   * @param imageFile Image to be stored\n   * @param childId Id of child for which one wants to store the image\n   */\n  public async setImage(imageFile: any, childId: string): Promise<void> {\n    if (!this.canSetImage()) {\n      return Promise.reject(\"CloudFileService not connected.\");\n    }\n\n    const fileExt = imageFile.name.substr(imageFile.name.lastIndexOf(\".\"));\n    return this.cloudFileService.uploadFile(\n      imageFile,\n      this.basePath + childId + fileExt\n    );\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../../../core/entity/schema/entity-schema-datatype\";\nimport { ChildPhotoService } from \"./child-photo.service\";\nimport { EntitySchemaField } from \"../../../core/entity/schema/entity-schema-field\";\nimport { EntitySchemaService } from \"../../../core/entity/schema/entity-schema.service\";\nimport { Entity } from \"../../../core/entity/entity\";\n\n/**\n * Dynamically load the child's photo through the ChildPhotoService during Entity loading process.\n */\nexport class LoadChildPhotoEntitySchemaDatatype\n  implements EntitySchemaDatatype {\n  public readonly name = \"load-child-photo\";\n\n  constructor(private childPhotoService: ChildPhotoService) {}\n\n  public transformToDatabaseFormat(value) {\n    return undefined;\n  }\n\n  public transformToObjectFormat(\n    value,\n    schemaField: EntitySchemaField,\n    schemaService: EntitySchemaService,\n    parent: Entity\n  ) {\n    const childDummy: any = Object.assign({}, parent);\n    if (!childDummy.entityId) {\n      childDummy.entityId = Entity.extractEntityIdFromId(childDummy._id);\n    }\n\n    return this.childPhotoService.getImageAsyncObservable(childDummy);\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from \"@angular/core\";\nimport { Child } from \"../model/child\";\nimport { ChildrenService } from \"../children.service\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { MatAutocompleteTrigger } from \"@angular/material/autocomplete\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-child-select\",\n  templateUrl: \"./child-select.component.html\",\n  styleUrls: [\"./child-select.component.scss\"],\n})\nexport class ChildSelectComponent implements OnChanges {\n  searchText = \"\";\n  showOnlyActiveChildren: boolean = true;\n  suggestions = new Array<Child>();\n  allChildren = new Array<Child>();\n  selectedChildren = new Array<Child>();\n\n  @Input() valueAsIds: string[];\n  @Output() valueAsIdsChange = new EventEmitter();\n  @Output() newIdAdded = new EventEmitter();\n  @Output() idRemoved = new EventEmitter();\n\n  @ViewChild(\"inputField\", { static: true }) inputField;\n  @ViewChild(MatAutocompleteTrigger) autocomplete: MatAutocompleteTrigger;\n\n  constructor(private childrenService: ChildrenService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty(\"valueAsIds\")) {\n      this.loadInitial();\n    }\n  }\n\n  private loadInitial() {\n    this.childrenService\n      .getChildren()\n      .pipe(untilDestroyed(this))\n      .subscribe((children) => {\n        this.allChildren = [...children]; // clone array\n        this.search();\n\n        this.selectInitialSelectedChildren();\n      });\n  }\n\n  private selectInitialSelectedChildren() {\n    if (this.valueAsIds === undefined) {\n      return;\n    }\n\n    this.selectedChildren = [];\n\n    this.valueAsIds.forEach((selectedId) => {\n      const selectedChild: Child = this.allChildren.find(\n        (c) => c.getId() === selectedId\n      );\n      if (selectedChild) {\n        this.selectChild(selectedChild, true);\n      }\n    });\n  }\n\n  search() {\n    this.searchText = this.searchText.toLowerCase();\n\n    this.suggestions = this.allChildren.filter((child) => {\n      const key = \"\" + child.name + \" \" + child.projectNumber;\n      if (this.showOnlyActiveChildren && !child.isActive()) {\n        return false;\n      }\n      return key.toLowerCase().includes(this.searchText);\n    });\n  }\n\n  showAll() {\n    this.showOnlyActiveChildren = false;\n    this.search();\n    setTimeout(() => this.autocomplete.openPanel());\n  }\n\n  selectChild(child: Child, suppressChangeEvent = false) {\n    if (\n      this.selectedChildren.findIndex((c) => c.getId() === child.getId()) !== -1\n    ) {\n      // skip if already selected\n      return;\n    }\n\n    this.selectedChildren.push(child);\n    if (!suppressChangeEvent) {\n      this.newIdAdded.emit(child.getId());\n      this.valueAsIdsChange.emit(this.selectedChildren.map((c) => c.getId()));\n    }\n\n    const i = this.allChildren.findIndex((e) => e.getId() === child.getId());\n    this.allChildren.splice(i, 1);\n\n    this.searchText = \"\";\n    this.inputField.nativeElement.value = \"\";\n  }\n\n  unselectChild(child: Child) {\n    const i = this.selectedChildren.findIndex(\n      (e) => e.getId() === child.getId()\n    );\n    this.selectedChildren.splice(i, 1);\n    this.allChildren.unshift(child);\n\n    this.idRemoved.emit(child.getId());\n    this.valueAsIdsChange.emit(this.selectedChildren.map((c) => c.getId()));\n  }\n\n  unselectChildId(childId: string) {\n    const child = this.selectedChildren.find((c) => c.getId() === childId);\n    if (child) {\n      this.unselectChild(child);\n    }\n  }\n}\n","<div>\n  <mat-form-field style='width: 100%'>\n    <input #inputField matInput placeholder='Children' (input)='search()' [matAutocomplete]='autoSuggestions'\n           [(ngModel)]='searchText'>\n    <span *ngFor='let child of selectedChildren' class=\"selected-entity-block\">\n        <span class='fa fa-minus-square-o' (click)='unselectChild(child)'></span>\n        <app-child-block [entity]='child' [linkDisabled]='true' [tooltipDisabled]=\"true\"></app-child-block>\n        &nbsp;\n    </span>\n  </mat-form-field>\n\n  <mat-autocomplete #autoSuggestions='matAutocomplete' (optionSelected)='selectChild($event.option.value)'>\n    <mat-option *ngFor='let res of suggestions' [value]='res'>\n      <app-child-block [entity]='res' [linkDisabled]='true' [tooltipDisabled]=\"true\"></app-child-block>\n    </mat-option>\n    <button mat-button *ngIf=\"showOnlyActiveChildren\" (click)=\"showAll()\"\n            matTooltip=\"extend the list to also show inactive records\">\n      Show Dropouts\n    </button>\n  </mat-autocomplete>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ChildrenService } from \"../children.service\";\nimport { Router } from \"@angular/router\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-children-count-dashboard\",\n  templateUrl: \"./children-count-dashboard.component.html\",\n  styleUrls: [\"./children-count-dashboard.component.scss\"],\n})\nexport class ChildrenCountDashboardComponent implements OnInit {\n  totalChildren: number;\n  childrenByCenter = [];\n\n  constructor(\n    private childrenService: ChildrenService,\n    public router: Router\n  ) {}\n\n  ngOnInit() {\n    this.childrenService\n      .getChildren()\n      .pipe(untilDestroyed(this))\n      .subscribe((results) => {\n        this.totalChildren = 0;\n\n        const countMap = new Map<string, number>();\n        results.forEach((child) => {\n          if (child.isActive()) {\n            let count = countMap.get(child.center);\n            if (count === undefined) {\n              count = 0;\n            }\n\n            count++;\n            this.totalChildren++;\n            countMap.set(child.center, count);\n          }\n        });\n        this.childrenByCenter = Array.from(countMap.entries()); // direct use of Map creates change detection problems\n      });\n  }\n\n  goToChildrenList(filterString: string) {\n    this.router.navigate([\"/child\"], {\n      queryParams: { center: filterString.toLocaleLowerCase() },\n    });\n  }\n}\n","<mat-card class='dashboard-widget'>\n  <mat-card-header class='app-child'>\n    <div mat-card-avatar>\n      <mat-icon fontIcon='fa-child'></mat-icon>\n    </div>\n    <mat-card-title>{{totalChildren}}</mat-card-title>\n    <mat-card-subtitle>Children</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <table class=\"dashboard-table\">\n      <tr *ngFor=\"let entry of childrenByCenter; let i = index;\"\n          class=\"dashboard-table-row\"\n          (click)=\"goToChildrenList(entry[0])\"\n          style=\"cursor: pointer;\"\n\n          angulartics2On=\"click\"\n          angularticsCategory=\"Navigation\"\n          angularticsAction=\"dashboard_children_count_school_link\"\n          [angularticsLabel]=\"'list-entry-' + i\"\n      >\n          <td class=\"dashboard-table-cell\">{{entry[0]}}:</td>\n          <td class=\"dashboard-table-cell\">{{entry[1]}}</td>\n          <td class=\"dashboard-table-cell\"><span class=\"fa fa-external-link-square\"></span></td>\n      </tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n","import {\n  AfterViewInit,\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  HostListener,\n} from \"@angular/core\";\nimport { Child } from \"../model/child\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ChildrenService } from \"../children.service\";\nimport { AttendanceMonth } from \"../../attendance/model/attendance-month\";\nimport { FilterSelection } from \"../../../core/filter/filter-selection/filter-selection\";\nimport { MediaChange, MediaObserver } from \"@angular/flex-layout\";\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { SessionService } from \"../../../core/session/session-service/session.service\";\nimport { User } from \"../../../core/user/user\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\nimport { floor, min } from \"lodash\";\n\nexport interface ColumnGroup {\n  name: string;\n  columns: string[];\n}\n\n@UntilDestroy()\n@Component({\n  selector: \"app-children-list\",\n  templateUrl: \"./children-list.component.html\",\n  styleUrls: [\"./children-list.component.scss\"],\n})\nexport class ChildrenListComponent implements OnInit, AfterViewInit {\n  childrenList: Child[] = [];\n  attendanceList = new Map<string, AttendanceMonth[]>();\n  childrenDataSource = new MatTableDataSource();\n\n  centerFS = new FilterSelection(\"center\", []);\n  dropoutFS = new FilterSelection(\"status\", [\n    {\n      key: \"active\",\n      label: \"Current Project Children\",\n      filterFun: (c: Child) => c.isActive(),\n    },\n    {\n      key: \"dropout\",\n      label: \"Dropouts\",\n      filterFun: (c: Child) => !c.isActive(),\n    },\n    { key: \"\", label: \"All\", filterFun: () => true },\n  ]);\n  filterSelections = [this.dropoutFS, this.centerFS];\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  columnGroupSelection = \"School Info\";\n  columnGroups: ColumnGroup[] = [\n    {\n      name: \"Basic Info\",\n      columns: [\n        \"projectNumber\",\n        \"name\",\n        \"age\",\n        \"gender\",\n        \"schoolClass\",\n        \"schoolId\",\n        \"center\",\n        \"status\",\n      ],\n    },\n    {\n      name: \"School Info\",\n      columns: [\n        \"projectNumber\",\n        \"name\",\n        \"age\",\n        \"schoolClass\",\n        \"schoolId\",\n        \"attendance-school\",\n        \"attendance-coaching\",\n        \"motherTongue\",\n      ],\n    },\n    {\n      name: \"Status\",\n      columns: [\n        \"projectNumber\",\n        \"name\",\n        \"center\",\n        \"status\",\n        \"admissionDate\",\n        \"has_aadhar\",\n        \"has_kanyashree\",\n        \"has_bankAccount\",\n        \"has_rationCard\",\n        \"has_bplCard\",\n      ],\n    },\n    {\n      name: \"Health\",\n      columns: [\n        \"projectNumber\",\n        \"name\",\n        \"center\",\n        \"health_vaccinationStatus\",\n        \"health_bloodGroup\",\n        \"health_eyeHealthStatus\",\n        \"health_LastEyeCheckup\",\n        \"health_LastDentalCheckup\",\n        \"health_LastENTCheckup\",\n        \"health_LastVitaminD\",\n        \"health_LastDeworming\",\n        \"gender\",\n        \"age\",\n        \"dateOfBirth\",\n      ],\n    },\n    {\n      name: \"Mobile\",\n      columns: [\"projectNumber\", \"name\", \"age\", \"schoolId\"],\n    },\n  ];\n  columnsToDisplay = [\"projectNumber\", \"name\"];\n  filterString = \"\";\n\n  public paginatorPageSize: number;\n  public paginatorPageIndex: number;\n  private user: User;\n\n  /** dynamically calculated number of attendance blocks displayed in a column to avoid overlap */\n  maxAttendanceBlocks: number = 3;\n  @ViewChild(\"attendanceSchoolCell\") schoolCell: ElementRef;\n  @ViewChild(\"attendanceCoachingCell\") coachingCell: ElementRef;\n\n  constructor(\n    private childrenService: ChildrenService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private media: MediaObserver,\n    private sessionService: SessionService,\n    private entityMapperService: EntityMapperService\n  ) {}\n\n  ngOnInit() {\n    this.loadData();\n    this.loadUrlParams();\n    this.user = this.sessionService.getCurrentUser();\n    this.paginatorPageSize = this.user.paginatorSettingsPageSize.childrenList;\n    this.paginatorPageIndex = this.user.paginatorSettingsPageIndex.childrenList;\n    this.media.media$\n      .pipe(untilDestroyed(this))\n      .subscribe((change: MediaChange) => {\n        switch (change.mqAlias) {\n          case \"xs\":\n          case \"sm\": {\n            this.displayColumnGroup(\"Mobile\");\n            this.maxAttendanceBlocks = 1;\n            break;\n          }\n          case \"md\": {\n            this.displayColumnGroup(\"School Info\");\n            this.maxAttendanceBlocks = 2;\n            break;\n          }\n          case \"lg\": {\n            this.maxAttendanceBlocks = 3;\n            break;\n          }\n          case \"xl\": {\n            this.maxAttendanceBlocks = 6;\n            break;\n          }\n        }\n      });\n  }\n\n  private loadUrlParams(replaceUrl: boolean = false) {\n    this.route.queryParams.subscribe((params) => {\n      this.columnGroupSelection = params[\"view\"]\n        ? params[\"view\"]\n        : this.columnGroupSelection;\n      this.displayColumnGroup(this.columnGroupSelection);\n\n      this.filterSelections.forEach((f) => {\n        f.selectedOption = params[f.name];\n        if (f.selectedOption === undefined && f.options.length > 0) {\n          f.selectedOption = f.options[0].key;\n        }\n      });\n      this.applyFilterSelections(replaceUrl);\n    });\n  }\n\n  ngAfterViewInit() {\n    this.childrenDataSource.sort = this.sort;\n    this.childrenDataSource.paginator = this.paginator;\n    setTimeout(() => {\n      this.paginator.pageIndex = this.paginatorPageIndex;\n      this.paginator.page.next({\n        pageIndex: this.paginator.pageIndex,\n        pageSize: this.paginator.pageSize,\n        length: this.paginator.length,\n      });\n    });\n  }\n\n  onPaginateChange(event: PageEvent) {\n    this.paginatorPageSize = event.pageSize;\n    this.paginatorPageIndex = event.pageIndex;\n    this.user.paginatorSettingsPageSize.childrenList = this.paginatorPageSize;\n    this.user.paginatorSettingsPageIndex.childrenList = this.paginatorPageIndex;\n    this.entityMapperService.save<User>(this.user);\n  }\n\n  private loadData(replaceUrl: boolean = false) {\n    this.childrenService\n      .getChildren()\n      .pipe(untilDestroyed(this))\n      .subscribe((children) => {\n        this.childrenList = children;\n        const centers = children\n          .map((c) => c.center)\n          .filter((value, index, arr) => value && arr.indexOf(value) === index);\n        this.centerFS.initOptions(centers, \"center\");\n\n        this.applyFilterSelections(replaceUrl);\n      });\n    this.childrenService\n      .getAttendances()\n      .pipe(untilDestroyed(this))\n      .subscribe((results) => this.prepareAttendanceData(results));\n  }\n  /*\n  private initCenterFilterOptions(centersWithProbability: string[]) {\n    const options = [{key: '', label: 'All', filterFun: (c: Child) => true}];\n\n    centersWithProbability.forEach(center => {\n      options.push({key: center.toLowerCase(), label: center, filterFun: (c: Child) => c.center === center});\n    });\n\n    this.centerFS.options = options;\n  } */\n\n  prepareAttendanceData(loadedEntities: AttendanceMonth[]) {\n    this.attendanceList = new Map<string, AttendanceMonth[]>();\n    loadedEntities.forEach((x) => {\n      if (!this.attendanceList.has(x.student)) {\n        this.attendanceList.set(x.student, new Array<AttendanceMonth>());\n      }\n      this.attendanceList.get(x.student).push(x);\n    });\n\n    this.attendanceList.forEach((studentsAttendance) => {\n      studentsAttendance.sort((a, b) => {\n        // descending by date\n        if (a.month > b.month) {\n          return -1;\n        }\n        if (a.month < b.month) {\n          return 1;\n        }\n        return 0;\n      });\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.childrenDataSource.filter = filterValue;\n  }\n\n  displayColumnGroup(columnGroupName: string) {\n    this.columnGroupSelection = columnGroupName;\n    let found = false;\n    let group: ColumnGroup;\n    let i = 0;\n    while (!found && i < this.columnGroups.length) {\n      if (this.columnGroups[i].name === columnGroupName) {\n        found = true;\n        group = this.columnGroups[i];\n      }\n      i++;\n    }\n    this.columnsToDisplay = group.columns;\n    this.updateUrl();\n  }\n\n  updateUrl(replaceUrl: boolean = false) {\n    const params = {};\n    this.filterSelections.forEach((f) => {\n      params[f.name] = f.selectedOption;\n    });\n\n    params[\"view\"] = this.columnGroupSelection;\n\n    this.router.navigate([\"child\"], {\n      queryParams: params,\n      replaceUrl: replaceUrl,\n    });\n  }\n\n  applyFilterSelections(replaceUrl: boolean = false) {\n    let filteredData = this.childrenList;\n\n    this.filterSelections.forEach((f) => {\n      filteredData = filteredData.filter(f.getSelectedFilterFunction());\n    });\n\n    this.childrenDataSource.data = filteredData;\n\n    this.updateUrl(replaceUrl);\n  }\n}\n","<h1>Children List</h1>\n\n<mat-expansion-panel\n  expanded=\"true\"\n  fxLayout=\"column wrap\"\n  fxLayoutGap=\"10px\"\n  class=\"filter-panel\"\n>\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"none end\">\n    <!-- text search -->\n    <div fxFlex=\"50\">\n      <mat-form-field style=\"width: 100%;\">\n        <input\n          matInput\n          placeholder=\"Filter\"\n          (ngModelChange)=\"applyFilter($event)\"\n          [(ngModel)]=\"filterString\"\n        />\n        <button\n          mat-icon-button\n          *ngIf=\"filterString\"\n          matSuffix\n          aria-label=\"Clear\"\n          (click)=\"filterString = ''; applyFilter('')\"\n        >\n          <mat-icon fontIcon=\"fa-times\"></mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n    <!-- number of table entries -->\n    <div fxFlex=\"25\" fxHide.xs=\"true\" class=\"align-form-field\">\n      (Showing {{ childrenDataSource.filteredData.length }} children)\n    </div>\n    <!-- add new button -->\n    <div fxFlex=\"25\" class=\"align-form-field\">\n      <button\n        mat-stroked-button\n        color=\"accent\"\n        [routerLink]=\"['/child', 'new']\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"UserAction\"\n        angularticsAction=\"children_list_add_new\"\n      >\n        <mat-icon\n          class=\"button-icon\"\n          aria-label=\"add child\"\n          fontIcon=\"fa-plus-circle\"\n        ></mat-icon>\n        <span fxHide.lt-md=\"true\">\n          Add New\n        </span>\n      </button>\n      <app-export-data\n        [data]=\"childrenList\"\n        format=\"csv\"\n        filename=\"ChildrenList\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"UserAction\"\n        angularticsAction=\"children_list_csv_export\"\n      >\n        <mat-icon\n          class=\"button-icon\"\n          aria-label=\"download csv\"\n          fontIcon=\"fa-download\"\n        ></mat-icon>\n        <span fxHide.lt-md=\"true\">\n          Download CSV\n        </span>\n      </app-export-data>\n    </div>\n  </div>\n  <!--\n  <mat-form-field>\n    <mat-select fxShow.xs=\"true\" [value]=\"columnGroupSelection\">\n      <mat-option *ngFor=\"let item of columnGroups\" [value]=\"item.name\"\n                  (click)=\"displayColumnGroup(item.name)\">\n        {{item.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  -->\n  <div\n    fxLayout=\"row wrap\"\n    fxLayoutGap=\"10px\"\n    class=\"filter-button\"\n    fxHide.lt-sm\n  >\n    <mat-button-toggle-group\n      name=\"columnSelection\"\n      [(value)]=\"columnGroupSelection\"\n      fxLayout=\"row wrap\"\n    >\n      <mat-button-toggle\n        *ngFor=\"let item of columnGroups\"\n        [value]=\"item.name\"\n        (click)=\"displayColumnGroup(item.name)\"\n      >\n        {{ item.name }}\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n\n    <mat-button-toggle-group\n      *ngFor=\"let filterSelection of filterSelections\"\n      [name]=\"filterSelection.name\"\n      [value]=\"filterSelection.selectedOption\"\n    >\n      <mat-button-toggle\n        *ngFor=\"let option of filterSelection.options\"\n        [value]=\"option.key\"\n        (click)=\"\n          filterSelection.selectedOption = option.key; applyFilterSelections()\n        \"\n      >\n        {{ option.label }}\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <div fxLayout=\"row wrap\" fxHide.gt-xs>\n    <mat-form-field\n      *ngFor=\"let filterSelection of filterSelections\"\n      style=\"padding-right: 1%;\"\n    >\n      <mat-label>{{ filterSelection.name }}</mat-label>\n      <mat-select\n        [id]=\"filterSelection.name\"\n        [value]=\"filterSelection.selectedOption\"\n        placeholder=\"filterSelection.name\"\n      >\n        <mat-option\n          *ngFor=\"let option of filterSelection.options\"\n          [value]=\"option.key\"\n          (click)=\"\n            filterSelection.selectedOption = option.key; applyFilterSelections()\n          \"\n        >\n          {{ option.label }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n</mat-expansion-panel>\n\n<!--<mat-divider></mat-divider>-->\n\n<div class=\"mat-elevation-z8 table-list\">\n  <table mat-table [dataSource]=\"childrenDataSource\" matSort style=\"width: 100%\">\n    <ng-container matColumnDef=\"projectNumber\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>PN</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.projectNumber }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let child\">\n        <app-child-block [entity]=\"child\"></app-child-block>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"age\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Age</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.age }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"dateOfBirth\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>DoB</th>\n      <td mat-cell *matCellDef=\"let child\">\n        {{ child.dateOfBirth | date: \"longDate\" }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"gender\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Gender</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.gender }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"schoolClass\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Class</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.schoolClass }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"schoolId\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>School</th>\n      <td mat-cell *matCellDef=\"let child\">\n        <app-school-block [entityId]=\"child.schoolId\"></app-school-block>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"attendance-school\">\n      <th mat-header-cell #attendanceSchoolCell *matHeaderCellDef> Attendance (School)</th>\n      <td mat-cell class=\"cell-with-blocks\" *matCellDef=\"let child\">\n        <app-attendance-block\n          *ngFor=\"\n            let att of attendanceList.get(child.getId())\n              | filterBy: {'institution': 'school'}\n              | slice:0:maxAttendanceBlocks\n          \"\n          [attendanceData]=\"att\"\n        ></app-attendance-block>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"attendance-coaching\">\n      <th mat-header-cell #attendanceCoachingCell *matHeaderCellDef> Attendance (Coaching)</th>\n      <td mat-cell class=\"cell-with-blocks\" *matCellDef=\"let child\">\n        <app-attendance-block\n          *ngFor=\"\n            let att of attendanceList.get(child.getId())\n              | filterBy: {'institution': 'coaching'}\n              | slice:0:maxAttendanceBlocks\n          \"\n          [attendanceData]=\"att\"\n        ></app-attendance-block>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"center\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Center</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.center }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.status }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"admissionDate\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Admission</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.admissionDate }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"motherTongue\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Mother Tongue</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.motherTongue }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"has_aadhar\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Aadhar</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.has_aadhar }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"has_bankAccount\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Bank Account</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.has_bankAccount }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"has_kanyashree\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Kanyashree</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.has_kanyashree }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"has_rationCard\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Ration Card</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.has_rationCard }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"has_bplCard\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>BPL Card</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.has_BplCard }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"health_vaccinationStatus\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\n        Vaccination Status\n      </th>\n      <td mat-cell *matCellDef=\"let child\">\n        {{ child.health_vaccinationStatus }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"health_bloodGroup\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Blood Group</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.health_bloodGroup }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"health_eyeHealthStatus\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Eye Status</th>\n      <td mat-cell *matCellDef=\"let child\">\n        {{ child.health_eyeHealthStatus }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"health_LastEyeCheckup\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\n        Last Eye Check-Up\n      </th>\n      <td mat-cell *matCellDef=\"let child\">\n        {{ child.health_lastEyeCheckup }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"health_LastDentalCheckup\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\n        Last Dental Check-Ups\n      </th>\n      <td mat-cell *matCellDef=\"let child\">\n        {{ child.health_lastDentalCheckup }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"health_LastENTCheckup\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\n        Last ENT Check-Up\n      </th>\n      <td mat-cell *matCellDef=\"let child\">\n        {{ child.health_lastENTCheckup }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"health_LastVitaminD\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Vitamin D</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.health_lastVitaminD }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"health_LastDeworming\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Last De-Worming</th>\n      <td mat-cell *matCellDef=\"let child\">{{ child.health_lastDeworming }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr\n      mat-row\n      *matRowDef=\"let child; columns: columnsToDisplay\"\n      [routerLink]=\"['/child', child.getId()]\"\n      style=\"cursor: pointer;\"\n      class=\"table-list-item\"\n    ></tr>\n  </table>\n  <mat-paginator\n    (page)=\"onPaginateChange($event)\"\n    [pageSize]=\"paginatorPageSize\"\n    [pageIndex]=\"paginatorPageIndex\"\n    [pageSizeOptions]=\"[3, 10, 20, 50]\"\n    [showFirstLastButtons]=\"true\"\n  ></mat-paginator>\n</div>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule, DatePipe, PercentPipe } from \"@angular/common\";\nimport { ChildDetailsComponent } from \"./child-details/child-details.component\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { ChildrenListComponent } from \"./children-list/children-list.component\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { ChildrenService } from \"./children.service\";\nimport { AttendanceBlockComponent } from \"../attendance/attendance-block/attendance-block.component\";\nimport { ChildAttendanceComponent } from \"../attendance/child-attendance/child-attendance.component\";\nimport { EntitySubrecordModule } from \"../../core/entity-subrecord/entity-subrecord.module\";\nimport { ChildBlockComponent } from \"./child-block/child-block.component\";\nimport { ChildrenCountDashboardComponent } from \"./children-count-dashboard/children-count-dashboard.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { AttendanceAverageDashboardComponent } from \"../attendance/dashboard-widgets/attendance-average-dashboard/attendance-average-dashboard.component\";\nimport { AttendanceWarningsDashboardComponent } from \"../attendance/dashboard-widgets/attendance-warnings-dashboard/attendance-warnings-dashboard.component\";\nimport { NotesOfChildComponent } from \"../notes/notes-of-child/notes-of-child.component\";\nimport { ChildSelectComponent } from \"./child-select/child-select.component\";\nimport { SchoolsModule } from \"../schools/schools.module\";\nimport { EducationalMaterialComponent } from \"../educational-material/educational-material-component/educational-material.component\";\nimport { AserComponent } from \"../aser/aser-component/aser.component\";\nimport { FilterPipeModule } from \"ngx-filter-pipe\";\nimport { AddMonthAttendanceComponent } from \"../attendance/add-month-attendance/add-month-attendance.component\";\nimport { AttendanceDaysComponent } from \"../attendance/attendance-days/attendance-days.component\";\nimport { AttendanceDetailsComponent } from \"../attendance/attendance-details/attendance-details.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AddDayAttendanceComponent } from \"../attendance/add-day-attendance/add-day-attendance.component\";\nimport { AttendanceWeekDashboardComponent } from \"../attendance/dashboard-widgets/attendance-week-dashboard/attendance-week-dashboard.component\";\nimport { NoRecentNotesDashboardComponent } from \"../notes/dashboard-widgets/no-recent-notes-dashboard/no-recent-notes-dashboard.component\";\nimport { AttendanceDayBlockComponent } from \"../attendance/attendance-days/attendance-day-block.component\";\nimport { AttendanceManagerComponent } from \"../attendance/attendance-manager/attendance-manager.component\";\nimport { HealthCheckupComponent } from \"../health-checkup/health-checkup-component/health-checkup.component\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { PreviousSchoolsComponent } from \"../previous-schools/previous-schools.component\";\nimport { WebdavModule } from \"app/core/webdav/webdav.module\";\nimport { AdminModule } from \"../../core/admin/admin.module\";\nimport { SelectGroupChildrenComponent } from \"./select-group-children/select-group-children.component\";\nimport { RollCallComponent } from \"../attendance/add-day-attendance/roll-call/roll-call.component\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { RecentNotesDashboardComponent } from \"../notes/dashboard-widgets/recent-notes-dashboard/recent-notes-dashboard.component\";\nimport { FormDialogModule } from \"../../core/form-dialog/form-dialog.module\";\nimport { ConfirmationDialogModule } from \"../../core/confirmation-dialog/confirmation-dialog.module\";\nimport { CONFLICT_RESOLUTION_STRATEGY } from \"../../conflict-resolution/auto-resolution/conflict-resolution-strategy\";\nimport { AttendanceMonthConflictResolutionStrategy } from \"../attendance/attendance-month-conflict-resolution-strategy\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { Angulartics2Module } from \"angulartics2\";\nimport { AttendanceAnalysisComponent } from \"../attendance/attendance-analysis/attendance-analysis.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    RouterModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FilterPipeModule,\n    EntitySubrecordModule,\n    SchoolsModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    AdminModule,\n    MatListModule,\n    WebdavModule,\n    MatProgressSpinnerModule,\n    ConfirmationDialogModule,\n    FormDialogModule,\n    Angulartics2Module,\n  ],\n  declarations: [\n    AttendanceBlockComponent,\n    ChildBlockComponent,\n    ChildAttendanceComponent,\n    NotesOfChildComponent,\n    ChildDetailsComponent,\n    ChildrenListComponent,\n    ChildrenCountDashboardComponent,\n    AttendanceAverageDashboardComponent,\n    AttendanceWarningsDashboardComponent,\n    ChildSelectComponent,\n    EducationalMaterialComponent,\n    AserComponent,\n    AddMonthAttendanceComponent,\n    AttendanceDayBlockComponent,\n    AttendanceDaysComponent,\n    AttendanceDetailsComponent,\n    AddDayAttendanceComponent,\n    RollCallComponent,\n    SelectGroupChildrenComponent,\n    AttendanceWeekDashboardComponent,\n    NoRecentNotesDashboardComponent,\n    RecentNotesDashboardComponent,\n    AttendanceManagerComponent,\n    AttendanceAnalysisComponent,\n    HealthCheckupComponent,\n    PreviousSchoolsComponent,\n  ],\n  providers: [\n    ChildrenService,\n    DatePipe,\n    PercentPipe,\n    {\n      provide: CONFLICT_RESOLUTION_STRATEGY,\n      useClass: AttendanceMonthConflictResolutionStrategy,\n      multi: true,\n    },\n  ],\n  exports: [\n    ChildBlockComponent,\n    ChildSelectComponent,\n    ChildrenCountDashboardComponent,\n    AttendanceAverageDashboardComponent,\n    AttendanceWarningsDashboardComponent,\n    AttendanceWarningsDashboardComponent,\n    AttendanceWeekDashboardComponent,\n    NoRecentNotesDashboardComponent,\n    RecentNotesDashboardComponent,\n    AttendanceDaysComponent,\n  ],\n})\nexport class ChildrenModule {}\n","import { Injectable } from \"@angular/core\";\nimport { from, Observable, Subject } from \"rxjs\";\nimport { Child } from \"./model/child\";\nimport { EntityMapperService } from \"../../core/entity/entity-mapper.service\";\nimport { AttendanceMonth } from \"../attendance/model/attendance-month\";\nimport { Note } from \"../notes/model/note\";\nimport { EducationalMaterial } from \"../educational-material/model/educational-material\";\nimport { Aser } from \"../aser/model/aser\";\nimport { ChildSchoolRelation } from \"./model/childSchoolRelation\";\nimport { HealthCheck } from \"../health-checkup/model/health-check\";\nimport { EntitySchemaService } from \"../../core/entity/schema/entity-schema.service\";\nimport { ChildPhotoService } from \"./child-photo-service/child-photo.service\";\nimport { LoadChildPhotoEntitySchemaDatatype } from \"./child-photo-service/datatype-load-child-photo\";\nimport moment from \"moment\";\nimport * as uniqid from \"uniqid\";\nimport { LoggingService } from \"../../core/logging/logging.service\";\nimport { DatabaseIndexingService } from \"../../core/entity/database-indexing/database-indexing.service\";\n\n@Injectable()\nexport class ChildrenService {\n  constructor(\n    private entityMapper: EntityMapperService,\n    private entitySchemaService: EntitySchemaService,\n    private dbIndexing: DatabaseIndexingService,\n    childPhotoService: ChildPhotoService,\n    private logger: LoggingService\n  ) {\n    this.entitySchemaService.registerSchemaDatatype(\n      new LoadChildPhotoEntitySchemaDatatype(childPhotoService)\n    );\n    this.createDatabaseIndices();\n  }\n\n  public createDatabaseIndices() {\n    this.createAttendanceAnalysisIndex();\n    this.createNotesIndex();\n    this.createAttendancesIndex();\n    this.createChildSchoolRelationIndex();\n  }\n\n  /**\n   * returns an observable which retrieves children from the database and loads their pictures\n   */\n  getChildren(): Observable<Child[]> {\n    const results = new Subject<Child[]>();\n\n    this.entityMapper.loadType<Child>(Child).then(async (loadedChildren) => {\n      results.next(loadedChildren);\n\n      for (const loadedChild of loadedChildren) {\n        const childCurrentSchoolInfo = await this.getCurrentSchoolInfoForChild(\n          loadedChild.getId()\n        );\n        await this.migrateToNewChildSchoolRelationModel(\n          loadedChild,\n          childCurrentSchoolInfo\n        );\n        loadedChild.schoolClass = childCurrentSchoolInfo.schoolClass;\n        loadedChild.schoolId = childCurrentSchoolInfo.schoolId;\n      }\n      results.next(loadedChildren);\n      results.complete();\n    });\n\n    return results;\n  }\n\n  /**\n   * DATA MODEL UPGRADE\n   * Check if the Child Entity still contains direct links to schoolId and schoolClass\n   * and create a new ChildSchoolRelation if necessary.\n   * @param loadedChild Child entity to be checked and migrated\n   * @param childCurrentSchoolInfo Currently available school information according to new data model from ChildSchoolRelation entities\n   */\n  private async migrateToNewChildSchoolRelationModel(\n    loadedChild: Child,\n    childCurrentSchoolInfo: { schoolId: string; schoolClass: string }\n  ) {\n    if (!loadedChild.schoolClass && !loadedChild.schoolId) {\n      // no data from old model -> skip migration\n      return;\n    }\n\n    if (\n      loadedChild.schoolId !== childCurrentSchoolInfo.schoolId ||\n      loadedChild.schoolClass !== childCurrentSchoolInfo.schoolClass\n    ) {\n      // generate a ChildSchoolRelation entity from the information of the previous data model\n      const autoMigratedChildSchoolRelation = new ChildSchoolRelation(uniqid());\n      autoMigratedChildSchoolRelation.childId = loadedChild.getId();\n      autoMigratedChildSchoolRelation.schoolId = loadedChild.schoolId;\n      autoMigratedChildSchoolRelation.schoolClass = loadedChild.schoolClass;\n      await this.entityMapper.save(autoMigratedChildSchoolRelation);\n      this.logger.debug(\n        \"migrated Child entity to new ChildSchoolRelation model \" +\n          loadedChild._id\n      );\n      console.log(autoMigratedChildSchoolRelation);\n    }\n\n    // save the Child entity to remove the deprecated attributes from the doc in the database\n    await this.entityMapper.save(loadedChild);\n  }\n\n  /**\n   * returns an observable which retrieves a single child and loads its photo\n   * @param id id of child\n   */\n  getChild(id: string): Observable<Child> {\n    const promise = this.entityMapper\n      .load<Child>(Child, id)\n      .then((loadedChild) => {\n        return this.getCurrentSchoolInfoForChild(id).then(\n          (currentSchoolInfo) => {\n            loadedChild.schoolClass = currentSchoolInfo.schoolClass;\n            loadedChild.schoolId = currentSchoolInfo.schoolId;\n            return loadedChild;\n          }\n        );\n      });\n    return from(promise);\n  }\n\n  getAttendances(): Observable<AttendanceMonth[]> {\n    return from(this.entityMapper.loadType<AttendanceMonth>(AttendanceMonth));\n  }\n\n  getAttendancesOfChild(childId: string): Observable<AttendanceMonth[]> {\n    const promise = this.dbIndexing\n      .queryIndex(\"attendances_index/by_child\", {\n        key: childId,\n        include_docs: true,\n      })\n      .then((loadedEntities) => {\n        return loadedEntities.rows.map((loadedRecord) => {\n          const entity = new AttendanceMonth(\"\");\n          this.entitySchemaService.loadDataIntoEntity(entity, loadedRecord.doc);\n          return entity;\n        });\n      });\n\n    return from(promise);\n  }\n\n  getAttendancesOfMonth(month: Date): Observable<AttendanceMonth[]> {\n    const monthString =\n      month.getFullYear().toString() + \"-\" + (month.getMonth() + 1).toString();\n    const promise = this.dbIndexing\n      .queryIndex(\"attendances_index/by_month\", {\n        key: monthString,\n        include_docs: true,\n      })\n      .then((loadedEntities) => {\n        return loadedEntities.rows.map((loadedRecord) => {\n          const entity = new AttendanceMonth(\"\");\n          this.entitySchemaService.loadDataIntoEntity(entity, loadedRecord.doc);\n          return entity;\n        });\n      });\n\n    return from(promise);\n  }\n\n  private createAttendancesIndex(): Promise<any> {\n    const designDoc = {\n      _id: \"_design/attendances_index\",\n      views: {\n        by_child: {\n          map:\n            \"(doc) => { \" +\n            'if (!doc._id.startsWith(\"' +\n            AttendanceMonth.ENTITY_TYPE +\n            '\")) return;' +\n            \"emit(doc.student); \" +\n            \"}\",\n        },\n        by_month: {\n          map:\n            \"(doc) => { \" +\n            'if (!doc._id.startsWith(\"' +\n            AttendanceMonth.ENTITY_TYPE +\n            '\")) return;' +\n            \"emit(doc.month); \" +\n            \"}\",\n        },\n      },\n    };\n\n    return this.dbIndexing.createIndex(designDoc);\n  }\n\n  private createChildSchoolRelationIndex(): Promise<any> {\n    const designDoc = {\n      _id: \"_design/childSchoolRelations_index\",\n      views: {\n        by_child: {\n          map: `(doc) => {\n            if (!doc._id.startsWith(\"${ChildSchoolRelation.ENTITY_TYPE}\")) return;\n            emit(doc.childId);\n            }`,\n        },\n        by_school: {\n          map: `(doc) => {\n            if ( (!doc._id.startsWith(\"${ChildSchoolRelation.ENTITY_TYPE}\")) ||\n                (doc.start && (new Date(doc.start) > new Date().setHours(0, 0, 0, 0))) ||\n                (doc.end && (new Date(doc.end) < new Date().setHours(0, 0, 0, 0))) ) {\n              return;\n            }\n            emit(doc.schoolId);\n            }`,\n        },\n        by_date: {\n          map: `(doc) => {\n            if (!doc._id.startsWith(\"${ChildSchoolRelation.ENTITY_TYPE}\")) return;\n            let timestamp = (new Date(doc.start || '3000-01-01')).getTime().toString().padStart(14, \"0\");\n            emit(doc.childId + '_' + timestamp);\n            }`,\n        },\n      },\n    };\n    return this.dbIndexing.createIndex(designDoc);\n  }\n\n  queryLatestRelation(childId: string): Promise<ChildSchoolRelation> {\n    return this.querySortedRelations(childId, 1).then(\n      (children) => children[0]\n    );\n  }\n\n  querySortedRelations(\n    childId: string,\n    limit?: number\n  ): Promise<ChildSchoolRelation[]> {\n    const options: any = {\n      startkey: childId + \"_\\uffff\", //  higher value needs to be startkey\n      endkey: childId + \"_\", //  \\uffff is not a character -> only relations staring with childId will be selected\n      descending: true,\n      include_docs: true,\n      limit: limit,\n    };\n    return this.dbIndexing\n      .queryIndex(\"childSchoolRelations_index/by_date\", options)\n      .then((loadedEntities) => {\n        return loadedEntities.rows.map((loadedRecord) => {\n          const entity = new ChildSchoolRelation(\"\");\n          this.entitySchemaService.loadDataIntoEntity(entity, loadedRecord.doc);\n          return entity;\n        });\n      });\n  }\n\n  queryRelationsOf(\n    queryType: \"child\" | \"school\",\n    id: string\n  ): Promise<ChildSchoolRelation[]> {\n    return this.dbIndexing\n      .queryIndex(\"childSchoolRelations_index/by_\" + queryType, {\n        key: id,\n        include_docs: true,\n      })\n      .then((loadedEntities) => {\n        return loadedEntities.rows.map((loadedRecord) => {\n          const entity = new ChildSchoolRelation(\"\");\n          this.entitySchemaService.loadDataIntoEntity(entity, loadedRecord.doc);\n          return entity;\n        });\n      });\n  }\n\n  queryAttendanceLast3Months() {\n    return this.dbIndexing.queryIndex(\"avg_attendance_index/three_months\", {\n      reduce: true,\n      group: true,\n    });\n  }\n\n  queryAttendanceLastMonth() {\n    return this.dbIndexing.queryIndex(\"avg_attendance_index/last_month\", {\n      reduce: true,\n      group: true,\n    });\n  }\n\n  private createAttendanceAnalysisIndex(): Promise<any> {\n    const designDoc = {\n      _id: \"_design/avg_attendance_index\",\n      views: {\n        three_months: {\n          map: this.getAverageAttendanceMapFunction(),\n          reduce: \"_stats\",\n        },\n        last_month: {\n          map: this.getLastAverageAttendanceMapFunction(),\n          reduce: \"_stats\",\n        },\n      },\n    };\n\n    return this.dbIndexing.createIndex(designDoc);\n  }\n\n  private getAverageAttendanceMapFunction() {\n    return (\n      \"(doc) => {\" +\n      'if (!doc._id.startsWith(\"AttendanceMonth:\") ) { return; }' +\n      \"if (!isWithinLast3Months(new Date(doc.month), new Date())) { return; }\" +\n      \"var attendance = (doc.daysAttended / (doc.daysWorking - doc.daysExcused));\" +\n      \"if (!Number.isNaN(attendance)) { emit(doc.student, attendance); }\" +\n      \"function isWithinLast3Months(date, now) {\" +\n      \"  let months;\" +\n      \"  months = (now.getFullYear() - date.getFullYear()) * 12;\" +\n      \"  months -= date.getMonth();\" +\n      \"  months += now.getMonth();\" +\n      \"  if (months < 0) { return false; }\" +\n      \"  return months <= 3;\" +\n      \"}\" +\n      \"}\"\n    );\n  }\n\n  private getLastAverageAttendanceMapFunction() {\n    return (\n      \"(doc) => {\" +\n      'if (!doc._id.startsWith(\"AttendanceMonth:\")) { return; }' +\n      \"if (!isWithinLastMonth(new Date(doc.month), new Date())) { return; }\" +\n      \"var attendance = (doc.daysAttended / (doc.daysWorking - doc.daysExcused));\" +\n      \"if (!Number.isNaN(attendance)) { emit(doc.student, attendance); }\" +\n      \"function isWithinLastMonth(date, now) {\" +\n      \"  let months;\" +\n      \"  months = (now.getFullYear() - date.getFullYear()) * 12;\" +\n      \"  months -= date.getMonth();\" +\n      \"  months += now.getMonth();\" +\n      \"  return months === 1;\" +\n      \"}\" +\n      \"}\"\n    );\n  }\n\n  getNotesOfChild(childId: string): Observable<Note[]> {\n    const promise = this.dbIndexing\n      .queryIndex(\"notes_index/by_child\", { key: childId, include_docs: true })\n      .then((loadedEntities) => {\n        return loadedEntities.rows.map((loadedRecord) => {\n          const entity = new Note(\"\");\n          this.entitySchemaService.loadDataIntoEntity(entity, loadedRecord.doc);\n          return entity;\n        });\n      });\n\n    return from(promise);\n  }\n\n  /**\n   * Query how many days ago the last note for each child was added.\n   *\n   * Warning: Children without any notes will be missing from this map.\n   *\n   * @return A map of childIds as key and days since last note as value\n   */\n  public async getDaysSinceLastNoteOfEachChild(): Promise<Map<string, number>> {\n    const stats = await this.dbIndexing.queryIndex(\n      \"notes_index/note_date_in_days_for_child\",\n      { reduce: true, group: true }\n    );\n\n    const results = new Map();\n    for (const childStats of stats.rows) {\n      const dateOfLatestNoteInDays = childStats.value.max;\n      const todayInDays = new Date().getTime() / 86400000; // ms/day: 1000*60*60*24 = 86400000\n      const daysSinceLastNote = todayInDays - dateOfLatestNoteInDays;\n      results.set(childStats.key, daysSinceLastNote);\n    }\n\n    return results;\n  }\n\n  private createNotesIndex(): Promise<any> {\n    const designDoc = {\n      _id: \"_design/notes_index\",\n      views: {\n        by_child: {\n          map:\n            \"(doc) => { \" +\n            'if (!doc._id.startsWith(\"' +\n            Note.ENTITY_TYPE +\n            '\")) return;' +\n            \"if (!Array.isArray(doc.children)) return;\" +\n            \"doc.children.forEach(childId => emit(childId)); \" +\n            \"}\",\n        },\n        note_date_in_days_for_child: {\n          map:\n            \"(doc) => { \" +\n            'if (!doc._id.startsWith(\"' +\n            Note.ENTITY_TYPE +\n            '\")) return;' +\n            \"if (!Array.isArray(doc.children) || !doc.date) return;\" +\n            \"doc.children.forEach(childId => emit(childId, (new Date(doc.date)).getTime()/86400000)); \" + // ms/day: 1000*60*60*24 = 86400000\n            \"}\",\n          reduce: \"_stats\",\n        },\n      },\n    };\n\n    return this.dbIndexing.createIndex(designDoc);\n  }\n\n  getEducationalMaterialsOfChild(\n    childId: string\n  ): Observable<EducationalMaterial[]> {\n    return from(\n      this.entityMapper\n        .loadType<EducationalMaterial>(EducationalMaterial)\n        .then((loadedEntities) => {\n          return loadedEntities.filter((o) => o.child === childId);\n        })\n    );\n  }\n\n  /**\n   *\n   * @param childId should be set in the specific components and is passed by the URL as a parameter\n   * This function should be considered refactored and should use a index, once they're made generic\n   */\n  getHealthChecksOfChild(childId: string): Observable<HealthCheck[]> {\n    return from(\n      this.entityMapper\n        .loadType<HealthCheck>(HealthCheck)\n        .then((loadedEntities) => {\n          return loadedEntities.filter((h) => h.child === childId);\n        })\n    );\n  }\n\n  getAserResultsOfChild(childId: string): Observable<Aser[]> {\n    return from(\n      this.entityMapper.loadType<Aser>(Aser).then((loadedEntities) => {\n        return loadedEntities.filter((o) => o.child === childId);\n      })\n    );\n  }\n\n  async getCurrentSchoolInfoForChild(\n    childId: string\n  ): Promise<{ schoolId: string; schoolClass: string }> {\n    const relations = (await this.querySortedRelations(childId)) || [];\n    for (const rel of relations) {\n      if (\n        moment(rel.start).isSameOrBefore(moment(), \"days\") &&\n        moment(rel.end).isSameOrAfter(moment(), \"days\")\n      ) {\n        return {\n          schoolId: rel.schoolId,\n          schoolClass: rel.schoolClass,\n        };\n      }\n    }\n\n    return {\n      schoolId: null,\n      schoolClass: null,\n    };\n  }\n\n  async getSchoolsWithRelations(\n    childId: string\n  ): Promise<ChildSchoolRelation[]> {\n    return await this.querySortedRelations(childId);\n  }\n}\n","import { Child } from \"../model/child\";\nimport { Gender } from \"../model/Gender\";\nimport { religions } from \"./fixtures/religions\";\nimport { languages } from \"./fixtures/languages\";\nimport { dropoutTypes } from \"./fixtures/dropout-types\";\nimport { Injectable } from \"@angular/core\";\nimport { DemoDataGenerator } from \"../../../core/demo-data/demo-data-generator\";\nimport { faker } from \"../../../core/demo-data/faker\";\nimport { centersWithProbability } from \"./fixtures/centers\";\n\nexport class DemoChildConfig {\n  count: number;\n}\n\n@Injectable()\nexport class DemoChildGenerator extends DemoDataGenerator<Child> {\n  static count: number;\n\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoUserProvider.provider({count: 150})]`\n   * @param config The configuration specifying the number of entities the service should generate.\n   */\n  static provider(config: DemoChildConfig) {\n    return [\n      { provide: DemoChildGenerator, useClass: DemoChildGenerator },\n      { provide: DemoChildConfig, useValue: config },\n    ];\n  }\n\n  constructor(public config: DemoChildConfig) {\n    super();\n  }\n\n  generateEntities(): Child[] {\n    const data = [];\n\n    for (let i = 1; i <= this.config.count; i++) {\n      const child = new Child(String(i));\n      child.name = faker.name.firstName() + \" \" + faker.name.lastName();\n      child.projectNumber = String(i);\n      child.religion = faker.random.arrayElement(religions);\n      child.gender = faker.random.arrayElement([Gender.MALE, Gender.FEMALE]);\n      child.dateOfBirth = faker.dateOfBirth(5, 20);\n      child.motherTongue = faker.random.arrayElement(languages);\n      child.center = faker.random.arrayElement(centersWithProbability);\n\n      child.admissionDate = faker.date.past(child.age - 4);\n\n      if (faker.random.number(100) > 80) {\n        this.makeChildDropout(child);\n      }\n\n      data.push(child);\n    }\n    return data;\n  }\n\n  private makeChildDropout(child: Child) {\n    child.dropoutDate = faker.date.between(child.admissionDate, new Date());\n    child.dropoutRemarks = faker.lorem.sentence();\n    child.dropoutType = faker.random.arrayElement(dropoutTypes);\n    child.status = \"Dropout\";\n  }\n}\n","import { DemoChildGenerator } from \"./demo-child-generator.service\";\nimport { DemoSchoolGenerator } from \"../../schools/demo-school-generator.service\";\nimport { DemoDataGenerator } from \"../../../core/demo-data/demo-data-generator\";\nimport { Injectable } from \"@angular/core\";\nimport { Child } from \"../model/child\";\nimport { ChildSchoolRelation } from \"../model/childSchoolRelation\";\nimport { faker } from \"../../../core/demo-data/faker\";\nimport { School } from \"../../schools/model/school\";\n\n/**\n * Generate ChildSchoolRelation entities linking a child to a school for a specific year.\n * Builds upon the generated demo Child and demo School entities,\n * generating relations for each Child from the date of admission till dropout or today.\n */\n@Injectable()\nexport class DemoChildSchoolRelationGenerator extends DemoDataGenerator<\n  ChildSchoolRelation\n> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoChildSchoolRelationGenerator.provider()]`\n   */\n  static provider() {\n    return [\n      {\n        provide: DemoChildSchoolRelationGenerator,\n        useClass: DemoChildSchoolRelationGenerator,\n      },\n    ];\n  }\n\n  constructor(\n    private demoChildren: DemoChildGenerator,\n    private demoSchools: DemoSchoolGenerator\n  ) {\n    super();\n  }\n\n  generateEntities(): ChildSchoolRelation[] {\n    const data = [];\n\n    for (const child of this.demoChildren.entities) {\n      data.push(...this.generateChildSchoolRecordsForChild(child as Child));\n    }\n\n    return data;\n  }\n\n  private generateChildSchoolRecordsForChild(\n    child: Child\n  ): ChildSchoolRelation[] {\n    const data = [];\n\n    const firstYear = child.admissionDate.getFullYear();\n    let finalYear = new Date().getFullYear();\n    if (child.dropoutDate) {\n      finalYear = child.dropoutDate.getFullYear();\n    }\n\n    let currentSchool: School = undefined;\n    let offset = 0;\n    while (firstYear + offset <= finalYear && offset <= 12) {\n      currentSchool = this.selectNextSchool(currentSchool);\n      data.push(\n        this.generateRecord(\n          child,\n          firstYear + offset,\n          offset + 1,\n          currentSchool\n        )\n      );\n\n      offset++;\n    }\n    if (Math.random() < 0.8) {\n      // 80% of the latest records for each child don't have an end date, which means the child currently attends this school.\n      (data[data.length - 1] as ChildSchoolRelation).end = null;\n    }\n\n    this.setChildSchoolAndClassForLegacyUse(child, data[data.length - 1]);\n\n    return data;\n  }\n\n  private generateRecord(\n    child: Child,\n    year,\n    schoolClass: number,\n    school: School\n  ): ChildSchoolRelation {\n    const schoolRelation = new ChildSchoolRelation(faker.random.uuid());\n    schoolRelation.childId = child.getId();\n    schoolRelation.start = new Date(year + \"-01-01\");\n    schoolRelation.end = new Date(year + \"-12-31\");\n    schoolRelation.schoolClass = String(schoolClass);\n    schoolRelation.schoolId = school.getId();\n    schoolRelation.result = faker.random.number(100);\n    return schoolRelation;\n  }\n\n  /**\n   * Select a different school randomly in a certain percentages of cases keeping the currentSchool otherwise.\n   * @param currentSchool\n   */\n  private selectNextSchool(currentSchool: School) {\n    if (!currentSchool) {\n      return faker.random.arrayElement(this.demoSchools.entities);\n    }\n\n    if (faker.random.number(100) > 75) {\n      return faker.random.arrayElement(this.demoSchools.entities);\n    } else {\n      return currentSchool;\n    }\n  }\n\n  private setChildSchoolAndClassForLegacyUse(\n    child: Child,\n    latestChildSchoolRelation: ChildSchoolRelation\n  ) {\n    child.schoolId = latestChildSchoolRelation.schoolId;\n    child.schoolClass = latestChildSchoolRelation.schoolClass;\n  }\n}\n","export const centersWithProbability = [\n  // multiple entries for the same value increase its probability\n  \"Alipore\",\n  \"Alipore\",\n  \"Tollygunge\",\n  \"Barabazar\",\n];\n\nexport const centersUnique = centersWithProbability.filter(\n  (value, index, self) => self.indexOf(value) === index\n);\n","export const dropoutTypes = [\n  // multiple entries for the same value increase its probability\n  \"Finished School or Training\",\n  \"Dropout\",\n  \"Continues Education without project\",\n  \"Moved away\",\n];\n","export const languages = [\n  // multiple entries for the same value increase its probability\n  \"Hindi\",\n  \"Hindi\",\n  \"Hindi\",\n  \"Urdu\",\n  \"Bengali\",\n  \"Bengali\",\n  \"\",\n];\n","export const religions = [\n  // multiple entries for the same value increase its probability\n  \"Hindu\",\n  \"Hindu\",\n  \"Hindu\",\n  \"Muslim\",\n  \"Muslim\",\n  \"Christian\",\n  \"Sikh\",\n  \"\",\n  \"\",\n];\n","export enum Gender {\n  MALE = \"M\",\n  FEMALE = \"F\",\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Entity } from \"../../../core/entity/entity\";\nimport { Gender } from \"./Gender\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\nimport { SafeUrl } from \"@angular/platform-browser\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@DatabaseEntity(\"Child\")\nexport class Child extends Entity {\n  /**\n   * Returns the full relative filePath to a child photo given a filename, adding the relevant folders to it.\n   * @param filename The given filename with file extension.\n   */\n  public static generatePhotoPath(filename: string): string {\n    return \"assets/child-photos/\" + filename;\n  }\n\n  @DatabaseField() name: string;\n  @DatabaseField() projectNumber: string; // project number\n  @DatabaseField({ dataType: \"string\" }) gender: Gender; // M or F\n  @DatabaseField({ dataType: \"date-only\" }) dateOfBirth: Date;\n  @DatabaseField() motherTongue: string = \"\";\n  @DatabaseField() religion: string = \"\";\n\n  @DatabaseField() center: string = \"\";\n  @DatabaseField() admissionDate: Date;\n  @DatabaseField() status: string = \"\";\n\n  /** current school (as determined through the ChildSchoolRelation docs) set during loading through ChildrenService */\n  schoolId: string = \"\";\n  /** current class (as determined through the ChildSchoolRelation docs) set during loading through ChildrenService */\n  schoolClass: string = \"\";\n\n  @DatabaseField() address: string = \"\";\n  @DatabaseField() phone: string = \"\";\n  @DatabaseField() guardianName: string = \"\";\n  @DatabaseField() preferredTimeForGuardianMeeting: string = \"\";\n\n  @DatabaseField() has_aadhar: string = \"\";\n  @DatabaseField() has_bankAccount: string = \"\";\n  @DatabaseField() has_kanyashree: string = \"\";\n  @DatabaseField() has_rationCard: string = \"\";\n  @DatabaseField() has_BplCard: string = \"\";\n\n  @DatabaseField() dropoutDate: Date;\n  @DatabaseField() dropoutType: string;\n  @DatabaseField() dropoutRemarks: string;\n\n  @DatabaseField() health_vaccinationStatus: string;\n  @DatabaseField() health_bloodGroup: string;\n  @DatabaseField() health_lastDentalCheckup: Date;\n  @DatabaseField() health_lastEyeCheckup: Date;\n  @DatabaseField() health_lastENTCheckup: Date;\n  @DatabaseField() health_eyeHealthStatus: string;\n  @DatabaseField() health_lastVitaminD: Date;\n  @DatabaseField() health_lastDeworming: Date;\n\n  /**\n   * Url to an image that is displayed for the child\n   * as a fallback option if no CloudFileService file or connection is available.\n   */\n  @DatabaseField() photoFile: string;\n\n  @DatabaseField({ dataType: \"load-child-photo\" })\n  photo: BehaviorSubject<SafeUrl>;\n\n  get age(): number {\n    let age = -1;\n\n    if (this.dateOfBirth) {\n      const now = new Date();\n      const dateOfBirth = new Date(this.dateOfBirth);\n\n      age = now.getFullYear() - dateOfBirth.getFullYear();\n      const m = now.getMonth() - dateOfBirth.getMonth();\n      if (m < 0 || (m === 0 && now.getDate() < dateOfBirth.getDate())) {\n        age--;\n      }\n    }\n\n    return age;\n  }\n\n  isActive(): boolean {\n    return this.status !== \"Dropout\";\n  }\n\n  public toString() {\n    return this.name;\n  }\n\n  public generateSearchIndices(): string[] {\n    let indices = [];\n\n    if (this.name !== undefined) {\n      indices = indices.concat(this.name.split(\" \"));\n    }\n    if (this.projectNumber !== undefined) {\n      indices.push(this.projectNumber);\n    }\n\n    return indices;\n  }\n}\n","import { Entity } from \"../../../core/entity/entity\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\n\n/**\n * Record of a school year that a Child attended a certain class in a School.\n */\n@DatabaseEntity(\"ChildSchoolRelation\")\nexport class ChildSchoolRelation extends Entity {\n  @DatabaseField() childId: string;\n  @DatabaseField() schoolId: string;\n  @DatabaseField() schoolClass: string;\n  @DatabaseField({ dataType: \"date-only\" }) start: Date;\n  @DatabaseField({ dataType: \"date-only\" }) end: Date;\n\n  /** percentage achieved in the final school exams of that year */\n  @DatabaseField() result: number;\n}\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Child } from \"../model/child\";\nimport { ChildrenService } from \"../children.service\";\nimport {\n  FilterSelection,\n  FilterSelectionOption,\n} from \"../../../core/filter/filter-selection/filter-selection\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n/**\n * Use this component in your template to allow the user to select a group of children.\n */\n@UntilDestroy()\n@Component({\n  selector: \"app-select-group-children\",\n  templateUrl: \"./select-group-children.component.html\",\n  styleUrls: [\"./select-group-children.component.scss\"],\n})\nexport class SelectGroupChildrenComponent implements OnInit {\n  @Output() valueChange = new EventEmitter<Child[]>();\n  value: Child[] = [];\n\n  children: Child[];\n\n  centerFilters = new FilterSelection<Child>(\"Centers\", []);\n  private selectedCenterFilter: FilterSelectionOption<Child>;\n\n  schoolFilters = new FilterSelection<Child>(\"Schools\", []);\n  private selectedSchoolFilter: FilterSelectionOption<Child>;\n\n  classFilters = new FilterSelection<Child>(\"Classes\", []);\n  private selectedClassFilter: FilterSelectionOption<Child>;\n\n  constructor(private childrenService: ChildrenService) {}\n\n  ngOnInit() {\n    this.childrenService\n      .getChildren()\n      .pipe(untilDestroyed(this))\n      .subscribe((children) => {\n        this.children = children.filter((c) => c.isActive());\n        this.centerFilters.options = this.loadFilterOptionsForProperty(\n          this.children,\n          \"center\"\n        );\n      });\n  }\n\n  private loadFilterOptionsForProperty(\n    children: Child[],\n    propertyToBeFiltered: string\n  ) {\n    const options = [this.getAllStudentsFilterOption()];\n    children\n      .map((c) => c[propertyToBeFiltered])\n      .filter((value, index, arr) => arr.indexOf(value) === index)\n      .forEach((id) => {\n        if (!id) {\n          return;\n        }\n\n        const filterOption = {\n          key: id,\n          label: id,\n          type: \"valueFilter\",\n          filterFun: (c: Child) => c[propertyToBeFiltered] === id,\n        };\n        options.push(filterOption);\n      });\n    return options;\n  }\n\n  private getAllStudentsFilterOption(): FilterSelectionOption<Child> {\n    return {\n      key: \"all\",\n      label: \"All Students\",\n      filterFun: () => true,\n    };\n  }\n\n  selectCenterFilter(group: FilterSelectionOption<Child>) {\n    this.selectedCenterFilter = group;\n    this.value = this.children.filter(this.selectedCenterFilter.filterFun);\n\n    this.schoolFilters.options = this.loadFilterOptionsForProperty(\n      this.value,\n      \"schoolId\"\n    );\n    this.selectSchoolFilter(this.schoolFilters.options[0]); // reset to the default \"All Students\" filter\n  }\n\n  selectSchoolFilter(group: FilterSelectionOption<Child>) {\n    this.selectedSchoolFilter = group;\n    this.value = this.children\n      .filter(this.selectedCenterFilter.filterFun)\n      .filter(this.selectedSchoolFilter.filterFun);\n\n    this.classFilters.options = this.loadFilterOptionsForProperty(\n      this.value,\n      \"schoolClass\"\n    );\n    this.selectClassFilter(this.classFilters.options[0]); // reset to the default \"All Students\" filter\n  }\n\n  selectClassFilter(group: FilterSelectionOption<Child>) {\n    this.selectedClassFilter = group;\n    this.value = this.children\n      .filter(this.selectedCenterFilter.filterFun)\n      .filter(this.selectedSchoolFilter.filterFun)\n      .filter(this.selectedClassFilter.filterFun);\n  }\n\n  confirmSelectedChildren() {\n    this.valueChange.emit(this.value);\n  }\n}\n","<div fxLayout='column'>\n  <div>\n    <mat-form-field fxFlex>\n      <mat-label>\n        Select center\n      </mat-label>\n      <mat-select (valueChange)='selectCenterFilter($event)'>\n        <mat-option *ngFor=\"let group of centerFilters.options\" [value]=\"group\">\n          <span>{{group.label}}</span>\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field fxFlex>\n      <mat-label>\n        Select school\n      </mat-label>\n      <mat-select (valueChange)='selectSchoolFilter($event)' [disabled]='schoolFilters.options.length === 0'>\n        <mat-option *ngFor=\"let group of schoolFilters.options\" [value]=\"group\">\n          <span *ngIf='!group.type'>{{group.label}}</span>\n          <app-school-block *ngIf=\"group.type==='valueFilter'\" [entityId]='group.label' [linkDisabled]='true'></app-school-block>\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div>\n    <mat-form-field fxFlex>\n      <mat-label>\n        Select class\n      </mat-label>\n      <mat-select (valueChange)='selectClassFilter($event)' [disabled]='schoolFilters.options.length === 0'>\n        <mat-option *ngFor=\"let group of classFilters.options\" [value]=\"group\">\n          <span>{{group.label}}</span>\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n\n  <div>\n    Total students selected: {{ value.length }}\n  </div>\n\n  <div>\n    <button mat-stroked-button (click)='confirmSelectedChildren()' class='nav-button' fxFlex>\n      Continue\n    </button>\n  </div>\n\n</div>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { ChildrenModule } from \"../children/children.module\";\nimport { ProgressDashboardComponent } from \"./progress-dashboard/progress-dashboard.component\";\nimport { FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ChildrenModule,\n  ],\n  declarations: [DashboardComponent, ProgressDashboardComponent],\n})\nexport class DashboardModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"],\n})\nexport class DashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div fxLayout=\"row wrap\" fxLayout.xs=\"column wrap\" fxLayoutGap=\"20px\" class='widget-wrapper'>\n  <app-children-count-dashboard fxFlex='30'></app-children-count-dashboard>\n  <app-recent-notes-dashboard fxFlex='30'></app-recent-notes-dashboard>\n  <app-no-recent-notes-dashboard fxFlex='30' [sinceDays]='28' [fromBeginningOfWeek]='false'></app-no-recent-notes-dashboard>\n  <app-attendance-week-dashboard fxFlex='30' [daysOffset]='0' periodLabel='last week'></app-attendance-week-dashboard>\n  <app-attendance-week-dashboard fxFlex='30' [daysOffset]='7' periodLabel='this week'></app-attendance-week-dashboard>\n  <app-progress-dashboard [dashboardConfigId]='\"1\"' fxFlex=\"30\"></app-progress-dashboard>\n  <app-attendance-average-dashboard fxFlex=\"30\"></app-attendance-average-dashboard>\n  <app-attendance-warnings-dashboard fxFlex=\"30\"></app-attendance-warnings-dashboard>\n</div>\n\n","import { faker } from \"../../core/demo-data/faker\";\nimport { Injectable } from \"@angular/core\";\nimport { DemoDataGenerator } from \"../../core/demo-data/demo-data-generator\";\nimport { ProgressDashboardConfig } from \"./progress-dashboard/progress-dashboard-config\";\n\n@Injectable()\nexport class DemoWidgetGeneratorService extends DemoDataGenerator<any> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoWidgetGeneratorService.provider()]`\n   */\n  static provider() {\n    return [\n      {\n        provide: DemoWidgetGeneratorService,\n        useClass: DemoWidgetGeneratorService,\n      },\n    ];\n  }\n\n  private readonly DEMO_TASKS = [\n    \"Clubs visited\",\n    \"Schools checked\",\n    \"Government Officials met\",\n  ];\n\n  constructor() {\n    super();\n  }\n\n  generateEntities(): any[] {\n    const data = [];\n\n    data.push(this.generateDashboardWidgetSurveyStatus());\n\n    return data;\n  }\n\n  private generateDashboardWidgetSurveyStatus(): ProgressDashboardConfig {\n    const dashboardProgressWidget = new ProgressDashboardConfig(\"1\");\n    dashboardProgressWidget.title = \"Annual Survey\";\n\n    for (const task of this.DEMO_TASKS) {\n      const targetNumber = faker.random.number({ min: 5, max: 50 });\n      dashboardProgressWidget.parts.push({\n        label: task,\n        currentValue: faker.random.number(targetNumber),\n        targetValue: targetNumber,\n      });\n    }\n    return dashboardProgressWidget;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Entity } from \"../../../core/entity/entity\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\n\n@DatabaseEntity(\"ProgressDashboardConfig\")\nexport class ProgressDashboardConfig extends Entity {\n  @DatabaseField() title: string = \"Progress Widget\";\n  @DatabaseField() parts: Array<ProgressDashboardPart> = [];\n\n  getTotalPercentage() {\n    const currentTotal = this.parts.reduce(\n      (acc, entry) => acc + entry.currentValue,\n      0\n    );\n    const targetTotal = this.parts.reduce(\n      (acc, entry) => acc + entry.targetValue,\n      0\n    );\n    return currentTotal / targetTotal;\n  }\n}\n\nexport interface ProgressDashboardPart {\n  label: string;\n  currentValue: number;\n  targetValue: number;\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport {\n  ProgressDashboardConfig,\n  ProgressDashboardPart,\n} from \"./progress-dashboard-config\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\nimport { AlertService } from \"../../../core/alerts/alert.service\";\n\n@Component({\n  selector: \"app-progress-dashboard\",\n  templateUrl: \"./progress-dashboard.component.html\",\n  styleUrls: [\"./progress-dashboard.component.scss\"],\n})\nexport class ProgressDashboardComponent implements OnInit {\n  @Input() dashboardConfigId = \"\";\n  data: ProgressDashboardConfig;\n  configure = false;\n\n  constructor(\n    private entityMapper: EntityMapperService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.data = new ProgressDashboardConfig(this.dashboardConfigId);\n    this.entityMapper\n      .load<ProgressDashboardConfig>(\n        ProgressDashboardConfig,\n        this.dashboardConfigId\n      )\n      .then((config) => {\n        this.data = config;\n      })\n      .catch((e) => {\n        if (e.status === 404) {\n          this.alertService.addDebug(\n            `ProgressDashboardConfig (${this.dashboardConfigId}) not found. Creating ...`\n          );\n          this.createDefaultConfig();\n        } else {\n          this.alertService.addWarning(\n            `Error loading ProgressDashboardConfig (${this.dashboardConfigId}): ${e.message}`\n          );\n        }\n      });\n  }\n\n  private createDefaultConfig() {\n    this.data.title = \"Progress of X\";\n    this.addPart();\n    this.addPart();\n    this.save();\n  }\n\n  addPart() {\n    const newPart: ProgressDashboardPart = {\n      label: \"Part\",\n      currentValue: 1,\n      targetValue: 10,\n    };\n    this.data.parts.push(newPart);\n  }\n\n  async save() {\n    await this.entityMapper.save(this.data);\n    this.configure = false;\n  }\n}\n","<mat-card class=\"dashboard-widget\">\n  <mat-card-header class=\"app-child\">\n    <div mat-card-avatar>\n      <mat-icon fontIcon=\"fa-list\"></mat-icon>\n    </div>\n    <mat-card-title>{{ data.getTotalPercentage() | percent:'1.0-0'}}</mat-card-title>\n    <mat-card-subtitle>{{data.title}}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p class=\"dashboard-desc\">\n      Status of current processes:\n    </p>\n    <table class=\"dashboard-table\">\n      <tr *ngFor=\"let entry of data?.parts\" class=\"dashboard-table-row\">\n        <td class=\"dashboard-table-cell\">{{entry.label}}</td>\n        <td class=\"dashboard-table-cell filler\">\n          <mat-progress-bar mode=\"determinate\" [value]=\"entry.currentValue/entry.targetValue*100\"></mat-progress-bar>\n        </td>\n        <td class=\"dashboard-table-cell\">{{entry.currentValue/entry.targetValue | percent:'1.0-0'}}</td>\n        <td class=\"dashboard-table-cell\" style=\"white-space: nowrap\">{{entry.currentValue}} / {{entry.targetValue}}</td>\n      </tr>\n    </table>\n\n    <div [ngClass]=\"{'dashboard-config': configure}\">\n      <div style='text-align: right;'>\n        <button mat-icon-button (click)='addPart()' *ngIf='configure'>\n          <mat-icon aria-label=\"add part\" fontIcon=\"fa-plus\"></mat-icon>\n        </button>\n        <button mat-icon-button (click)='save()' *ngIf='configure'>\n          <mat-icon aria-label=\"save\" fontIcon=\"fa-check\"></mat-icon>\n        </button>\n        <button mat-icon-button (click)='configure=true' *ngIf='!configure'>\n          <mat-icon aria-label=\"configure\" fontIcon=\"fa-wrench\"></mat-icon>\n        </button>\n      </div>\n\n      <!-- TODO: remove ugly negative margins -->\n      <div class=\"dashboard-table-cell\" *ngIf='configure' style=\"border-bottom: 1px solid black\">\n        <mat-form-field style=\"margin-bottom: -10px\">\n          <input matInput type=\"text\" placeholder=\"Title\" [value]=\"data.title\" (input)='data.title=$event.target.value'>\n        </mat-form-field>\n      </div>\n\n      <table class=\"dashboard-table\" *ngIf='configure'>\n        <tr *ngFor=\"let entry of data.parts; let i = index\" class=\"dashboard-table-row\">\n          <td class=\"dashboard-table-cell\" style=\"width: calc(100% - 20px); display: inline-block\">\n            <mat-form-field class=\"filler\">\n              <input matInput type=\"text\" placeholder=\"Label\" [value]=\"entry.label\" (input)=\"entry.label=$event.target.value\">\n            </mat-form-field>\n          </td>\n          <td class=\"dashboard-table-cell\" style=\"display: inline-block; margin-top: -20px; margin-bottom: -10px\">\n            <mat-form-field class=\"small\">\n              <input matInput type=\"number\" placeholder=\"Current\" [value]=\"entry.currentValue\" (change)=\"entry.currentValue=$event.target.valueAsNumber\">\n            </mat-form-field>\n\n            <mat-form-field class=\"small\" style=\"margin: 0px 10px\">\n              <input matInput type=\"number\" placeholder=\"Target\"  [value]=\"entry.targetValue\" (change)=\"entry.targetValue=$event.target.valueAsNumber\">\n            </mat-form-field>\n          </td>\n          <td>\n            <button mat-icon-button (click)='data.parts.splice(i, 1)'>\n              <mat-icon aria-label=\"remove\" fontIcon=\"fa-trash\"></mat-icon>\n            </button>\n          </td>\n        </tr>\n      </table>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { DemoChildGenerator } from \"../children/demo-data-generators/demo-child-generator.service\";\nimport { DemoDataGenerator } from \"../../core/demo-data/demo-data-generator\";\nimport { Injectable } from \"@angular/core\";\nimport { Child } from \"../children/model/child\";\nimport { faker } from \"../../core/demo-data/faker\";\nimport { EducationalMaterial } from \"./model/educational-material\";\n\nexport class DemoEducationMaterialConfig {\n  minCount: number;\n  maxCount: number;\n}\n\n/**\n * Generate EducationalMaterial records.\n * Builds upon the generated demo Child entities.\n */\n@Injectable()\nexport class DemoEducationalMaterialGeneratorService extends DemoDataGenerator<\n  EducationalMaterial\n> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoEducationalMaterialGeneratorService.provider()]`\n   */\n  static provider(config: DemoEducationMaterialConfig) {\n    return [\n      {\n        provide: DemoEducationalMaterialGeneratorService,\n        useClass: DemoEducationalMaterialGeneratorService,\n      },\n      { provide: DemoEducationMaterialConfig, useValue: config },\n    ];\n  }\n\n  constructor(\n    private config: DemoEducationMaterialConfig,\n    private demoChildren: DemoChildGenerator\n  ) {\n    super();\n  }\n\n  public generateEntities(): EducationalMaterial[] {\n    const data = [];\n\n    for (const child of this.demoChildren.entities) {\n      const count = faker.random.number({\n        min: this.config.minCount,\n        max: this.config.maxCount,\n      });\n      for (let i = 1; i < count; i++) {\n        data.push(this.generateEducationalMaterialEntity(child));\n      }\n\n      const specialMaterial = this.generateEducationalMaterialEntity(child);\n      specialMaterial.materialType = faker.random.arrayElement(\n        EducationalMaterial.MATERIAL_OTHER\n      );\n      specialMaterial.materialAmount = 1;\n      data.push(specialMaterial);\n    }\n\n    return data;\n  }\n\n  private generateEducationalMaterialEntity(child: Child): EducationalMaterial {\n    const entity = new EducationalMaterial(faker.random.uuid());\n\n    entity.child = child.getId();\n    entity.date = faker.date.between(\n      child.admissionDate,\n      faker.getEarlierDateOrToday(child.dropoutDate)\n    );\n    entity.materialAmount = faker.random.arrayElement([1, 1, 1, 2, 3]);\n    entity.materialType = faker.random.arrayElement(\n      EducationalMaterial.MATERIAL_ALL\n    );\n\n    return entity;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { DatePipe } from \"@angular/common\";\nimport { EducationalMaterial } from \"../model/educational-material\";\nimport { ColumnDescription } from \"../../../core/entity-subrecord/entity-subrecord/column-description\";\nimport { ChildrenService } from \"../../children/children.service\";\nimport { ColumnDescriptionInputType } from \"../../../core/entity-subrecord/entity-subrecord/column-description-input-type.enum\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-educational-material\",\n  templateUrl: \"./educational-material.component.html\",\n})\nexport class EducationalMaterialComponent implements OnInit {\n  childId: string;\n  records = new Array<EducationalMaterial>();\n\n  materialTypes = EducationalMaterial.MATERIAL_ALL;\n\n  columns: Array<ColumnDescription> = [\n    new ColumnDescription(\n      \"date\",\n      \"Date\",\n      ColumnDescriptionInputType.DATE,\n      null,\n      (v: Date) => this.datePipe.transform(v, \"yyyy-MM-dd\"),\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"materialType\",\n      \"Material\",\n      ColumnDescriptionInputType.AUTOCOMPLETE,\n      this.materialTypes.map((t) => {\n        return { value: t, label: t };\n      }),\n      undefined,\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"materialAmount\",\n      \"Amount\",\n      ColumnDescriptionInputType.NUMBER,\n      null,\n      undefined,\n      \"md\"\n    ),\n    new ColumnDescription(\n      \"description\",\n      \"Description/Remarks\",\n      ColumnDescriptionInputType.TEXT,\n      null,\n      undefined,\n      \"md\"\n    ),\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private childrenService: ChildrenService,\n    private datePipe: DatePipe\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.childId = params.get(\"id\").toString();\n      this.loadData(this.childId);\n    });\n  }\n\n  loadData(id: string) {\n    this.childrenService\n      .getEducationalMaterialsOfChild(id)\n      .pipe(untilDestroyed(this))\n      .subscribe((results) => {\n        this.records = results.sort(\n          (a, b) =>\n            (b.date ? b.date.valueOf() : 0) - (a.date ? a.date.valueOf() : 0)\n        );\n      });\n  }\n\n  generateNewRecordFactory() {\n    // define values locally because \"this\" is a different scope after passing a function as input to another component\n    const child = this.childId;\n\n    return () => {\n      const newAtt = new EducationalMaterial(Date.now().toString());\n\n      // use last entered date as default, otherwise today's date\n      newAtt.date = this.records.length > 0 ? this.records[0].date : new Date();\n\n      newAtt.child = child;\n\n      return newAtt;\n    };\n  }\n\n  getSummary() {\n    if (this.records.length === 0) {\n      return \"\";\n    }\n\n    const summary = new Map<string, number>();\n    this.records.forEach((m) => {\n      const previousValue = summary.has(m.materialType)\n        ? summary.get(m.materialType)\n        : 0;\n      summary.set(m.materialType, previousValue + m.materialAmount);\n    });\n\n    let summaryText = \"\";\n    summary.forEach(\n      (v, k) => (summaryText = summaryText + k + \": \" + v + \", \")\n    );\n    return summaryText;\n  }\n}\n","<app-entity-subrecord\n  [records]=\"records\"\n  [columns]=\"columns\"\n  [newRecordFactory]=\"generateNewRecordFactory()\">\n</app-entity-subrecord>\n\n<div style='margin-top: 20px'>\n  Total: {{getSummary()}}\n</div>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Entity } from \"../../../core/entity/entity\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\n\n@DatabaseEntity(\"EducationalMaterial\")\nexport class EducationalMaterial extends Entity {\n  static MATERIAL_STATIONARIES = [\n    \"pencil\",\n    \"eraser\",\n    \"sharpener\",\n    \"pen (black)\",\n    \"pen (blue)\",\n    \"oil pastels\",\n    \"crayons\",\n    \"sketch pens\",\n    \"scale (big)\",\n    \"scale (small)\",\n    \"geometry box\",\n    \"copy (single line, small)\",\n    \"copy (single line, big)\",\n    \"copy (four line)\",\n    \"copy (squared)\",\n    \"copy (plain)\",\n    \"copy (line-plain)\",\n    \"copy (drawing)\",\n    \"copy (practical)\",\n    \"graph book\",\n    \"project papers\",\n    \"project file\",\n    \"scrap book\",\n    \"exam board\",\n  ];\n  static MATERIAL_OTHER = [\n    \"Bag\",\n    \"School Uniform\",\n    \"School Shoes\",\n    \"Sports Dress\",\n    \"Sports Shoes\",\n    \"Raincoat\",\n  ];\n  static MATERIAL_ALL = EducationalMaterial.MATERIAL_STATIONARIES.concat(\n    EducationalMaterial.MATERIAL_OTHER\n  );\n\n  @DatabaseField() child: string; // id of Child entity\n  @DatabaseField() date: Date;\n  @DatabaseField() materialType = \"\";\n  @DatabaseField() materialAmount: number;\n  @DatabaseField() description = \"\";\n\n  public getColor() {\n    if (EducationalMaterial.MATERIAL_STATIONARIES.includes(this.materialType)) {\n      return \"white\";\n    } else {\n      return \"#B3E5FC\";\n    }\n  }\n}\n","import { DemoChildGenerator } from \"../../children/demo-data-generators/demo-child-generator.service\";\nimport { DemoDataGenerator } from \"../../../core/demo-data/demo-data-generator\";\nimport { Injectable } from \"@angular/core\";\nimport { Child } from \"../../children/model/child\";\nimport { faker } from \"../../../core/demo-data/faker\";\nimport { HealthCheck } from \"../model/health-check\";\nimport { heightRangeForAge, weightRangeForAge } from \"./height-weight\";\n\n/**\n * Generate HealthCheck records every 6 months for children up to the age of 12.\n * Builds upon the generated demo Child entities.\n */\n@Injectable()\nexport class DemoHealthCheckGeneratorService extends DemoDataGenerator<\n  HealthCheck\n> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoHealthCheckGeneratorService.provider()]`\n   */\n  static provider() {\n    return [\n      {\n        provide: DemoHealthCheckGeneratorService,\n        useClass: DemoHealthCheckGeneratorService,\n      },\n    ];\n  }\n\n  constructor(private demoChildren: DemoChildGenerator) {\n    super();\n  }\n\n  public generateEntities(): HealthCheck[] {\n    const data = [];\n\n    for (const child of this.demoChildren.entities) {\n      data.push(...this.generateHealthCheckHistoryForChild(child));\n    }\n\n    return data;\n  }\n\n  private generateHealthCheckHistoryForChild(child: Child): HealthCheck[] {\n    const data = [];\n\n    let date = new Date(child.admissionDate.getTime());\n    let previousRecord = new HealthCheck(\"\");\n    previousRecord.height = 0;\n    previousRecord.weight = 0;\n    do {\n      const record = new HealthCheck(faker.random.uuid());\n      record.child = child.getId();\n      record.date = date;\n      this.setNextHeightAndWeight(\n        record,\n        previousRecord,\n        this.getAgeAtDate(child, date)\n      );\n\n      data.push(record);\n\n      if (date.getMonth() === 0) {\n        date = new Date(date.getFullYear(), 5, 1);\n      } else {\n        date = new Date(date.getFullYear() + 1, 0, 1);\n      }\n      previousRecord = record;\n    } while (\n      date < faker.getEarlierDateOrToday(child.dropoutDate) &&\n      this.getAgeAtDate(child, date) < 12\n    );\n\n    return data;\n  }\n\n  private getAgeAtDate(child: Child, date: Date): number {\n    const timeDiff = date.getTime() - child.dateOfBirth.getTime();\n    return timeDiff / (1000 * 60 * 60 * 24 * 365);\n  }\n\n  private setNextHeightAndWeight(\n    record: HealthCheck,\n    previousRecord: HealthCheck,\n    age: number\n  ) {\n    const ageRoundedToHalfYear = Math.round(2 * age) / 2;\n\n    const randomHeight = faker.random.number(\n      heightRangeForAge.get(ageRoundedToHalfYear)\n    );\n    record.height = Math.max(randomHeight, previousRecord.height); // height will not become less\n\n    record.weight = faker.random.number(\n      weightRangeForAge.get(ageRoundedToHalfYear)\n    );\n  }\n}\n","// values based on https://www.cdc.gov/growthcharts/percentile_data_files.htm\n\nexport const heightRangeForAge = new Map<number, any>([\n  [2, { min: 78, max: 91 }],\n  [2.5, { min: 83, max: 97 }],\n  [3, { min: 86, max: 101 }],\n  [3.5, { min: 89, max: 105 }],\n  [4, { min: 93, max: 109 }],\n  [4.5, { min: 96, max: 113 }],\n  [5, { min: 99, max: 117 }],\n  [5.5, { min: 102, max: 121 }],\n  [6, { min: 105, max: 125 }],\n  [6.5, { min: 108, max: 129 }],\n  [7, { min: 111, max: 132 }],\n  [7.5, { min: 114, max: 136 }],\n  [8, { min: 116, max: 138 }],\n  [8.5, { min: 119, max: 142 }],\n  [9, { min: 121, max: 145 }],\n  [9.5, { min: 123, max: 148 }],\n  [10, { min: 125, max: 150 }],\n  [10.5, { min: 127, max: 154 }],\n  [11, { min: 130, max: 157 }],\n  [11.5, { min: 133, max: 161 }],\n  [12, { min: 136, max: 164 }],\n  [12.5, { min: 140, max: 167 }],\n  [13, { min: 144, max: 170 }],\n  [13.5, { min: 146, max: 171 }],\n  [14, { min: 148, max: 172 }],\n  [14.5, { min: 148, max: 173 }],\n]);\n\nexport const weightRangeForAge = new Map<number, any>([\n  [2, { min: 10, max: 15 }],\n  [2.5, { min: 10, max: 16 }],\n  [3, { min: 11, max: 17 }],\n  [3.5, { min: 11, max: 19 }],\n  [4, { min: 12, max: 20 }],\n  [4.5, { min: 13, max: 22 }],\n  [5, { min: 14, max: 24 }],\n  [5.5, { min: 15, max: 26 }],\n  [6, { min: 15, max: 28 }],\n  [6.5, { min: 16, max: 30 }],\n  [7, { min: 17, max: 32 }],\n  [7.5, { min: 18, max: 35 }],\n  [8, { min: 19, max: 38 }],\n  [8.5, { min: 20, max: 40 }],\n  [9, { min: 21, max: 44 }],\n  [9.5, { min: 22, max: 47 }],\n  [10, { min: 23, max: 50 }],\n  [10.5, { min: 25, max: 54 }],\n  [11, { min: 26, max: 58 }],\n  [11.5, { min: 28, max: 61 }],\n  [12, { min: 29, max: 65 }],\n  [12.5, { min: 31, max: 68 }],\n  [13, { min: 33, max: 71 }],\n  [13.5, { min: 34, max: 74 }],\n  [14, { min: 36, max: 77 }],\n  [14.5, { min: 38, max: 79 }],\n]);\n","import { Component, OnInit } from \"@angular/core\";\nimport { HealthCheck } from \"../model/health-check\";\nimport { ColumnDescription } from \"../../../core/entity-subrecord/entity-subrecord/column-description\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ChildrenService } from \"../../children/children.service\";\nimport { DatePipe } from \"@angular/common\";\nimport { ColumnDescriptionInputType } from \"../../../core/entity-subrecord/entity-subrecord/column-description-input-type.enum\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-health-checkup\",\n  templateUrl: \"./health-checkup.component.html\",\n  styleUrls: [\"./health-checkup.component.scss\"],\n})\nexport class HealthCheckupComponent implements OnInit {\n  records = new Array<HealthCheck>();\n  /**\n   * Column Description for the SubentityRecordComponent\n   * The Date-Column needs to be transformed to apply the MathFormCheck in the SubentityRecordComponent\n   * BMI is rounded to 2 decimal digits\n   */\n  columns: Array<ColumnDescription> = [\n    new ColumnDescription(\n      \"date\",\n      \"Date\",\n      ColumnDescriptionInputType.DATE,\n      null,\n      (v: Date) => this.datePipe.transform(v, \"yyyy-MM-dd\")\n    ),\n    new ColumnDescription(\n      \"height\",\n      \"Height [cm]\",\n      ColumnDescriptionInputType.NUMBER,\n      null,\n      (height: Number) => height + \" cm\"\n    ),\n    new ColumnDescription(\n      \"weight\",\n      \"Weight [kg]\",\n      ColumnDescriptionInputType.NUMBER,\n      null,\n      (weight: Number) => weight + \" kg\"\n    ),\n    new ColumnDescription(\n      \"bmi\",\n      \"BMI\",\n      ColumnDescriptionInputType.READONLY,\n      null,\n      (bmi: Number) => bmi.toFixed(2)\n    ),\n  ];\n  childId: string;\n  constructor(\n    private route: ActivatedRoute,\n    private childrenService: ChildrenService,\n    private datePipe: DatePipe\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.childId = params.get(\"id\").toString();\n      this.loadHealthChecks();\n    });\n  }\n\n  /**\n   *\n   */\n  generateNewRecordFactory() {\n    // define values locally because \"this\" is a different scope after passing a function as input to another component\n    const childId = this.childId;\n\n    return () => {\n      const newHC = new HealthCheck(Date.now().toString());\n\n      // use last entered date as default, otherwise today's date\n      newHC.date = this.records.length > 0 ? this.records[0].date : new Date();\n      newHC.child = childId;\n\n      return newHC;\n    };\n  }\n\n  /**\n   * implements the health check loading from the children service and is called in the onInit()\n   */\n  loadHealthChecks() {\n    this.childrenService\n      .getHealthChecksOfChild(this.childId)\n      .pipe(untilDestroyed(this))\n      .subscribe((results) => {\n        this.records = results.sort(\n          (a, b) =>\n            (b.date ? b.date.valueOf() : 0) - (a.date ? a.date.valueOf() : 0)\n        );\n      });\n  }\n}\n","<app-entity-subrecord [records]=\"records\" [columns]=\"columns\" [newRecordFactory]=\"generateNewRecordFactory()\"></app-entity-subrecord>","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Entity } from \"../../../core/entity/entity\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\nimport { WarningLevel } from \"../../warning-level\";\n\n/**\n * Model Class for the Health Checks that are taken for a Child.\n * It stores the Child's ID in a String and both, the height and weight in cm as a number, and the Date\n */\n@DatabaseEntity(\"HealthCheck\")\nexport class HealthCheck extends Entity {\n  @DatabaseField() child: string;\n  @DatabaseField() date: Date;\n\n  /** height measurement in cm **/\n  @DatabaseField() height: number;\n\n  /** weight measurement in kg **/\n  @DatabaseField() weight: number;\n\n  get bmi(): number {\n    return this.weight / ((this.height / 100) * (this.height / 100));\n  }\n\n  getWarningLevel() {\n    if (this.bmi <= 16 || this.bmi >= 30) {\n      return WarningLevel.URGENT;\n    } else if (this.bmi >= 18 && this.bmi <= 25) {\n      return WarningLevel.OK;\n    } else {\n      return WarningLevel.WARNING;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { ChildrenService } from \"../../../children/children.service\";\nimport { Child } from \"../../../children/model/child\";\nimport moment from \"moment\";\nimport { take } from \"rxjs/operators\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatPaginator } from \"@angular/material/paginator\";\n\n/**\n * Dashboard Widget displaying children that do not have a recently added Note.\n *\n * If you do not set \"sinceDays\" of \"fromBeginningOfWeek\" inputs\n * by default notes since beginning of the current week are considered.\n */\n@Component({\n  selector: \"app-no-recent-notes-dashboard\",\n  templateUrl: \"./no-recent-notes-dashboard.component.html\",\n  styleUrls: [\"./no-recent-notes-dashboard.component.scss\"],\n})\nexport class NoRecentNotesDashboardComponent implements OnInit, AfterViewInit {\n  /**\n   * number of days since last note that children should be considered having a \"recent\" note.\n   */\n  @Input() sinceDays: number = 0;\n\n  /** Whether an additional offset should be automatically added to include notes from the beginning of the week */\n  @Input() fromBeginningOfWeek = true;\n\n  /** The offset in days since beginning of the week (used for \"fromBeginningOfWeek\" option) */\n  private daysSinceBeginningOfWeek = moment()\n    .startOf(\"day\")\n    .diff(moment().startOf(\"week\"), \"days\");\n\n  /** true while data is not ready/available yet */\n  isLoading: boolean;\n\n  /** children displayed in the template\n   * Child entities with additional \"daysSinceLastNote\" field\n   */\n  concernedChildren: ChildWithRecentNoteInfo[] = [];\n\n  columnsToDisplay: string[] = [\"name\", \"daysSinceLastNote\"];\n  childrenWithNoteInfoDataSource: MatTableDataSource<\n    ChildWithRecentNoteInfo\n  > = new MatTableDataSource<ChildWithRecentNoteInfo>();\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private childrenService: ChildrenService) {}\n\n  async ngOnInit() {\n    await this.loadConcernedChildrenFromIndex();\n    this.childrenWithNoteInfoDataSource.data = this.concernedChildren;\n  }\n\n  ngAfterViewInit() {\n    this.childrenWithNoteInfoDataSource.sort = this.sort;\n    this.childrenWithNoteInfoDataSource.paginator = this.paginator;\n  }\n\n  private async loadConcernedChildrenFromIndex() {\n    this.isLoading = true;\n\n    const children = ((await this.childrenService\n      .getChildren()\n      .pipe(take(1))\n      .toPromise()) as ChildWithRecentNoteInfo[]).filter((c) => c.isActive());\n\n    const lastNoteStats = await this.childrenService.getDaysSinceLastNoteOfEachChild();\n\n    const resultChildren = [];\n    for (const child of children) {\n      if (lastNoteStats.has(child.getId())) {\n        child.daysSinceLastNote = lastNoteStats.get(child.getId());\n        if (!this.isWithinDayRange(child.daysSinceLastNote)) {\n          resultChildren.push(child);\n        }\n      } else {\n        child.daysSinceLastNote = 0;\n        resultChildren.push(child);\n      }\n    }\n\n    this.concernedChildren = resultChildren.sort(\n      (a, b) => b.daysSinceLastNote - a.daysSinceLastNote\n    );\n\n    this.isLoading = false;\n  }\n\n  private isWithinDayRange(daysSinceLastNote: number) {\n    if (this.fromBeginningOfWeek) {\n      return (\n        daysSinceLastNote <= this.sinceDays + this.daysSinceBeginningOfWeek\n      );\n    } else {\n      return daysSinceLastNote <= this.sinceDays;\n    }\n  }\n}\n\ntype ChildWithRecentNoteInfo = Child & { daysSinceLastNote: number };\n","<mat-card class=\"dashboard-widget\">\n  <mat-card-header class=\"app-note\">\n    <div mat-card-avatar>\n      <mat-icon fontIcon=\"fa-file-text-o\"></mat-icon>\n    </div>\n    <mat-card-title style=\"position: relative;\">\n      <span *ngIf=\"isLoading\">\n        <mat-spinner [diameter]=\"40\" class=\"loading-indicator\"></mat-spinner>\n        &nbsp;\n      </span>\n      <span *ngIf=\"!isLoading\">\n        {{ concernedChildren?.length }}\n      </span>\n    </mat-card-title>\n    <mat-card-subtitle\n      [matTooltip]=\"\n        'includes children without a note ' +\n        (fromBeginningOfWeek ? 'since beginning of week ' : '') +\n        (sinceDays > 0 ? 'within the last ' + sinceDays + ' days' : '')\n      \"\n    >\n      Children\n      <span class=\"subtitle-highlight\">without</span>\n      recent report\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <div class=\"mat-elevation-z8 table-list\">\n      <table\n        mat-table\n        [dataSource]=\"childrenWithNoteInfoDataSource\"\n        matSort\n        width=\"100%\"\n      >\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n          <td mat-cell *matCellDef=\"let child\">\n            <app-child-block [entity]=\"child\"></app-child-block>\n          </td>\n        </ng-container>\n        <ng-container matColumnDef=\"daysSinceLastNote\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Days passed</th>\n          <td\n            mat-cell\n            *matCellDef=\"let child\"\n            class=\"dashboard-table-additional-info-cell\"\n          >\n            {{ child.daysSinceLastNote | number: \"1.0-0\" }} days\n          </td>\n        </ng-container>\n        <tr\n          mat-header-row\n          *matHeaderRowDef=\"columnsToDisplay\"\n          style=\"display: none;\"\n        ></tr>\n        <tr\n          mat-row\n          *matRowDef=\"let child; columns: columnsToDisplay; let i = index;\"\n          [routerLink]=\"['/child', child.getId()]\"\n          angulartics2On=\"click\"\n          angularticsCategory=\"Navigation\"\n          angularticsAction=\"dashboard_no_recent_notes_link\"\n          [angularticsLabel]=\"'list-entry-' + i\"\n          class=\"dashboard-table-row w-WARNING\"\n          style=\"cursor: pointer;\"\n        ></tr>\n      </table>\n      <mat-paginator\n        [pageSize]=\"4\"\n        [hidePageSize]=\"true\"\n        [showFirstLastButtons]=\"true\"\n      ></mat-paginator>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { ChildrenService } from \"../../../children/children.service\";\nimport moment from \"moment\";\n\n/**\n * Dashboard Widget displaying children that have a recently added Note.\n */\n@Component({\n  selector: \"app-recent-notes-dashboard\",\n  templateUrl: \"./recent-notes-dashboard.component.html\",\n  styleUrls: [\"./recent-notes-dashboard.component.scss\"],\n})\nexport class RecentNotesDashboardComponent implements OnInit {\n  /**\n   * number of days since last note that children should be considered having a \"recent\" note.\n   */\n  @Input() sinceDays: number = 0;\n\n  /** Whether an additional offset should be automatically added to include notes from the beginning of the week */\n  @Input() fromBeginningOfWeek = true;\n\n  /** The offset in days since beginning of the week (used for \"fromBeginningOfWeek\" option) */\n  private daysSinceBeginningOfWeek = moment()\n    .startOf(\"day\")\n    .diff(moment().startOf(\"week\"), \"days\");\n\n  /** true while data is not ready/available yet */\n  isLoading: boolean;\n\n  /** number of children with recent notes */\n  count: number = 0;\n\n  constructor(private childrenService: ChildrenService) {}\n\n  async ngOnInit() {\n    await this.loadConcernedChildrenFromIndex();\n  }\n\n  private async loadConcernedChildrenFromIndex() {\n    this.isLoading = true;\n\n    const lastNoteStats = await this.childrenService.getDaysSinceLastNoteOfEachChild();\n\n    this.count = 0;\n    for (const entry of lastNoteStats.entries()) {\n      if (this.isWithinDayRange(entry[1])) {\n        this.count++;\n      }\n    }\n\n    this.isLoading = false;\n  }\n\n  private isWithinDayRange(daysSinceLastNote: number) {\n    if (this.fromBeginningOfWeek) {\n      return (\n        daysSinceLastNote <= this.sinceDays + this.daysSinceBeginningOfWeek\n      );\n    } else {\n      return daysSinceLastNote <= this.sinceDays;\n    }\n  }\n}\n","<mat-card class=\"dashboard-widget\">\n  <mat-card-header class=\"app-note\">\n    <div mat-card-avatar>\n      <mat-icon fontIcon=\"fa-file-text-o\"></mat-icon>\n    </div>\n    <mat-card-title style=\"position: relative;\">\n      <span *ngIf=\"isLoading\">\n        <mat-spinner [diameter]=\"40\" class=\"loading-indicator\"></mat-spinner>\n        &nbsp;\n      </span>\n      <span *ngIf=\"!isLoading\">\n        {{ count }}\n      </span>\n    </mat-card-title>\n    <mat-card-subtitle\n      [matTooltip]=\"\n        'includes children with a note ' +\n        (fromBeginningOfWeek ? 'since beginning of week ' : '') +\n        (sinceDays > 0 ? 'within the last ' + sinceDays + ' days' : '')\n      \"\n    >\n      Children\n      <span class=\"subtitle-highlight\">with</span>\n      recent report\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <div\n      class=\"dashboard-content\"\n      [routerLink]=\"['/note']\"\n      angulartics2On=\"click\"\n      angularticsCategory=\"Navigation\"\n      angularticsAction=\"dashboard_recent_notes_link_go_to_notes\"\n      [angularticsLabel]=\"'children-with-recent-report-count-' + count\"\n    >\n      Go to Notes <span class=\"fa fa-external-link-square\"></span>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { DemoChildGenerator } from \"../../children/demo-data-generators/demo-child-generator.service\";\nimport { DemoDataGenerator } from \"../../../core/demo-data/demo-data-generator\";\nimport { Injectable } from \"@angular/core\";\nimport { Child } from \"../../children/model/child\";\nimport { Note } from \"../model/note\";\nimport { MeetingNoteAttendance } from \"../meeting-note-attendance\";\nimport { faker } from \"../../../core/demo-data/faker\";\nimport { WarningLevel } from \"../../warning-level\";\nimport { noteIndividualStories } from \"./notes_individual-stories\";\nimport { noteGroupStories } from \"./notes_group-stories\";\nimport { centersUnique } from \"../../children/demo-data-generators/fixtures/centers\";\nimport { absenceRemarks } from \"./remarks\";\n\nexport class DemoNoteConfig {\n  minNotesPerChild: number;\n  maxNotesPerChild: number;\n  groupNotes: number;\n}\n\n/**\n * Generate a number of Note entities for each Child.\n * Builds upon the generated demo Child entities.\n */\n@Injectable()\nexport class DemoNoteGeneratorService extends DemoDataGenerator<Note> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoNoteGeneratorService.provider()]`\n   */\n  static provider(\n    config: DemoNoteConfig = {\n      minNotesPerChild: 2,\n      maxNotesPerChild: 10,\n      groupNotes: 5,\n    }\n  ) {\n    return [\n      { provide: DemoNoteGeneratorService, useClass: DemoNoteGeneratorService },\n      { provide: DemoNoteConfig, useValue: config },\n    ];\n  }\n\n  private _teamMembers;\n  get teamMembers(): string[] {\n    const numberOfTeamMembers = 5;\n    if (!this._teamMembers) {\n      this._teamMembers = Array(numberOfTeamMembers)\n        .fill(\"\")\n        .map(() => faker.name.firstName());\n    }\n\n    return this._teamMembers;\n  }\n\n  constructor(\n    private config: DemoNoteConfig,\n    private demoChildren: DemoChildGenerator\n  ) {\n    super();\n  }\n\n  public generateEntities(): Note[] {\n    const data = [];\n\n    for (const child of this.demoChildren.entities) {\n      const numberOfNotes = faker.random.number({\n        min: this.config.minNotesPerChild,\n        max: this.config.maxNotesPerChild,\n      });\n      for (let i = 0; i < numberOfNotes; i++) {\n        data.push(this.generateNoteForChild(child));\n      }\n    }\n\n    for (const center of centersUnique) {\n      const children: Child[] = this.demoChildren.entities.filter(\n        (c) => c.center === center\n      );\n      for (let i = 0; i < this.config.groupNotes; i++) {\n        data.push(this.generateGroupNote(children));\n      }\n    }\n\n    return data;\n  }\n\n  private generateNoteForChild(child: Child): Note {\n    const note = new Note(faker.random.uuid());\n\n    const selectedStory = faker.random.arrayElement(noteIndividualStories);\n    Object.assign(note, selectedStory);\n\n    note.addChild(child.getId());\n    note.author = faker.random.arrayElement(this.teamMembers);\n    note.date = faker.date.between(\n      child.admissionDate,\n      faker.getEarlierDateOrToday(child.dropoutDate)\n    );\n\n    this.removeFollowUpMarkerForOldNotes(note);\n\n    return note;\n  }\n\n  private removeFollowUpMarkerForOldNotes(note: Note) {\n    const lastMonths = new Date();\n    lastMonths.setMonth(lastMonths.getMonth() - 1);\n    if (note.date < lastMonths) {\n      note.warningLevel = WarningLevel.OK;\n    }\n  }\n\n  private generateGroupNote(children: Child[]) {\n    const note = new Note(faker.random.uuid());\n\n    const selectedStory = faker.random.arrayElement(noteGroupStories);\n    Object.assign(note, selectedStory);\n\n    note.children = children.map((c) => c.getId());\n    note.attendances = children.map((child) => {\n      const attendance = new MeetingNoteAttendance(child.getId());\n      // get an approximate presence of 85%\n      if (faker.random.number(100) <= 15) {\n        attendance.present = false;\n        attendance.remarks = faker.random.arrayElement(absenceRemarks);\n      }\n      return attendance;\n    });\n\n    note.author = faker.random.arrayElement(this.teamMembers);\n    note.date = faker.date.past(1);\n\n    this.removeFollowUpMarkerForOldNotes(note);\n\n    return note;\n  }\n}\n","import { WarningLevel } from \"../../warning-level\";\n\nexport const noteGroupStories = [\n  {\n    category: \"Guardians' Meeting\",\n    warningLevel: WarningLevel.OK,\n    subject: \"Guardians Meeting\",\n    text:\n      \"Our regular monthly meeting. Find the agenda and minutes in our meeting folder.\",\n  },\n  {\n    category: \"Guardians' Meeting\",\n    warningLevel: WarningLevel.OK,\n    subject: \"Guardians Meeting\",\n    text:\n      \"Our regular monthly meeting. Find the agenda and minutes in our meeting folder.\",\n  },\n\n  {\n    category: \"Children's Meeting\",\n    warningLevel: WarningLevel.OK,\n    subject: \"Children Meeting\",\n    text:\n      \"Our regular monthly meeting. Find the agenda and minutes in our meeting folder.\",\n  },\n  {\n    category: \"Children's Meeting\",\n    warningLevel: WarningLevel.OK,\n    subject: \"Children Meeting\",\n    text:\n      \"Our regular monthly meeting. Find the agenda and minutes in our meeting folder.\",\n  },\n  {\n    category: \"Children's Meeting\",\n    warningLevel: WarningLevel.OK,\n    subject: \"Drug Prevention Workshop\",\n    text: \"Expert conducted a two day workshop on drug prevention.\",\n  },\n];\n","import { WarningLevel } from \"../../warning-level\";\n\nexport const noteIndividualStories = [\n  {\n    category: \"Home Visit\",\n    warningLevel: WarningLevel.WARNING,\n    subject: \"Mother sick\",\n    text:\n      \"Visited family after we heard that mother is seriously ill. She cannot get up. \" +\n      \"Children are taking care of housework. \" +\n      \"Told her to see doctor. We should follow up next week.\",\n  },\n  {\n    category: \"Talk with Guardians\",\n    warningLevel: WarningLevel.WARNING,\n    subject: \"Discussed school change\",\n    text:\n      \"Discussed future of the child with the parents. They agree that changing school can be a good option. \" +\n      \"Will discuss further together with the child.\",\n  },\n\n  {\n    category: \"Phone Call\",\n    warningLevel: WarningLevel.OK,\n    subject: \"Follow up for school absence\",\n    text:\n      \"Called to ask for reason about absence. Mother made excuses but promised to send the child tomorrow.\",\n  },\n  {\n    category: \"Phone Call\",\n    warningLevel: WarningLevel.OK,\n    subject: \"absent because ill\",\n    text:\n      \"Mother has called in the morning. Child cannot come to class because of fever.\",\n  },\n  {\n    category: \"Phone Call\",\n    warningLevel: WarningLevel.URGENT,\n    subject: \"Absence without information\",\n    text:\n      \"Child was not in school whole last week again. When calling the mother she didn't know about it. \" +\n      \"Need to follow up urgently to discuss with the child and the guardians.\",\n  },\n\n  {\n    category: \"School/Hostel Visit\",\n    warningLevel: WarningLevel.OK,\n    subject: \"School is happy about progress\",\n    text:\n      \"Visited the school and talked to the class teacher and principal. They are happy about the progress \" +\n      \"and behaviour.\",\n  },\n  {\n    category: \"Talk with Coaching Teacher\",\n    warningLevel: WarningLevel.WARNING,\n    subject: \"Needs to work more for school\",\n    text:\n      \"Discussed the child's progress with coaching teacher. He is still a weak student and needs more support. \" +\n      \"We should consider arranging an extra class for him. Discuss next social worker meeting.\",\n  },\n\n  {\n    category: \"Incident\",\n    warningLevel: WarningLevel.URGENT,\n    subject: \"Fight at school\",\n    text:\n      \"Principal called us today. Our student got into a fight and was suspended for a week. \" +\n      \"Need to follow up with the child and discuss the matter.\",\n  },\n\n  {\n    category: \"Discussion/Decision\",\n    warningLevel: WarningLevel.OK,\n    subject: \"Special help for family\",\n    text:\n      \"Since the father has lost his job the family is struggling to survive. \" +\n      \"After home visits and discussion in our team we decided to refer them to a special support programme.\",\n  },\n  {\n    category: \"Discussion/Decision\",\n    warningLevel: WarningLevel.OK,\n    subject: \"Chance to repeat class\",\n    text:\n      \"Child has failed this school year as she did not go to school regularly. \" +\n      \"After a long discussion with the child and her parents we agreed to support her to repeat the class \" +\n      \"and she promised to attend school regularly.\",\n  },\n\n  {\n    category: \"Talk with Child\",\n    warningLevel: WarningLevel.WARNING,\n    subject: \"Distracted in class\",\n    text:\n      \"Teacher has let us know that he is very unfocused during class these days. \" +\n      \"Discussed with him - there are a lot of problems in the family currently.\",\n  },\n  {\n    category: \"Talk with Child\",\n    warningLevel: WarningLevel.WARNING,\n    subject: \"Disturbing class\",\n    text:\n      \"She refused to listen to the teacher was disturbing the class. \" +\n      \"Did counselling session with her.\",\n  },\n];\n","export const absenceRemarks = [\n  \"got excused by it's mother\",\n  \"absent without excuse\",\n  \"absent because ill\",\n  \"\",\n  \"\",\n  \"\",\n];\n","export enum InteractionTypes {\n  NONE = \"\",\n  HOME_VISIT = \"Home Visit\",\n  GUARDIAN_TALK = \"Talk with Guardians\",\n  CHILD_TALK = \"Talk with Child\",\n  INCIDENT = \"Incident\",\n  DISCUSSION = \"Discussion/Decision\",\n  VISIT = \"School/Hostel Visit\",\n  PHONE_CALL = \"Phone Call\",\n  COACHING_TALK = \"Talk with Coaching Teacher\",\n  PEER_TALK = \"Talk with Peer\",\n  NEIGHBOUR_TALK = \"Talk with Neighbours\",\n  GUARDIAN_MEETING = \"Guardians' Meeting\",\n  CHILDREN_MEETING = \"Children's Meeting\",\n  DAILY_ROUTINE = \"Daily Routine\",\n  ANNUAL_SURVEY = \"Annual Survey\",\n  EXCURSION = \"Excursion/Trip\",\n  PARTNER_CONTACT = \"Contact with other partners (club/NGO/...)\",\n  RATION_DISTRIBUTION = \"Ration Distribution\",\n}\n\nexport const INTERACTION_TYPE_COLORS: Map<InteractionTypes, string> = new Map([\n  [InteractionTypes.GUARDIAN_MEETING, \"#E1F5FE\"],\n  [InteractionTypes.CHILDREN_MEETING, \"#E1F5FE\"],\n  [InteractionTypes.RATION_DISTRIBUTION, \"#E1F5FE\"],\n  [InteractionTypes.EXCURSION, \"#E1F5FE\"],\n  [InteractionTypes.DISCUSSION, \"#E1BEE7\"],\n  [InteractionTypes.ANNUAL_SURVEY, \"#FFFDE7\"],\n  [InteractionTypes.DAILY_ROUTINE, \"#F1F8E9\"],\n]);\n","export class MeetingNoteAttendance {\n  present: boolean = true;\n  remarks: string = \"\";\n  childId: string;\n\n  constructor(childId: string, presence: boolean = true, remark: string = \"\") {\n    this.childId = childId;\n    this.present = presence;\n    this.remarks = remark;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { MeetingNoteAttendance } from \"../meeting-note-attendance\";\nimport {\n  INTERACTION_TYPE_COLORS,\n  InteractionTypes,\n} from \"../interaction-types.enum\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\nimport { Entity } from \"../../../core/entity/entity\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\nimport { WarningLevel, WarningLevelColor } from \"../../warning-level\";\n\n@DatabaseEntity(\"Note\")\nexport class Note extends Entity {\n  /** IDs of Child entities linked with this note */\n  @DatabaseField() children: string[] = [];\n  /** An array of triplets containing information about the child and it's attendance */\n  @DatabaseField() attendances: MeetingNoteAttendance[] = [];\n  @DatabaseField() date: Date;\n  @DatabaseField() subject: string = \"\";\n  @DatabaseField() text: string = \"\";\n  @DatabaseField() author: string = \"\";\n  @DatabaseField() category: InteractionTypes = InteractionTypes.NONE;\n  @DatabaseField({ dataType: \"string\" }) warningLevel: WarningLevel =\n    WarningLevel.OK;\n\n  getWarningLevel(): WarningLevel {\n    return this.warningLevel;\n  }\n\n  // TODO: color logic should not be part of entity/model but rather in the component responsible for displaying it\n  public getColor() {\n    if (this.warningLevel === WarningLevel.URGENT) {\n      return WarningLevelColor(WarningLevel.URGENT);\n    }\n    if (this.warningLevel === WarningLevel.WARNING) {\n      return WarningLevelColor(WarningLevel.WARNING);\n    }\n\n    const color = INTERACTION_TYPE_COLORS.get(this.category);\n    return color === undefined ? \"\" : color;\n  }\n\n  public getColorForId(entityId: string) {\n    if (this.isMeeting() && !this.isPresent(entityId)) {\n      // child is absent, highlight the entry\n      return WarningLevelColor(WarningLevel.URGENT);\n    }\n\n    return this.getColor();\n  }\n\n  /**\n   * whether a specific child with given childId is linked to this not\n   * @param childId The childId to check for\n   */\n  isLinkedWithChild(childId: string): boolean {\n    return this.children.includes(childId);\n  }\n\n  /**\n   * whether or not this note's contents describe a meeting\n   */\n  isMeeting(): boolean {\n    return (\n      this.category === InteractionTypes.GUARDIAN_MEETING ||\n      this.category === InteractionTypes.CHILDREN_MEETING ||\n      this.category === InteractionTypes.EXCURSION ||\n      this.category === InteractionTypes.RATION_DISTRIBUTION\n    );\n  }\n\n  /**\n   * returns the children that were either present or absent\n   * @param presence true to get the children that were present, false to get the children that were absent\n   */\n  childrenWithPresence(presence: boolean): MeetingNoteAttendance[] {\n    return this.attendances.filter(\n      (attendance) => attendance.present === presence\n    );\n  }\n\n  /**\n   * whether or not a specific child was present or not.\n   * This does not check whether or not this note is a meeting and will not return\n   * a sensible value, if this child couldn't be found\n   * @param childId The id of the child to check for\n   */\n  isPresent(childId: string): boolean {\n    const child = this.attendances.find(\n      (attendance) => attendance.childId === childId\n    );\n    if (child !== undefined) {\n      return child.present;\n    }\n  }\n\n  /**\n   * removes a specific child from this note\n   * @param childId The id of the child to exclude from the notes\n   */\n  removeChild(childId: string) {\n    this.children.splice(this.children.indexOf(childId), 1);\n    this.attendances.splice(\n      this.attendances.findIndex(\n        (attendance) => attendance.childId === childId\n      ),\n      1\n    );\n  }\n\n  /**\n   * adds a new child to this note\n   * @param childId The id of the child to add to the notes\n   */\n  addChild(childId: string) {\n    this.children.splice(0, 0, childId);\n    this.attendances.splice(0, 0, new MeetingNoteAttendance(childId));\n  }\n\n  /**\n   * adds multiple children to this note\n   * @param childIds The id's of the children to add\n   */\n  addChildren(...childIds: string[]) {\n    childIds.forEach((child) => this.addChild(child));\n  }\n\n  /**\n   * Toggles for a given child it's presence.\n   * If the child was absent, the presence-field will be true for that child.\n   * If the child was present, the presence-field will be false for that child\n   * @param childId The ID of the child\n   */\n  togglePresence(childId: string) {\n    const child = this.attendances.find(\n      (attendance) => attendance.childId === childId\n    );\n    if (child !== undefined) {\n      child.present = !child.present;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { MeetingNoteAttendance } from \"../../meeting-note-attendance\";\n\n@Component({\n  selector: \"app-child-meeting-note-attendance\",\n  templateUrl: \"./child-meeting-note-attendance.component.html\",\n  styleUrls: [\"./child-meeting-note-attendance.component.scss\"],\n})\nexport class ChildMeetingNoteAttendanceComponent {\n  @Input() noteChildAttendance: MeetingNoteAttendance;\n  @Output() change = new EventEmitter();\n  @Output() remove = new EventEmitter();\n  showRemarks: boolean = false;\n}\n","\n<div fxLayout=\"col\" fxLayoutGap=\"4px\">\n\n  <div class=\"actions\" fxFlex=\"40px\">\n    <!-- deactivated to keep the UI simple and understandable\n    <span class=\"fa fa-window-maximize\" *ngIf=\"!showRemarks\" (click)=\"showRemarks=true\"></span>\n    <span class=\"fa fa-window-minimize\" *ngIf=\"showRemarks\" (click)=\"showRemarks=false\"></span>\n    -->\n    <button mat-icon-button (click)='remove.emit()'>\n      <mat-icon fontIcon=\"fa-times\"></mat-icon>\n    </button>\n  </div>\n\n  <div fxFlex=\"125px\">\n    <mat-button-toggle-group name=\"present\" class=\"presence-toggle\"\n                             [(ngModel)]=\"noteChildAttendance.present\" (change)='change.emit(noteChildAttendance)'>\n      <mat-button-toggle [value]=\"true\" class=\"presence-toggle-button\"\n                         [ngClass]=\"{'button-present': noteChildAttendance.present}\">\n        Present\n      </mat-button-toggle>\n      <mat-button-toggle [value]=\"false\" class=\"presence-toggle-button\"\n                         [ngClass]=\"{'button-absent': !noteChildAttendance.present}\">\n        Absent\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n\n  <app-child-block [entityId]=\"noteChildAttendance.childId\" fxFlex>\n  </app-child-block>\n</div>\n\n<!-- deactivated to keep the UI simple and understandable\n<div [ngClass]=\"{ 'hide-remarks': !showRemarks }\">\n  <mat-form-field class=\"input-max\">\n    <input matInput placeholder=\"Remarks\"\n           [(ngModel)]=\"noteChildAttendance.remarks\"\n           [ngModelOptions]=\"{standalone:true}\">\n  </mat-form-field>\n</div>\n-->\n","import { Component, Input, ViewChild } from \"@angular/core\";\nimport { InteractionTypes } from \"../interaction-types.enum\";\nimport { Note } from \"../model/note\";\nimport { ShowsEntity } from \"../../../core/form-dialog/shows-entity.interface\";\n\n@Component({\n  selector: \"app-note-details\",\n  templateUrl: \"./note-details.component.html\",\n  styleUrls: [\"./note-details.component.scss\"],\n})\nexport class NoteDetailsComponent implements ShowsEntity {\n  @Input() entity: Note;\n  @ViewChild(\"dialogForm\", { static: true }) formDialogWrapper;\n\n  smallScreen: boolean;\n\n  interactionTypes = Object.values(InteractionTypes);\n\n  constructor() {\n    this.smallScreen = window.innerWidth < 500;\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<app-form-dialog-wrapper #dialogForm [entity]=\"entity\">\n  <h1>{{ entity.date?.toLocaleDateString() }}: {{ entity.subject }}</h1>\n\n  <form #entityForm=\"ngForm\">\n    <!-- General context of Note -->\n    <div class=\"form-section-secondary\">\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"20px\">\n        <div fxFlex>\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"Date\"\n              name=\"date\"\n              [(ngModel)]=\"entity.date\"\n              [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n              matSuffix\n              [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n        </div>\n\n        <div fxFlex>\n          <mat-form-field>\n            <mat-label>\n              Status\n            </mat-label>\n            <mat-select name=\"followup\" [(ngModel)]=\"entity.warningLevel\">\n              <mat-option value=\"OK\">Solved</mat-option>\n              <mat-option value=\"WARNING\">Needs Follow-Up</mat-option>\n              <mat-option value=\"URGENT\">Urgent Follow-Up</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"20px\">\n        <div fxFlex>\n          <mat-form-field class=\"input-medium\">\n            <mat-select\n              placeholder=\"Type of Interaction\"\n              name=\"type\"\n              [(ngModel)]=\"entity.category\"\n            >\n              <mat-option\n                *ngFor=\"let interaction of interactionTypes\"\n                [value]=\"interaction\"\n              >\n                {{ interaction }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div fxFlex>\n          <mat-form-field class=\"input-medium\">\n            <!-- TODO: should be multi-select or auto-complete field of user names? -->\n            <input\n              matInput\n              placeholder=\"Team Member\"\n              name=\"teammember\"\n              type=\"text\"\n              [(ngModel)]=\"entity.author\"\n            />\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n\n    <!-- Primary information of Note -->\n    <div class=\"mat-elevation-z2 primary-section-elevated form-section-primary\">\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"20px\">\n        <div fxFlex>\n          <mat-form-field class=\"input-medium\">\n            <input\n              matInput\n              placeholder=\"Topic / Summary\"\n              name=\"subject\"\n              type=\"text\"\n              [(ngModel)]=\"entity.subject\"\n            />\n          </mat-form-field>\n        </div>\n      </div>\n\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"20px\">\n        <mat-form-field class=\"input-max\">\n          <textarea\n            matInput\n            placeholder=\"Notes\"\n            name=\"notes\"\n            [(ngModel)]=\"entity.text\"\n            cdkTextareaAutosize\n            cdkAutosizeMinRows=\"4\"\n          ></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"20px\">\n      <div fxFlex *ngIf=\"!entity.isMeeting()\">\n        <app-child-select\n          [valueAsIds]=\"entity.children\"\n          (newIdAdded)=\"entity.addChild($event); entityForm.form.markAsDirty()\"\n          (idRemoved)=\"\n            entity.removeChild($event); entityForm.form.markAsDirty()\n          \"\n          class=\"input-medium\"\n        >\n        </app-child-select>\n      </div>\n      <app-note-presence-list\n        *ngIf=\"entity.isMeeting()\"\n        [recordForm]=\"entityForm\"\n        [entity]=\"entity\"\n        fxFlex\n      >\n      </app-note-presence-list>\n    </div>\n  </form>\n</app-form-dialog-wrapper>\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n} from \"@angular/core\";\nimport { Note } from \"../../model/note\";\nimport { NgForm } from \"@angular/forms\";\nimport { ChildSelectComponent } from \"../../../children/child-select/child-select.component\";\n\n@Component({\n  selector: \"app-note-presence-list\",\n  templateUrl: \"./note-presence-list.component.html\",\n  styleUrls: [\"./note-presence-list.component.scss\"],\n})\nexport class NotePresenceListComponent implements OnChanges {\n  @Input() entity: Note = new Note(\"\");\n  @Input() recordForm: NgForm;\n  smallScreen: boolean;\n\n  @ViewChild(\"childSelect\", { static: true })\n  childSelectComponent: ChildSelectComponent;\n\n  constructor() {\n    this.smallScreen = window.innerWidth < 500;\n    this.sortEntries();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty(\"entity\")) {\n      this.sortEntries();\n    }\n  }\n\n  private sortEntries() {\n    if (!this.entity) {\n      return;\n    }\n\n    this.entity.attendances.sort((a, b) => {\n      if (a.present === b.present) {\n        return 0;\n      }\n      if (a.present) {\n        return -1;\n      }\n      return 1;\n    });\n  }\n}\n","\n<app-child-select #childSelect [valueAsIds]='entity.children'\n                  (newIdAdded)=\"entity.addChild($event); recordForm.form.markAsDirty()\"\n                  (idRemoved)=\"entity.removeChild($event); recordForm.form.markAsDirty()\"\n                  class='input-medium'>\n</app-child-select>\n\n\n<app-child-meeting-note-attendance *ngFor=\"let att of entity.attendances\"\n                         [noteChildAttendance]=\"att\"\n                         (change)='recordForm.form.markAsDirty();'\n                         (remove)='childSelectComponent.unselectChildId(att.childId)'\n                         [ngClass]=\"{'child-absent': !att.present}\">\n</app-child-meeting-note-attendance>\n","import { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Note } from \"../model/note\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MediaChange, MediaObserver } from \"@angular/flex-layout\";\nimport { NoteDetailsComponent } from \"../note-details/note-details.component\";\nimport { InteractionTypes } from \"../interaction-types.enum\";\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\nimport { WarningLevel } from \"../../warning-level\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\nimport { FilterSelection } from \"../../../core/filter/filter-selection/filter-selection\";\nimport { SessionService } from \"../../../core/session/session-service/session.service\";\nimport { FormDialogService } from \"../../../core/form-dialog/form-dialog.service\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { User } from \"app/core/user/user\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-notes-manager\",\n  templateUrl: \"./notes-manager.component.html\",\n  styleUrls: [\"./notes-manager.component.scss\"],\n})\nexport class NotesManagerComponent implements OnInit, AfterViewInit {\n  entityList = new Array<Note>();\n  notesDataSource = new MatTableDataSource();\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  columnsToDisplay = [\"date\", \"subject\", \"category\", \"author\", \"children\"];\n\n  columnGroups = {\n    standard: [\"date\", \"subject\", \"category\", \"author\", \"children\"],\n    mobile: [\"date\", \"subject\", \"children\"],\n  };\n\n  filterString = \"\";\n\n  followUpFS = new FilterSelection<Note>(\"status\", [\n    {\n      key: \"urgent\",\n      label: \"Urgent\",\n      filterFun: (n: Note) => n.warningLevel === WarningLevel.URGENT,\n    },\n    {\n      key: \"follow-up\",\n      label: \"Needs Follow-Up\",\n      filterFun: (n: Note) =>\n        n.warningLevel === WarningLevel.WARNING ||\n        n.warningLevel === WarningLevel.URGENT,\n    },\n    { key: \"\", label: \"All\", filterFun: () => true },\n  ]);\n\n  dateFS = new FilterSelection<Note>(\"date\", [\n    {\n      key: \"current-week\",\n      label: \"This Week\",\n      filterFun: (n: Note) => n.date > this.getPreviousSunday(0),\n    },\n    {\n      key: \"last-week\",\n      label: \"Since Last Week\",\n      filterFun: (n: Note) => n.date > this.getPreviousSunday(1),\n    },\n    { key: \"\", label: \"All\", filterFun: () => true },\n  ]);\n\n  filterSelections = [this.followUpFS, this.dateFS];\n\n  categoryFS = new FilterSelection<Note>(\"category\", []);\n  filterSelectionsDropdown = [this.categoryFS];\n\n  public paginatorPageSize: number;\n  public paginatorPageIndex: number;\n  private user: User;\n\n  constructor(\n    private formDialog: FormDialogService,\n    private sessionService: SessionService,\n    private media: MediaObserver,\n    private entityMapperService: EntityMapperService\n  ) {}\n\n  ngOnInit() {\n    this.user = this.sessionService.getCurrentUser();\n    this.paginatorPageSize = this.user.paginatorSettingsPageSize.notesList;\n    this.paginatorPageIndex = this.user.paginatorSettingsPageIndex.notesList;\n\n    // activate default filter to current week\n    this.dateFS.selectedOption = this.dateFS.options[0].key;\n\n    this.entityMapperService.loadType<Note>(Note).then((notes) => {\n      this.sortAndAdd(notes);\n    });\n\n    this.displayColumnGroup(\"standard\");\n    this.media.media$\n      .pipe(untilDestroyed(this))\n      .subscribe((change: MediaChange) => {\n        if (change.mqAlias === \"xs\" || change.mqAlias === \"sm\") {\n          console.log(\"smaller screen toggled\");\n          this.displayColumnGroup(\"mobile\");\n        }\n      });\n\n    this.initCategoryFilter();\n  }\n\n  onPaginateChange(event: PageEvent) {\n    this.paginatorPageSize = event.pageSize;\n    this.paginatorPageIndex = event.pageIndex;\n    this.user.paginatorSettingsPageSize.notesList = this.paginatorPageSize;\n    this.user.paginatorSettingsPageIndex.notesList = this.paginatorPageIndex;\n    this.entityMapperService.save<User>(this.user);\n  }\n\n  private sortAndAdd(newNotes: Note[]) {\n    newNotes.forEach((newNote) => {\n      this.entityList.push(newNote);\n    });\n    this.entityList.sort(\n      (a, b) =>\n        (b.date ? b.date.getTime() : 0) - (a.date ? a.date.getTime() : 0)\n    );\n    this.applyFilterSelections();\n  }\n\n  displayColumnGroup(columnGroup: string) {\n    this.columnsToDisplay = this.columnGroups[columnGroup];\n  }\n\n  private initCategoryFilter() {\n    this.categoryFS.options = [{ key: \"\", label: \"\", filterFun: () => true }];\n\n    Object.values(InteractionTypes).forEach((interaction) => {\n      this.categoryFS.options.push({\n        key: interaction,\n        label: interaction,\n        filterFun: (note: Note) => {\n          return interaction === InteractionTypes.NONE\n            ? true\n            : note.category === interaction;\n        },\n      });\n    });\n\n    this.applyFilterSelections();\n  }\n\n  ngAfterViewInit() {\n    this.notesDataSource.sort = this.sort;\n    this.notesDataSource.paginator = this.paginator;\n    setTimeout(() => {\n      this.paginator.pageIndex = this.paginatorPageIndex;\n      this.paginator.page.next({\n        pageIndex: this.paginator.pageIndex,\n        pageSize: this.paginator.pageSize,\n        length: this.paginator.length,\n      });\n    });\n  }\n\n  private getPreviousSunday(weeksBack: number) {\n    const today = new Date();\n    const day = today.getDay();\n    const diff = today.getDate() - day - 7 * weeksBack; // adjust when day is sunday\n    return new Date(today.setDate(diff));\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.notesDataSource.filter = filterValue;\n  }\n\n  applyFilterSelections() {\n    let filteredData = this.entityList;\n\n    this.filterSelections.forEach((f) => {\n      filteredData = filteredData.filter(f.getSelectedFilterFunction());\n    });\n    this.filterSelectionsDropdown.forEach((f) => {\n      filteredData = filteredData.filter(f.getSelectedFilterFunction());\n    });\n\n    this.notesDataSource.data = filteredData;\n  }\n\n  addNoteClick() {\n    const newNote = new Note(Date.now().toString());\n    newNote.date = new Date();\n    newNote.author = this.sessionService.getCurrentUser().name;\n\n    const noteDialogRef = this.showDetails(newNote);\n    noteDialogRef.afterClosed().subscribe((val) => {\n      this.entityList = [val].concat(this.entityList);\n      this.applyFilterSelections();\n    });\n  }\n\n  showDetails(entity: Note) {\n    return this.formDialog.openDialog(NoteDetailsComponent, entity);\n  }\n}\n","<h1>Notes &amp; Reports</h1>\n\n<mat-expansion-panel\n  expanded=\"true\"\n  fxLayout=\"column\"\n  fxLayoutGap=\"10px\"\n  class=\"filter-panel\"\n>\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"none end\">\n    <div fxFlex=\"50\">\n      <mat-form-field style=\"width: 100%;\">\n        <input\n          matInput\n          placeholder=\"Filter\"\n          (ngModelChange)=\"applyFilter($event)\"\n          [(ngModel)]=\"filterString\"\n        />\n        <button\n          mat-icon-button\n          *ngIf=\"filterString\"\n          matSuffix\n          aria-label=\"Clear\"\n          (click)=\"filterString = ''; applyFilter('')\"\n        >\n          <mat-icon fontIcon=\"fa-times\"></mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n\n    <div class=\"align-form-field\" fxHide.xs=\"true\">\n      (Showing {{ notesDataSource.filteredData.length }} Notes)\n    </div>\n\n    <div class=\"align-form-field\">\n      <button\n        mat-stroked-button\n        color=\"accent\"\n        (click)=\"addNoteClick()\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"UserAction\"\n        angularticsAction=\"notes_manager_add_note\"\n      >\n        <mat-icon\n          class=\"button-icon\"\n          aria-label=\"add child\"\n          fontIcon=\"fa-plus-circle\"\n        ></mat-icon>\n        <span fxHide.lt-md=\"true\">\n          Add New\n        </span>\n      </button>\n    </div>\n  </div>\n\n  <div\n    fxLayout=\"row wrap\"\n    fxLayoutGap=\"10px\"\n    class=\"filter-button\"\n    fxHide.lt-sm\n  >\n    <mat-button-toggle-group\n      *ngFor=\"let filterSelection of filterSelections\"\n      [name]=\"filterSelection.name\"\n      [value]=\"filterSelection.selectedOption\"\n    >\n      <mat-button-toggle\n        *ngFor=\"let option of filterSelection.options\"\n        [value]=\"option.key\"\n        (click)=\"\n          filterSelection.selectedOption = option.key; applyFilterSelections()\n        \"\n      >\n        {{ option.label }}\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <div fxLayout=\"row wrap\" fxHide.gt-xs>\n    <mat-form-field\n      *ngFor=\"let filterSelection of filterSelections\"\n      style=\"padding-right: 1%;\"\n    >\n      <mat-label>{{ filterSelection.name }}</mat-label>\n      <mat-select\n        [id]=\"filterSelection.name\"\n        [value]=\"filterSelection.selectedOption\"\n        placeholder=\"filterSelection.name\"\n      >\n        <mat-option\n          *ngFor=\"let option of filterSelection.options\"\n          [value]=\"option.key\"\n          (click)=\"\n            filterSelection.selectedOption = option.key; applyFilterSelections()\n          \"\n        >\n          {{ option.label }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\" style=\"margin-top: 20px;\">\n    <mat-form-field *ngFor=\"let filterSelection of filterSelectionsDropdown\">\n      <mat-select\n        [placeholder]=\"filterSelection.name\"\n        [value]=\"filterSelection.selectedOption\"\n      >\n        <mat-option\n          *ngFor=\"let option of filterSelection.options\"\n          [value]=\"option.key\"\n          (click)=\"\n            filterSelection.selectedOption = option.key; applyFilterSelections()\n          \"\n          >{{ option.label }}</mat-option\n        >\n      </mat-select>\n    </mat-form-field>\n  </div>\n</mat-expansion-panel>\n\n<!--<mat-divider></mat-divider>-->\n\n<div class=\"mat-elevation-z8 table-list\">\n  <table mat-table [dataSource]=\"notesDataSource\" matSort>\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n      <td mat-cell *matCellDef=\"let note\">\n        {{ note.date | date: \"yyyy-MM-dd\" }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"subject\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Subject</th>\n      <td mat-cell *matCellDef=\"let note\">{{ note.subject }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Category</th>\n      <td mat-cell *matCellDef=\"let note\">{{ note.category }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"author\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Author</th>\n      <td mat-cell *matCellDef=\"let note\">{{ note.author }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"children\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Children</th>\n      <td mat-cell *matCellDef=\"let note\">\n        <app-child-block\n          *ngFor=\"let child of note.children\"\n          [entityId]=\"child\"\n        ></app-child-block>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr\n      mat-row\n      *matRowDef=\"let note; columns: columnsToDisplay; let i=index;\"\n      (click)=\"showDetails(note)\"\n      style=\"cursor: pointer;\"\n      [ngStyle]=\"{ 'background-color': note.getColor() }\"\n      angulartics2On=\"click\"\n      angularticsCategory=\"Navigation\"\n      angularticsAction=\"notes_manager_list_link\"\n      [angularticsLabel]=\"'list-entry-' + i\"\n    ></tr>\n  </table>\n  <mat-paginator\n    (page)=\"onPaginateChange($event)\"\n    [pageSize]=\"paginatorPageSize\"\n    [pageIndex]=\"paginatorPageIndex\"\n    [pageSizeOptions]=\"[3, 10, 20, 50]\"\n    [showFirstLastButtons]=\"true\"\n  ></mat-paginator>\n</div>\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { Note } from \"../model/note\";\nimport { NoteDetailsComponent } from \"../note-details/note-details.component\";\nimport { DatePipe } from \"@angular/common\";\nimport { ChildrenService } from \"../../children/children.service\";\nimport moment from \"moment\";\nimport { SessionService } from \"../../../core/session/session-service/session.service\";\nimport { ColumnDescription } from \"../../../core/entity-subrecord/entity-subrecord/column-description\";\nimport { ColumnDescriptionInputType } from \"../../../core/entity-subrecord/entity-subrecord/column-description-input-type.enum\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n/**\n * The component that is responsible for listing the Notes that are related to a certain child\n */\n@UntilDestroy()\n@Component({\n  selector: \"app-notes-of-child\",\n  templateUrl: \"./notes-of-child.component.html\",\n  styleUrls: [\"./notes-of-child.component.scss\"],\n})\nexport class NotesOfChildComponent implements OnInit, OnChanges {\n  @Input() childId: string;\n  records: Array<Note> = [];\n  detailsComponent = NoteDetailsComponent;\n\n  columns: Array<ColumnDescription> = [\n    new ColumnDescription(\n      \"date\",\n      \"Date\",\n      ColumnDescriptionInputType.DATE,\n      null,\n      (v: Date) => this.datePipe.transform(v, \"yyyy-MM-dd\"),\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"subject\",\n      \"Topic\",\n      ColumnDescriptionInputType.TEXT,\n      null,\n      undefined,\n      \"xs\"\n    ),\n    new ColumnDescription(\n      \"text\",\n      \"Notes\",\n      ColumnDescriptionInputType.TEXTAREA,\n      null,\n      undefined,\n      \"md\"\n    ),\n    new ColumnDescription(\n      \"author\",\n      \"SW\",\n      ColumnDescriptionInputType.TEXT,\n      null,\n      undefined,\n      \"md\"\n    ),\n    new ColumnDescription(\n      \"warningLevel\",\n      \"\",\n      ColumnDescriptionInputType.SELECT,\n      [\n        { value: \"OK\", label: \"Solved\" },\n        { value: \"WARNING\", label: \"Needs Follow-Up\" },\n        { value: \"URGENT\", label: \"Urgent Follow-Up\" },\n      ],\n      () => \"\",\n      \"md\"\n    ),\n  ];\n\n  constructor(\n    private childrenService: ChildrenService,\n    private sessionService: SessionService,\n    private datePipe: DatePipe\n  ) {}\n\n  ngOnInit() {\n    this.initNotesOfChild();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty(\"childId\")) {\n      this.initNotesOfChild();\n    }\n  }\n\n  private initNotesOfChild() {\n    if (!this.childId || this.childId === \"\") {\n      return;\n    }\n\n    this.childrenService\n      .getNotesOfChild(this.childId)\n      .pipe(untilDestroyed(this))\n      .subscribe((notes: Note[]) => {\n        notes.sort((a, b) => {\n          if (!a.date && b.date) {\n            // note without date should be first\n            return -1;\n          }\n          return moment(b.date).valueOf() - moment(a.date).valueOf();\n        });\n        this.records = notes;\n      });\n  }\n\n  generateNewRecordFactory() {\n    // define values locally because \"this\" is a different scope after passing a function as input to another component\n    const user = this.sessionService.getCurrentUser()\n      ? this.sessionService.getCurrentUser().name\n      : \"\";\n    const childId = this.childId;\n\n    return () => {\n      const newNote = new Note(Date.now().toString());\n      newNote.date = new Date();\n      newNote.addChild(childId);\n      newNote.author = user;\n\n      return newNote;\n    };\n  }\n}\n","<app-entity-subrecord [records]=\"records\"\n                      [columns]=\"columns\"\n                      [newRecordFactory]=\"generateNewRecordFactory()\"\n                      [detailsComponent]=\"detailsComponent\"\n                      [entityId]=\"childId\">\n</app-entity-subrecord>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NoteDetailsComponent } from \"./note-details/note-details.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { NotesManagerComponent } from \"./notes-manager/notes-manager.component\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { RouterModule } from \"@angular/router\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { FilterPipeModule } from \"ngx-filter-pipe\";\nimport { SchoolsModule } from \"../schools/schools.module\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { ChildrenModule } from \"../children/children.module\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { MatTreeModule } from \"@angular/material/tree\";\nimport { ChildMeetingNoteAttendanceComponent } from \"./note-details/child-meeting-attendance/child-meeting-note-attendance.component\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { NotePresenceListComponent } from \"./note-details/note-presence-list/note-presence-list.component\";\nimport { EntitySubrecordModule } from \"../../core/entity-subrecord/entity-subrecord.module\";\nimport { ConfirmationDialogModule } from \"../../core/confirmation-dialog/confirmation-dialog.module\";\nimport { FormDialogModule } from \"../../core/form-dialog/form-dialog.module\";\nimport { Angulartics2Module } from \"angulartics2\";\n\n@NgModule({\n  declarations: [\n    NoteDetailsComponent,\n    NotesManagerComponent,\n    ChildMeetingNoteAttendanceComponent,\n    NotePresenceListComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    EntitySubrecordModule,\n    ConfirmationDialogModule,\n    FlexLayoutModule,\n    RouterModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatSortModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatTabsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FilterPipeModule,\n    SchoolsModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatListModule,\n    ChildrenModule,\n    DragDropModule,\n    MatTreeModule,\n    MatTabsModule,\n    MatPaginatorModule,\n    FormDialogModule,\n    Angulartics2Module,\n  ],\n  providers: [],\n})\nexport class NotesModule {}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { DatePipe } from \"@angular/common\";\nimport { ChildSchoolRelation } from \"../children/model/childSchoolRelation\";\nimport { ChildrenService } from \"../children/children.service\";\nimport { SchoolsService } from \"../schools/schools.service\";\nimport * as uniqid from \"uniqid\";\nimport { ColumnDescription } from \"../../core/entity-subrecord/entity-subrecord/column-description\";\nimport { ColumnDescriptionInputType } from \"../../core/entity-subrecord/entity-subrecord/column-description-input-type.enum\";\nimport moment from \"moment\";\nimport { isValidDate } from \"../../utils/utils\";\n\n@Component({\n  selector: \"app-previous-schools\",\n  templateUrl: \"./previous-schools.component.html\",\n})\nexport class PreviousSchoolsComponent implements OnInit, OnChanges {\n  /**\n   * returns a css-compatible color value from green to red using the given\n   * input value\n   * @param percent The percentage from 0-100 (both inclusive). 0 will be completely red, 100 will be completely green\n   * Everything between will have suitable colors (orange, yellow,...)\n   * If the color is NaN, the color will be a light grey\n   */\n  private static fromPercent(percent: number): string {\n    if (Number.isNaN(percent)) {\n      return \"rgba(130,130,130,0.4)\";\n    }\n    // the hsv color-value is to be between 0 (red) and 120 (green)\n    // percent is between 0-100, so we have to normalize it first\n    const color = (percent / 100) * 120;\n    return \"hsl(\" + color + \", 100%, 85%)\";\n  }\n\n  @Input() childId: string;\n  @Output() changedRecordInEntitySubrecord = new EventEmitter<any>();\n  records = new Array<ChildSchoolRelation>();\n  columns = new Array<ColumnDescription>();\n\n  constructor(\n    private childrenService: ChildrenService,\n    private schoolsService: SchoolsService,\n    private datePipe: DatePipe\n  ) {}\n\n  ngOnInit() {\n    this.initColumnDefinitions();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty(\"childId\")) {\n      this.loadData(this.childId);\n    }\n  }\n\n  async loadData(id: string) {\n    if (!this.childId || this.childId === \"\") {\n      return;\n    }\n\n    this.records = await this.childrenService.getSchoolsWithRelations(id);\n  }\n\n  private async initColumnDefinitions() {\n    const schools = await this.schoolsService.getSchools().toPromise();\n    const schoolMap = {};\n    schools.forEach((s) => (schoolMap[s.getId()] = s.name));\n\n    this.columns = [\n      new ColumnDescription(\n        \"schoolId\",\n        \"School\",\n        ColumnDescriptionInputType.SELECT,\n        schools.map((t) => {\n          return { value: t.getId(), label: t.name };\n        }),\n        (schoolId) => schoolMap[schoolId]\n      ),\n\n      new ColumnDescription(\n        \"schoolClass\",\n        \"Class\",\n        ColumnDescriptionInputType.NUMBER\n      ),\n\n      new ColumnDescription(\n        \"start\",\n        \"From\",\n        ColumnDescriptionInputType.DATE,\n        null,\n        (v: Date) =>\n          isValidDate(v) ? this.datePipe.transform(v, \"yyyy-MM-dd\") : \"\"\n      ),\n\n      new ColumnDescription(\n        \"end\",\n        \"To\",\n        ColumnDescriptionInputType.DATE,\n        null,\n        (v: Date) =>\n          isValidDate(v) ? this.datePipe.transform(v, \"yyyy-MM-dd\") : \"\"\n      ),\n\n      new ColumnDescription(\n        \"result\",\n        \"Result\",\n        ColumnDescriptionInputType.NUMBER,\n        null,\n        (n: number) => (n >= 0 && !Number.isNaN(n) ? n + \"%\" : \"N/A\"),\n        null,\n        this.resultColorStyleBuilder\n      ),\n    ];\n  }\n\n  generateNewRecordFactory() {\n    const childId = this.childId;\n    return () => {\n      const newPreviousSchool = new ChildSchoolRelation(uniqid());\n      newPreviousSchool.childId = childId;\n      // last to-date (of first entry in records); if the first entry doesn't have any to-date, lastToDate is set to yesterday\n      const lastToDate =\n        this.records.length && this.records[0].end\n          ? new Date(this.records[0].end)\n          : new Date(new Date().setDate(new Date().getDate() + -1));\n      newPreviousSchool.start = new Date(\n        lastToDate.setDate(lastToDate.getDate() + 1)\n      ); // one day after last to-date\n      newPreviousSchool.end = null; // void date\n      newPreviousSchool.result = Number.NaN; // NaN represents no data available\n      return newPreviousSchool;\n    };\n  }\n\n  formValidation = (record) => {\n    const validationResult = {\n      hasPassedValidation: false,\n      validationMessage: \"\",\n    };\n    if (!record.schoolId) {\n      validationResult.validationMessage =\n        '\"Name\" is empty. Please select a school.';\n    } else if (moment(record.start).isAfter(record.end, \"days\")) {\n      validationResult.validationMessage =\n        '\"To\"-date lies before \"From\"-date. Please enter correct dates.';\n    } else if (record.result > 100) {\n      validationResult.validationMessage = \"Result cannot be greater than 100\";\n    } else if (record.result < 0) {\n      validationResult.validationMessage = \"Result cannot be smaller than 0\";\n    } else {\n      validationResult.hasPassedValidation = true;\n    }\n    return validationResult;\n  };\n\n  resultColorStyleBuilder(value: number) {\n    return {\n      \"background-color\": PreviousSchoolsComponent.fromPercent(value),\n      \"border-radius\": \"5%\",\n      padding: \"5px\",\n      width: \"min-content\",\n    };\n  }\n}\n","<app-entity-subrecord\n  (changedRecordsInEntitySubrecordEvent)=\"changedRecordInEntitySubrecord.emit()\"\n  [records]=\"records\"\n  [columns]=\"columns\"\n  [newRecordFactory]=\"generateNewRecordFactory()\"\n  [formValidation]=\"formValidation\">\n</app-entity-subrecord>\n","import { faker } from \"../../core/demo-data/faker\";\nimport { School } from \"./model/school\";\nimport { Injectable } from \"@angular/core\";\nimport { DemoDataGenerator } from \"../../core/demo-data/demo-data-generator\";\n\nexport class DemoSchoolConfig {\n  count: number;\n}\n\n@Injectable()\nexport class DemoSchoolGenerator extends DemoDataGenerator<School> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration:\n   *   `providers: [DemoSchoolGenerator.provider({count: 10})]`\n   * @param config A config object specifying the number of entities the service should generate.\n   */\n  static provider(config: DemoSchoolConfig) {\n    return [\n      { provide: DemoSchoolGenerator, useClass: DemoSchoolGenerator },\n      { provide: DemoSchoolConfig, useValue: config },\n    ];\n  }\n\n  constructor(public config: DemoSchoolConfig) {\n    super();\n  }\n\n  generateEntities(): School[] {\n    const data = [];\n\n    for (let i = 1; i <= this.config.count; i++) {\n      const school = new School(String(i));\n      school.medium = faker.random.arrayElement([\n        \"Hindi\",\n        \"English\",\n        \"Bengali\",\n      ]);\n      school.name =\n        faker.name.firstName() +\n        \" \" +\n        faker.random.arrayElement([\n          \"School\",\n          \"High School\",\n          school.medium + \" Medium\",\n        ]);\n      school.address = faker.address.streetAddress();\n      school.phone = faker.phone.phoneNumberFormat();\n      school.privateSchool = faker.random.boolean();\n      school.upToClass = faker.random.arrayElement([8, 10, 12]);\n      school.academicBoard = faker.random.arrayElement([\n        \"CBSE\",\n        \"ICSE\",\n        \"WBBSE\",\n      ]);\n      school.timing = faker.random.arrayElement([\n        \"6 a.m. - 11 a.m.\",\n        \"11 a.m. - 4 p.m.\",\n        \"6:30-11:00 and 11:30-16:00\",\n      ]);\n      school.workingDays = faker.random.arrayElement([\n        \"Mon - Fri\",\n        \"Mon - Fri\",\n        \"Mon - Sat\",\n      ]);\n\n      data.push(school);\n    }\n    return data;\n  }\n}\n","import { Entity } from \"../../../core/entity/entity\";\nimport { DatabaseEntity } from \"../../../core/entity/database-entity.decorator\";\nimport { DatabaseField } from \"../../../core/entity/database-field.decorator\";\n\n@DatabaseEntity(\"School\")\nexport class School extends Entity {\n  @DatabaseField() name: string = \"\";\n  @DatabaseField() address: string = \"\";\n  @DatabaseField() medium: string = \"\";\n  @DatabaseField() remarks: string = \"\";\n  @DatabaseField() website: string = \"\";\n  @DatabaseField() privateSchool: boolean;\n  @DatabaseField() phone: string = \"\";\n  @DatabaseField() upToClass: number;\n  @DatabaseField() academicBoard: string = \"\";\n  @DatabaseField() timing: string = \"\";\n  @DatabaseField() workingDays: string = \"\";\n\n  public toString() {\n    return this.name;\n  }\n}\n","import {\n  Component,\n  HostListener,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\nimport { School } from \"../model/school\";\n\n@Component({\n  selector: \"app-school-block\",\n  templateUrl: \"./school-block.component.html\",\n  styleUrls: [\"./school-block.component.scss\"],\n})\nexport class SchoolBlockComponent implements OnChanges {\n  @Input() entity: School = new School(\"\");\n  @Input() entityId: string;\n  @Input() linkDisabled: boolean;\n  tooltip = false;\n  tooltipTimeout;\n\n  constructor(\n    private router: Router,\n    private entityMapper: EntityMapperService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty(\"entityId\")) {\n      this.initFromEntityId();\n    }\n  }\n\n  private async initFromEntityId() {\n    if (!this.entityId) {\n      return;\n    }\n    this.entity = await this.entityMapper.load(School, this.entityId);\n  }\n\n  showTooltip() {\n    this.tooltip = true;\n    if (this.tooltipTimeout) {\n      clearTimeout(this.tooltipTimeout);\n    }\n  }\n  hideTooltip() {\n    this.tooltipTimeout = setTimeout(() => (this.tooltip = false), 250);\n  }\n\n  @HostListener(\"click\") onClick() {\n    this.showDetailsPage();\n  }\n\n  showDetailsPage() {\n    if (!this.linkDisabled) {\n      this.router.navigate([\"/school\", this.entity.getId()]);\n    }\n  }\n}\n","<span (mouseenter)=\"showTooltip()\" (mouseleave)=\"hideTooltip()\">\n  <mat-icon class=\"school-pic\" fontIcon=\"fa-university\"></mat-icon> {{entity?.name}} <span style=\"font-size: x-small\">({{entity?.getId()}})</span>\n</span>\n\n<div style=\"position:absolute;\" *ngIf=\"tooltip\">\n  <div class=\"mat-elevation-z5 school-tooltip\" (mouseenter)=\"showTooltip()\" (mouseleave)=\"hideTooltip()\">\n    <div>{{entity?.medium}}</div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { School } from \"../model/school\";\nimport { SchoolsService } from \"../schools.service\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport * as uniqid from \"uniqid\";\nimport { AlertService } from \"../../../core/alerts/alert.service\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { ConfirmationDialogService } from \"../../../core/confirmation-dialog/confirmation-dialog.service\";\nimport { Location } from \"@angular/common\";\nimport { Child } from \"../../children/model/child\";\n@Component({\n  selector: \"app-school-details\",\n  templateUrl: \"./school-details.component.html\",\n  styleUrls: [\"./school-details.component.scss\"],\n})\nexport class SchoolDetailsComponent implements OnInit {\n  school = new School(\"\");\n\n  studentDataSource: MatTableDataSource<Child> = new MatTableDataSource();\n  displayedColumns = [\"id\", \"name\", \"schoolClass\", \"age\"];\n\n  form: FormGroup;\n  creatingNew = false;\n  editing = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    @Inject(FormBuilder) public fb: FormBuilder,\n    private entityMapperService: EntityMapperService,\n    private alertService: AlertService,\n    private snackBar: MatSnackBar,\n    private confirmationDialog: ConfirmationDialogService,\n    private schoolService: SchoolsService\n  ) {\n    this.initializeForm();\n  }\n\n  initializeForm() {\n    this.form = this.fb.group({\n      name: [{ value: this.school.name, disabled: !this.editing }],\n      address: [{ value: this.school.address, disabled: !this.editing }],\n      phone: [{ value: this.school.phone, disabled: !this.editing }],\n      medium: [{ value: this.school.medium, disabled: !this.editing }],\n      timing: [{ value: this.school.timing, disabled: !this.editing }],\n      upToClass: [{ value: this.school.upToClass, disabled: !this.editing }],\n      remarks: [{ value: this.school.remarks, disabled: !this.editing }],\n      academicBoard: [\n        { value: this.school.academicBoard, disabled: !this.editing },\n      ],\n      workingDays: [\n        { value: this.school.workingDays, disabled: !this.editing },\n      ],\n      website: [{ value: this.school.website, disabled: !this.editing }],\n      privateSchool: [\n        { value: this.school.privateSchool, disabled: !this.editing },\n      ],\n    });\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.loadSchool(paramMap.get(\"id\"));\n    });\n  }\n\n  switchEdit() {\n    this.editing = !this.editing;\n    this.initializeForm();\n  }\n\n  async loadSchool(id: string) {\n    if (id === \"new\") {\n      this.creatingNew = true;\n      this.editing = true;\n      this.school = new School(uniqid());\n    } else {\n      this.studentDataSource.data = [];\n      this.school = await this.entityMapperService.load<School>(School, id);\n    }\n    this.initializeForm();\n    await this.loadStudents();\n  }\n\n  async loadStudents() {\n    this.studentDataSource.data = await this.schoolService.getChildrenForSchool(\n      this.school.getId()\n    );\n  }\n\n  removeSchool() {\n    const dialogRef = this.confirmationDialog.openDialog(\n      \"Delete?\",\n      \"Are you sure you want to delete this School?\"\n    );\n\n    dialogRef.afterClosed().subscribe(async (confirmed) => {\n      if (confirmed) {\n        await this.entityMapperService.remove<School>(this.school);\n\n        await this.router.navigate([\"/school\"]);\n\n        const snackBarRef = this.snackBar.open(\n          'Deleted School \"' + this.school.name + '\"',\n          \"Undo\",\n          { duration: 8000 }\n        );\n        snackBarRef.onAction().subscribe(() => {\n          this.entityMapperService.save(this.school, true);\n          this.router.navigate([\"/school\", this.school.getId()]);\n        });\n      }\n    });\n  }\n\n  saveSchool() {\n    this.assignFormValuesToSchool(this.school, this.form);\n\n    this.entityMapperService\n      .save<School>(this.school)\n      .then(() => {\n        if (this.creatingNew) {\n          this.router.navigate([\"/school\", this.school.getId()]);\n          this.creatingNew = false;\n        }\n        this.switchEdit();\n      })\n      .catch((err) =>\n        this.alertService.addDanger(\n          'Could not save School \"' + this.school.name + '\": ' + err\n        )\n      );\n  }\n\n  private assignFormValuesToSchool(school: School, form: FormGroup) {\n    Object.keys(form.controls).forEach((key) => {\n      school[key] = form.get(key).value;\n    });\n  }\n\n  navigateBack() {\n    this.location.back();\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n  <h1 class=\"page-header section-school\">\n    <button\n      mat-icon-button\n      (click)=\"navigateBack()\"\n      matTooltip=\"Back\"\n      style=\"vertical-align: middle;\"\n    >\n      <mat-icon fontIcon=\"fa-backward\"></mat-icon>\n    </button>\n\n    <i class=\"fa fa-university fa-fw\"></i>\n    <span *ngIf=\"!creatingNew\">{{ school.name }}</span>\n    <span *ngIf=\"creatingNew\">Adding new School</span>\n  </h1>\n\n  <div>\n    <button\n      *ngIf=\"creatingNew || editing\"\n      mat-stroked-button\n      class=\"edit-button\"\n      (click)=\"saveSchool()\"\n      angulartics2On=\"click\"\n      angularticsCategory=\"UserAction\"\n      [angularticsAction]=\"creatingNew ? 'create_school_save' : 'school_details_save'\"\n    >\n      Save\n    </button>\n\n    <button\n      *ngIf=\"!creatingNew && editing\"\n      mat-stroked-button\n      class=\"edit-button\"\n      style=\"color: red;\"\n      (click)=\"removeSchool()\"\n      angulartics2On=\"click\"\n      angularticsCategory=\"UserAction\"\n      angularticsAction=\"school_details_remove\"\n    >\n      Delete\n    </button>\n\n    <button\n      *ngIf=\"creatingNew || editing\"\n      mat-stroked-button\n      class=\"edit-button\"\n      (click)=\"switchEdit()\"\n      angulartics2On=\"click\"\n      angularticsCategory=\"UserAction\"\n      angularticsAction=\"school_details_cancel\"\n    >\n      Cancel\n    </button>\n\n    <button\n      *ngIf=\"!editing\"\n      mat-stroked-button\n      class=\"edit-button\"\n      (click)=\"switchEdit()\"\n      angulartics2On=\"click\"\n      angularticsCategory=\"UserAction\"\n      angularticsAction=\"school_details_edit\"\n    >\n      Edit\n    </button>\n  </div>\n</div>\n\n<form [formGroup]=\"form\">\n  <mat-expansion-panel hideToggle=\"true\" expanded=\"true\">\n    <mat-expansion-panel-header>\n      <mat-panel-title> </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div>\n      <mat-form-field style=\"width: 300px;\">\n        <input matInput formControlName=\"name\" placeholder=\"Name\" type=\"text\" />\n      </mat-form-field>\n\n      <mat-form-field style=\"width: 100px;\">\n        <input\n          matInput\n          formControlName=\"medium\"\n          placeholder=\"Medium\"\n          type=\"text\"\n        />\n      </mat-form-field>\n\n      <mat-checkbox formControlName=\"privateSchool\" [disabled]=\"!editing\"\n        >Private school</mat-checkbox\n      >\n\n      <mat-form-field style=\"width: 100px;\">\n        <input\n          matInput\n          formControlName=\"academicBoard\"\n          placeholder=\"Board\"\n          type=\"text\"\n        />\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field>\n        <input\n          matInput\n          formControlName=\"phone\"\n          placeholder=\"Contact Number\"\n          type=\"text\"\n        />\n      </mat-form-field>\n\n      <mat-form-field>\n        <input\n          matInput\n          formControlName=\"address\"\n          placeholder=\"Address\"\n          type=\"text\"\n        />\n      </mat-form-field>\n\n      <mat-form-field>\n        <input\n          formControlName=\"website\"\n          matInput\n          placeholder=\"Website\"\n          type=\"text\"\n        />\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field>\n        <input\n          matInput\n          formControlName=\"timing\"\n          placeholder=\"School Timing\"\n          type=\"text\"\n        />\n      </mat-form-field>\n\n      <mat-form-field>\n        <input\n          matInput\n          formControlName=\"workingDays\"\n          placeholder=\"Working Days\"\n          type=\"text\"\n        />\n      </mat-form-field>\n\n      <mat-form-field>\n        <input\n          matInput\n          formControlName=\"upToClass\"\n          placeholder=\"Teaching up to class\"\n          type=\"text\"\n        />\n      </mat-form-field>\n    </div>\n\n    <div>\n      <mat-form-field style=\"width: 100%;\">\n        <textarea\n          matInput\n          formControlName=\"remarks\"\n          placeholder=\"Remarks\"\n        ></textarea>\n      </mat-form-field>\n    </div>\n  </mat-expansion-panel>\n\n  <mat-expansion-panel hideToggle=\"false\" expanded=\"true\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Students\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div class=\"example-container mat-elevation-z8\">\n      <table\n        mat-table\n        #table\n        [dataSource]=\"studentDataSource\"\n        matSort\n        style=\"width: 100%;\"\n      >\n        <ng-container matColumnDef=\"id\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>\n            PN\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let student\">\n            {{ student.projectNumber }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>\n            Name\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let student\"> {{ student.name }} </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"schoolClass\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>\n            Class\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let student\">\n            {{ student.schoolClass }}\n          </mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"age\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>\n            Age\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let student\"> {{ student.age }} </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row\n          *matRowDef=\"let row; columns: displayedColumns\"\n          [routerLink]=\"['/child', row.getId()]\"\n          style=\"cursor: pointer;\"\n        ></mat-row>\n      </table>\n    </div>\n  </mat-expansion-panel>\n</form>\n","import { Component, OnInit, AfterViewInit, ViewChild } from \"@angular/core\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { School } from \"../model/school\";\nimport { SchoolsService } from \"../schools.service\";\nimport { Router } from \"@angular/router\";\nimport { FilterSelection } from \"../../../core/filter/filter-selection/filter-selection\";\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\nimport { SessionService } from \"../../../core/session/session-service/session.service\";\nimport { User } from \"../../../core/user/user\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport { EntityMapperService } from \"../../../core/entity/entity-mapper.service\";\n\n@UntilDestroy()\n@Component({\n  selector: \"app-schools-list\",\n  templateUrl: \"./schools-list.component.html\",\n  styleUrls: [\"./schools-list.component.scss\"],\n})\nexport class SchoolsListComponent implements OnInit, AfterViewInit {\n  schoolList: School[];\n  schoolDataSource: MatTableDataSource<School> = new MatTableDataSource<\n    School\n  >();\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  filterString = \"\";\n  columnsToDisplay: string[] = [\n    \"name\",\n    \"medium\",\n    \"privateSchool\",\n    \"academicBoard\",\n    \"upToClass\",\n  ];\n\n  mediumFS = new FilterSelection(\"medium\", []);\n  privateFS = new FilterSelection(\"private\", [\n    {\n      key: \"private\",\n      label: \"Private School\",\n      filterFun: (s: School) => s.privateSchool,\n    },\n    {\n      key: \"government\",\n      label: \"Government School\",\n      filterFun: (s: School) => !s.privateSchool,\n    },\n    { key: \"\", label: \"All\", filterFun: () => true },\n  ]);\n  filterSelections = [this.mediumFS, this.privateFS];\n\n  public paginatorPageSize: number;\n  public paginatorPageIndex: number;\n  private user: User;\n\n  constructor(\n    private schoolService: SchoolsService,\n    private router: Router,\n    private sessionService: SessionService,\n    private entityMapperService: EntityMapperService\n  ) {}\n\n  ngOnInit() {\n    this.user = this.sessionService.getCurrentUser();\n    this.paginatorPageSize = this.user.paginatorSettingsPageSize.schoolsList;\n    this.paginatorPageIndex = this.user.paginatorSettingsPageIndex.schoolsList;\n    this.schoolService\n      .getSchools()\n      .pipe(untilDestroyed(this))\n      .subscribe((data) => {\n        this.schoolList = data;\n        this.schoolDataSource.data = data;\n\n        const mediums = data\n          .map((s) => s.medium)\n          .filter((value, index, arr) => value && arr.indexOf(value) === index);\n        this.mediumFS.initOptions(mediums, \"medium\");\n      });\n  }\n\n  ngAfterViewInit() {\n    this.schoolDataSource.sort = this.sort;\n    this.schoolDataSource.paginator = this.paginator;\n    setTimeout(() => {\n      this.paginator.pageIndex = this.paginatorPageIndex;\n      this.paginator.page.next({\n        pageIndex: this.paginator.pageIndex,\n        pageSize: this.paginator.pageSize,\n        length: this.paginator.length,\n      });\n    });\n  }\n\n  onPaginateChange(event: PageEvent) {\n    this.paginatorPageSize = event.pageSize;\n    this.paginatorPageIndex = event.pageIndex;\n    this.user.paginatorSettingsPageSize.schoolsList = this.paginatorPageSize;\n    this.user.paginatorSettingsPageIndex.schoolsList = this.paginatorPageIndex;\n    this.entityMapperService.save<User>(this.user);\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.schoolDataSource.filter = filterValue;\n  }\n\n  applyFilterSelections() {\n    let filteredData = this.schoolList;\n\n    this.filterSelections.forEach((f) => {\n      filteredData = filteredData.filter(f.getSelectedFilterFunction());\n    });\n\n    this.schoolDataSource.data = filteredData;\n  }\n\n  addSchoolClick() {\n    this.router.navigate([this.router.url, \"new\"]);\n  }\n\n  showSchoolDetails(school: School) {\n    this.router.navigate([this.router.url, school.getId()]);\n  }\n}\n","<h1>Schools List</h1>\n\n<mat-expansion-panel\n  expanded=\"true\"\n  fxLayout=\"column wrap\"\n  fxLayoutGap=\"10px\"\n  class=\"filter-panel\"\n>\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\" fxLayoutAlign=\"none end\">\n    <div fxFlex=\"50\">\n      <mat-form-field style=\"width: 100%;\">\n        <input\n          matInput\n          placeholder=\"Filter\"\n          (ngModelChange)=\"applyFilter($event)\"\n          [(ngModel)]=\"filterString\"\n        />\n        <button\n          mat-icon-button\n          *ngIf=\"filterString\"\n          matSuffix\n          aria-label=\"Clear\"\n          (click)=\"filterString = ''; applyFilter('')\"\n        >\n          <mat-icon fontIcon=\"fa-times\"></mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n\n    <div fxFlex=\"25\" class=\"align-form-field\" fxHide.xs=\"true\">\n      (Showing {{ schoolDataSource.filteredData.length }} schools)\n    </div>\n\n    <div fxFlex=\"25\" class=\"align-form-field\">\n      <button\n        mat-stroked-button\n        color=\"accent\"\n        (click)=\"addSchoolClick()\"\n        fxFlexAlign=\"end\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"UserAction\"\n        angularticsAction=\"school_list_add_school\"\n      >\n        <mat-icon\n          class=\"button-icon\"\n          aria-label=\"add child\"\n          fontIcon=\"fa-plus-circle\"\n        ></mat-icon>\n        <span fxHide.lt-sm>\n          <span fxHide.lt-md=\"true\">\n            Add New\n          </span>\n        </span>\n      </button>\n    </div>\n  </div>\n\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxHide.lt-sm>\n    <mat-button-toggle-group\n      *ngFor=\"let filterSelection of filterSelections\"\n      [name]=\"filterSelection.name\"\n      [value]=\"filterSelection.selectedOption\"\n    >\n      <mat-button-toggle\n        *ngFor=\"let option of filterSelection.options\"\n        [value]=\"option.key\"\n        (click)=\"\n          filterSelection.selectedOption = option.key; applyFilterSelections()\n        \"\n      >\n        {{ option.label }}\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <div fxLayout=\"row wrap\" fxHide.gt-xs>\n    <mat-form-field\n      *ngFor=\"let filterSelection of filterSelections\"\n      style=\"padding-right: 1%;\"\n    >\n      <mat-label>{{ filterSelection.name }}</mat-label>\n      <mat-select\n        [id]=\"filterSelection.name\"\n        [value]=\"filterSelection.selectedOption\"\n        placeholder=\"filterSelection.name\"\n      >\n        <mat-option\n          *ngFor=\"let option of filterSelection.options\"\n          [value]=\"option.key\"\n          (click)=\"\n            filterSelection.selectedOption = option.key; applyFilterSelections()\n          \"\n        >\n          {{ option.label }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n</mat-expansion-panel>\n\n<!--<mat-divider></mat-divider>-->\n\n<div *ngIf=\"schoolDataSource\" class=\"mat-elevation-z8 table-list\">\n  <table mat-table [dataSource]=\"schoolDataSource\" matSort width=\"100%\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let school\">{{ school.name }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"medium\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Medium</th>\n      <td mat-cell *matCellDef=\"let school\">{{ school.medium }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"privateSchool\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Private School</th>\n      <td mat-cell *matCellDef=\"let school\">\n        {{ school.privateSchool ? \"✓\" : \"\" }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"academicBoard\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Board</th>\n      <td mat-cell *matCellDef=\"let school\">{{ school.academicBoard }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"upToClass\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Up to class</th>\n      <td mat-cell *matCellDef=\"let school\">{{ school.upToClass }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr\n      mat-row\n      *matRowDef=\"let school; columns: columnsToDisplay\"\n      (click)=\"showSchoolDetails(school)\"\n      style=\"cursor: pointer;\"\n    ></tr>\n  </table>\n  <mat-paginator\n    (page)=\"onPaginateChange($event)\"\n    [pageSize]=\"paginatorPageSize\"\n    [pageIndex]=\"paginatorPageIndex\"\n    [pageSizeOptions]=\"[3, 10, 20, 50]\"\n    [showFirstLastButtons]=\"true\"\n  ></mat-paginator>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SchoolsListComponent } from \"./schools-list/schools-list.component\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { SchoolDetailsComponent } from \"./school-details/school-details.component\";\nimport { SchoolBlockComponent } from \"./school-block/school-block.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { EntitySubrecordModule } from \"../../core/entity-subrecord/entity-subrecord.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { SchoolsService } from \"./schools.service\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { Angulartics2Module } from \"angulartics2\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSortModule,\n    MatExpansionModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    RouterModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatSortModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatCardModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    EntitySubrecordModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    Angulartics2Module,\n  ],\n  declarations: [\n    SchoolBlockComponent,\n    SchoolsListComponent,\n    SchoolDetailsComponent,\n  ],\n  exports: [SchoolBlockComponent],\n  providers: [SchoolsService],\n})\nexport class SchoolsModule {}\n","import { Injectable } from \"@angular/core\";\nimport { School } from \"./model/school\";\nimport { EntityMapperService } from \"../../core/entity/entity-mapper.service\";\nimport { from, Observable } from \"rxjs\";\nimport { Database } from \"../../core/database/database\";\nimport { Child } from \"../children/model/child\";\nimport { EntitySchemaService } from \"../../core/entity/schema/entity-schema.service\";\nimport { ChildrenService } from \"../children/children.service\";\n\n@Injectable()\nexport class SchoolsService {\n  constructor(\n    private entityMapper: EntityMapperService,\n    private entitySchemaService: EntitySchemaService,\n    private db: Database,\n    private childrenService: ChildrenService\n  ) {}\n\n  getSchools(): Observable<School[]> {\n    return from(this.entityMapper.loadType<School>(School));\n  }\n\n  async getChildrenForSchool(schoolId: string): Promise<Child[]> {\n    const relations = await this.childrenService.queryRelationsOf(\n      \"school\",\n      schoolId\n    );\n    const children: Child[] = [];\n    for (const relation of relations) {\n      children.push(\n        await this.childrenService.getChild(relation.childId).toPromise()\n      );\n    }\n    return children;\n  }\n}\n","export enum WarningLevel {\n  OK = \"OK\",\n  WARNING = \"WARNING\",\n  URGENT = \"URGENT\",\n  NONE = \"\",\n}\n\nexport function WarningLevelColor(warningLevel: WarningLevel): string {\n  switch (warningLevel) {\n    case WarningLevel.OK:\n      return \"#90ee9040\";\n    case WarningLevel.WARNING:\n      return \"#ffa50080\";\n    case WarningLevel.URGENT:\n      return \"#fd727280\";\n    default:\n      return \"\";\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\n/**\n * Use this token to provide (and thereby register) custom implementations of {@link ConflictResolutionStrategy}.\n *\n * `{ provide: CONFLICT_RESOLUTION_STRATEGY, useClass: MyConflictResolutionStrategy, multi: true }`\n *\n * see {@link ConflictResolutionModule}\n */\nexport const CONFLICT_RESOLUTION_STRATEGY = new InjectionToken<\n  ConflictResolutionStrategy\n>(\"ConflictResolutionStrategy\");\n\n/**\n * Implement this interface to provide custom strategies how certain conflicts of an Entity type can be resolved automatically.\n *\n * see {@link ConflictResolutionModule}\n */\nexport interface ConflictResolutionStrategy {\n  autoDeleteConflictingRevision(currentDoc: any, conflictingDoc: any): boolean;\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { SessionService } from \"../session/session-service/session.service\";\n\n/**\n * Guard checking for the currently logged in user's admin permissions.\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private _sessionService: SessionService) {}\n\n  /**\n   * Whether the currently logged in user (if any) has administrative rights.\n   */\n  public isAdmin(): boolean {\n    if (this._sessionService.isLoggedIn()) {\n      return this._sessionService.getCurrentUser().isAdmin();\n    }\n  }\n\n  /**\n   * Allows activation (i.e. returns true) only if a user with admin rights is currently logged in.\n   * (used by Angular Routing system when added to certain routes)\n   *\n   * @param next The next route navigated to if allowed (provided by Angular Routing)\n   * @param state The current state (provided by Angular Routing)\n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    return this.isAdmin();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AdminComponent } from \"./admin/admin.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { AlertsModule } from \"../alerts/alerts.module\";\nimport { EntitySubrecordModule } from \"../entity-subrecord/entity-subrecord.module\";\nimport { AdminGuard } from \"./admin.guard\";\nimport { EntityModule } from \"../entity/entity.module\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ChildPhotoUpdateService } from \"./services/child-photo-update.service\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { UserListComponent } from \"./user-list/user-list.component\";\nimport { ExportDataComponent } from \"./export-data/export-data.component\";\nimport { BackupService } from \"./services/backup.service\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\n\n/**\n * GUI for administrative users to manage and maintain background and technical aspects of the app.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatCheckboxModule,\n    AlertsModule,\n    EntitySubrecordModule,\n    EntityModule,\n    HttpClientModule,\n    FormsModule,\n    MatDialogModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n  declarations: [AdminComponent, UserListComponent, ExportDataComponent],\n  providers: [\n    AdminGuard,\n    ChildPhotoUpdateService,\n    BackupService,\n    ExportDataComponent,\n  ],\n  exports: [ExportDataComponent],\n})\nexport class AdminModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { AppConfig } from \"../../app-config/app-config\";\nimport { AlertService } from \"../../alerts/alert.service\";\nimport { Alert } from \"../../alerts/alert\";\nimport FileSaver from \"file-saver\";\nimport { BackupService } from \"../services/backup.service\";\nimport { ConfirmationDialogService } from \"../../confirmation-dialog/confirmation-dialog.service\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport PouchDB from \"pouchdb-browser\";\nimport { ChildPhotoUpdateService } from \"../services/child-photo-update.service\";\n\n/**\n * Admin GUI giving administrative users different options/actions.\n */\n@Component({\n  selector: \"app-admin\",\n  templateUrl: \"./admin.component.html\",\n  styleUrls: [\"./admin.component.scss\"],\n})\nexport class AdminComponent implements OnInit {\n  /** app-wide configuration */\n  appConfig = AppConfig.settings;\n\n  /** all alerts */\n  alerts: Alert[];\n\n  /** direct database instance */\n  private db;\n\n  constructor(\n    private alertService: AlertService,\n    private backupService: BackupService,\n    private confirmationDialog: ConfirmationDialogService,\n    private snackBar: MatSnackBar,\n    private childPhotoUpdateService: ChildPhotoUpdateService\n  ) {}\n\n  ngOnInit() {\n    this.alerts = this.alertService.alerts;\n    this.db = new PouchDB(AppConfig.settings.database.name);\n  }\n\n  /**\n   * Trigger an automatic detection & update of Child entities' photo filenames.\n   */\n  updatePhotoFilenames() {\n    this.childPhotoUpdateService.updateChildrenPhotoFilenames();\n  }\n\n  /**\n   * Send a reference of the PouchDB to the browser's developer console for real-time debugging.\n   */\n  debugDatabase() {\n    console.log(this.db);\n  }\n\n  /**\n   * Download a full backup of the database as (json) file.\n   */\n  saveBackup() {\n    this.backupService\n      .getJsonExport()\n      .then((bac) => this.startDownload(bac, \"text/json\", \"backup.json\"));\n  }\n\n  /**\n   * Download a full export of the database as csv file.\n   */\n  saveCsvExport() {\n    this.backupService\n      .getCsvExport()\n      .then((csv) => this.startDownload(csv, \"text/csv\", \"export.csv\"));\n  }\n\n  private startDownload(data: string, type: string, name: string) {\n    const blob = new Blob([data], { type: type });\n    FileSaver.saveAs(blob, name);\n  }\n\n  private readFile(file): Promise<string> {\n    return new Promise((resolve) => {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        resolve(fileReader.result as string);\n      };\n      fileReader.readAsText(file);\n    });\n  }\n\n  /**\n   * Reset the database to the state from the loaded backup file.\n   * @param file The file object of the backup to be restored\n   */\n  loadBackup(file) {\n    const pRestorePoint = this.backupService.getJsonExport();\n    const pLoadedData = this.readFile(file);\n    Promise.all([pLoadedData, pRestorePoint]).then((r) => {\n      const newData = r[0];\n      const restorePoint = r[1];\n\n      const dialogRef = this.confirmationDialog.openDialog(\n        \"Overwrite complete database?\",\n        \"Are you sure you want to restore this backup? \" +\n          \"This will delete all \" +\n          restorePoint.split(\"\\n\").length +\n          \" existing records in the database, \" +\n          \"restoring \" +\n          newData.split(\"\\n\").length +\n          \" records from the loaded file.\"\n      );\n\n      dialogRef.afterClosed().subscribe((confirmed) => {\n        if (confirmed) {\n          this.backupService.clearDatabase();\n          this.backupService.importJson(newData, true);\n\n          const snackBarRef = this.snackBar.open(\"Backup restored\", \"Undo\", {\n            duration: 8000,\n          });\n          snackBarRef.onAction().subscribe(() => {\n            this.backupService.clearDatabase();\n            this.backupService.importJson(restorePoint, true);\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Add the data from the loaded file to the database, inserting and updating records.\n   * @param file The file object of the csv data to be loaded\n   */\n  loadCsv(file) {\n    const pRestorePoint = this.backupService.getJsonExport();\n    const pLoadedData = this.readFile(file);\n    Promise.all([pLoadedData, pRestorePoint]).then((r) => {\n      const newData = r[0];\n      const restorePoint = r[1];\n\n      const dialogRef = this.confirmationDialog.openDialog(\n        \"Import new data?\",\n        \"Are you sure you want to import this file? \" +\n          \"This will add or update \" +\n          (newData.trim().split(\"\\n\").length - 1) +\n          \" records from the loaded file. \" +\n          'Existing records with same \"_id\" in the database will be overwritten!'\n      );\n\n      dialogRef.afterClosed().subscribe((confirmed) => {\n        if (confirmed) {\n          this.backupService.importCsv(newData, true);\n\n          const snackBarRef = this.snackBar.open(\"Import completed\", \"Undo\", {\n            duration: 8000,\n          });\n          snackBarRef.onAction().subscribe(() => {\n            this.backupService.clearDatabase();\n            this.backupService.importJson(restorePoint, true);\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Reset the database removing all entities except user accounts.\n   */\n  clearDatabase() {\n    this.backupService.getJsonExport().then((restorePoint) => {\n      const dialogRef = this.confirmationDialog.openDialog(\n        \"Empty complete database?\",\n        \"Are you sure you want to clear the database? \" +\n          \"This will delete all \" +\n          restorePoint.split(\"\\n\").length +\n          \" existing records in the database!\"\n      );\n\n      dialogRef.afterClosed().subscribe((confirmed) => {\n        if (confirmed) {\n          this.backupService.clearDatabase();\n\n          const snackBarRef = this.snackBar.open(\"Import completed\", \"Undo\", {\n            duration: 8000,\n          });\n          snackBarRef.onAction().subscribe(() => {\n            this.backupService.importJson(restorePoint, true);\n          });\n        }\n      });\n    });\n  }\n}\n","<h1>\n  Administration & Configuration\n</h1>\n\n<p style=\"font-style:italic; font-weight:bold;\">\n  Warning: This section is intended for system administrators only.\n  Make sure you know what you are doing.\n</p>\n\n<br><hr>\n<h2>Utility Functions</h2>\n<p>\n  <button (click)=\"updatePhotoFilenames()\" mat-stroked-button>Auto-Update children's photo filenames</button>\n</p>\n\n<br><hr>\n<h2>Backup</h2>\n<p>\n  <button (click)=\"saveBackup()\" mat-stroked-button>Download Backup (.json)</button>&nbsp;\n  <button (click)=\"backupImport.click()\" mat-stroked-button>Restore Backup (.json)</button>\n  <input #backupImport type=\"file\" style=\"display:none\" (change)=\"loadBackup($event.target.files[0])\" />\n</p>\n\n<br><hr>\n<h2>Export</h2>\n<p>\n  <button (click)=\"saveCsvExport()\" mat-stroked-button>Download whole database (.csv)</button>&nbsp;\n  <button (click)=\"csvImport.click()\" mat-stroked-button>Import (.csv)</button>\n  <input #csvImport type=\"file\" style=\"display:none\" (change)=\"loadCsv($event.target.files[0])\" />\n</p>\n\n\n<br><hr>\n<h2>AppConfig</h2>\n<p>{{appConfig | json}}</p>\n\n<br><hr>\n<h2>Debug the PouchDB</h2>\n<p>\n  <button (click)=\"debugDatabase()\" mat-stroked-button>Send to console.log()</button>\n</p>\n<p>\n  <button (click)=\"clearDatabase()\" mat-stroked-button>Empty Database</button>\n</p>\n\n<br><hr>\n<h2>Alert Log</h2>\n<table>\n  <tr *ngFor=\"let alert of alerts.reverse()\">\n    <td>{{alert.type}}</td>\n    <td>{{alert.message}}</td>\n  </tr>\n</table>\n","import { Component, Input } from \"@angular/core\";\nimport { BackupService } from \"../services/backup.service\";\n\n/**\n * Generic export data button that allows the user to download a file of the given data.\n */\n@Component({\n  selector: \"app-export-data\",\n  templateUrl: \"./export-data.component.html\",\n  styleUrls: [\"./export-data.component.scss\"],\n})\nexport class ExportDataComponent {\n  /** data to be exported */\n  @Input() data: any = [];\n\n  /** What kind of data should be export? Currently implemented are 'json', 'csv' */\n  @Input() format: string = \"csv\";\n\n  /** filename for the download of the exported data */\n  @Input() filename: string = \"exportedData\";\n\n  constructor(private backupService: BackupService) {}\n\n  /**\n   * Trigger the download of the export file.\n   */\n  exportData() {\n    const blobData = this.getFormattedBlobData();\n    const link = this.createDownloadLink(blobData);\n    link.click();\n  }\n\n  private createDownloadLink(blobData): HTMLAnchorElement {\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"style\", \"display:none;\");\n    document.body.appendChild(link);\n    link.href = window.URL.createObjectURL(blobData);\n    link.download = this.filename + \".\" + this.format.toLowerCase();\n    link.addEventListener(\"click\", () => window.URL.revokeObjectURL(blobData));\n    return link;\n  }\n\n  private getFormattedBlobData(): Blob {\n    let result = \"\";\n    switch (this.format.toLowerCase()) {\n      case \"json\":\n        result = this.backupService.createJson(this.data);\n        return new Blob([result], { type: \"application/json\" });\n      case \"csv\":\n        result = this.backupService.createCsv(this.data);\n        return new Blob([result], { type: \"text/csv\" });\n      default:\n        console.warn(\"Not supported format:\", this.format);\n        return new Blob([\"\"]);\n    }\n  }\n}\n","<button mat-stroked-button color=\"accent\" (click)=\"exportData()\">\n    <ng-content></ng-content>\n</button>\n","import { Injectable } from \"@angular/core\";\nimport { Database } from \"../../database/database\";\nimport { User } from \"../../user/user\";\nimport { Papa } from \"ngx-papaparse\";\n\n/**\n * Create and load backups of the database.\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BackupService {\n  /** CSV row separator */\n  static readonly SEPARATOR_ROW = \"\\n\";\n  /** CSV column/field separator */\n  static readonly SEPARATOR_COL = \",\";\n\n  constructor(private db: Database, private papa: Papa) {}\n\n  /**\n   * Creates a List of JSON elements separated by `BackupService.SEPARATOR_ROW` holding all elements of the database.\n   * This method can be used to created a backup of the data.\n   *\n   * @returns Promise<string> a string containing all elements of the database separated by SEPARATOR_ROW\n   */\n  getJsonExport(): Promise<string> {\n    return this.db.getAll().then((results) => this.createJson(results));\n  }\n\n  /**\n   * Creates a JSON string of the given data.\n   *\n   * @param data the data which should be converted to JSON\n   * @returns string containing all the values stringified elements of the input data\n   */\n  createJson(data): string {\n    let res = \"\";\n    data.forEach((r) => {\n      res += JSON.stringify(r) + BackupService.SEPARATOR_ROW;\n    });\n\n    return res.trim();\n  }\n\n  /**\n   * Creates a CSV string of the whole database\n   *\n   * @returns string a valid CSV string\n   */\n  getCsvExport(): Promise<string> {\n    return this.db.getAll().then((results) => this.createCsv(results));\n  }\n\n  /**\n   * Creates a CSV string of the input data\n   *\n   * @param data an array of elements\n   * @returns string a valid CSV string of the input data\n   */\n  createCsv(data): string {\n    // create list of row descriptions for the csv string\n    const allFields = [\"_id\", \"_rev\"];\n    data.forEach((element) => allFields.push(...Object.keys(element)));\n    const uniqueFields = [...new Set(allFields)]; // creates list with unique elements\n\n    return this.papa.unparse(\n      { data: data, fields: uniqueFields },\n      { quotes: true, header: true }\n    );\n  }\n\n  /**\n   * Removes all but the user entities of the database\n   *\n   * @returns Promise<any> a promise that resolves after all remove operations are done\n   */\n  clearDatabase(): Promise<any> {\n    const userEntityPrefix = new User(\"\").getType() + \":\";\n\n    return this.db.getAll().then((allDocs) => {\n      const p = [];\n      allDocs.forEach((row) => {\n        if (!row._id.startsWith(userEntityPrefix)) {\n          // skip User entities in order to not break login!\n          p.push(this.db.remove(row));\n        }\n      });\n      return Promise.all(p);\n    });\n  }\n\n  /**\n   * Fills the database with the provided JSON data.\n   * Data should be generated by the `getJsonExport` function\n   *\n   * @param json An array of entities to be written to the database\n   * @param forceUpdate should existing objects be overridden? Default false\n   *\n   * @returns Promise<any> a promise that resolves after all save operations are done\n   */\n  importJson(json, forceUpdate = false) {\n    const promises = [];\n    json.split(BackupService.SEPARATOR_ROW).forEach((record) => {\n      promises.push(this.db.put(JSON.parse(record), forceUpdate));\n    });\n    return Promise.all(promises);\n  }\n\n  /**\n   * Fills the database with the elements of the CSV string\n   *\n   * @param csv a valid CSV string\n   * @param forceUpdate should existing elements be overridden? Default false\n   *\n   * @returns Promise<any> a promise that resolves after all save operations are done\n   */\n  importCsv(csv, forceUpdate = false): Promise<any> {\n    const promises = [];\n\n    const parsedCsv = this.papa.parse(csv, {\n      header: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n    });\n    parsedCsv.data.forEach((record) => {\n      // remove undefined properties\n      for (const propertyName in record) {\n        if (record[propertyName] === null) {\n          delete record[propertyName];\n        }\n      }\n\n      promises.push(this.db.put(record, forceUpdate));\n    });\n\n    return Promise.all(promises);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { EntityMapperService } from \"../../entity/entity-mapper.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Child } from \"../../../child-dev-project/children/model/child\";\n\n/**\n * Utility service to automatically detect and update filenames for Child entities' photos.\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ChildPhotoUpdateService {\n  constructor(\n    private entityService: EntityMapperService,\n    private httpClient: HttpClient\n  ) {}\n\n  /**\n   * Tries to detect and update the filename of an existing photo for all Child entities,\n   * saving the entities that were updated.\n   */\n  public async updateChildrenPhotoFilenames() {\n    const children = await this.entityService.loadType<Child>(Child);\n    for (const child of children) {\n      await this.updatePhotoIfFileExists(child, `${child.projectNumber}.png`);\n      await this.updatePhotoIfFileExists(child, `${child.projectNumber}.jpg`);\n    }\n  }\n\n  /**\n   * Check (and if it exists update) the Child's photo file.\n   * @param child The child to be updated\n   * @param filename A guess for a likely filename that needs to be checked\n   */\n  private async updatePhotoIfFileExists(child: Child, filename: string) {\n    if (child.photoFile && child.photoFile !== \"\") {\n      // do not overwrite existing path\n      return;\n    }\n\n    const fileExists = await this.checkIfFileExists(\n      Child.generatePhotoPath(filename)\n    );\n    if (fileExists) {\n      child.photoFile = filename;\n      this.entityService.save<Child>(child);\n      console.log(\n        `set photoFile for Child:${child.getId()} (${\n          child.projectNumber\n        }) to ${filename}`\n      );\n    }\n  }\n\n  private async checkIfFileExists(filename): Promise<boolean> {\n    try {\n      await this.httpClient.get(filename).toPromise();\n      return true;\n    } catch (e) {\n      if (e.status === 200) {\n        return true;\n      }\n      return false;\n    }\n  }\n}\n","import { User } from \"../../user/user\";\nimport { EntityMapperService } from \"../../entity/entity-mapper.service\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { SessionService } from \"../../session/session-service/session.service\";\n\n/**\n * Display all available users.\n */\n@Component({\n  selector: \"app-user-list\",\n  templateUrl: \"./user-list.component.html\",\n  styleUrls: [\"./user-list.component.scss\"],\n})\nexport class UserListComponent implements OnInit {\n  /** displayed columns for the list table in the template */\n  displayedColumns = [\"id\", \"name\", \"admin\", \"details\"];\n  /** datasource for the list table in the template */\n  dataSource = new MatTableDataSource<User>();\n\n  /** additional technical details of a user mapped to the user id as key */\n  debugDetails = new Map<string, string>();\n\n  constructor(\n    private entityMapperService: EntityMapperService,\n    private sessionService: SessionService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadData();\n  }\n\n  private async loadData() {\n    this.dataSource.data = await this.entityMapperService.loadType<User>(User);\n    this.dataSource.data.forEach((user) =>\n      this.debugDetails.set(user.getId(), JSON.stringify(user))\n    );\n  }\n\n  /**\n   * Change the admin role of the given user and save the entity.\n   *\n   * This requires the currently logged in user to be admin.\n   *\n   * @param user The user to be updated\n   * @param admin Whether to assign or remove admin role to the given user\n   */\n  async makeAdmin(user: User, admin: boolean) {\n    if (!this.sessionService.getCurrentUser().isAdmin()) {\n      this.loadData();\n      return;\n    }\n    if (this.sessionService.getCurrentUser().getId() === user.getId()) {\n      // do not change own user to avoid removing your own admin rights by accident\n      this.loadData();\n      return;\n    }\n\n    user.setAdmin(admin);\n    await this.entityMapperService.save<User>(user);\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"user-table mat-elevation-z8\">\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> ID </th>\n    <td mat-cell *matCellDef=\"let user\"> {{user.getId()}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Username </th>\n    <td mat-cell *matCellDef=\"let user\"> {{user.name}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"admin\">\n    <th mat-header-cell *matHeaderCellDef> Admin </th>\n    <td mat-cell *matCellDef=\"let user\">\n      <mat-checkbox [checked]='user.isAdmin()' (change)='makeAdmin(user, $event.checked)'></mat-checkbox>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"details\">\n    <th mat-header-cell *matHeaderCellDef> Details </th>\n    <td mat-cell *matCellDef=\"let user\">\n      <mat-icon fontIcon='fa-info-circle' [matTooltip]='debugDetails.get(user.getId())'></mat-icon>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let user; columns: displayedColumns;\"></tr>\n</table>\n","/**\n * Different settings how to display an Alert.\n */\nexport enum AlertDisplay {\n  /** Never displayed */\n  NONE,\n\n  /** Disappears automatically after a certain amount of time */\n  TEMPORARY,\n\n  /** Remains visible until the user interacts with the element */\n  PERSISTENT,\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\nimport { Alert } from \"./alert\";\nimport { AlertComponent } from \"./alerts/alert.component\";\nimport { LoggingService } from \"../logging/logging.service\";\nimport { AlertDisplay } from \"./alert-display\";\n\n/**\n * Display alerts to the user as a hovering message at the bottom of the view.\n * (Angular Material \"SnackBar\")\n *\n * Inject this service in your classes to easily trigger alerts in the app consistent style.\n */\n@Injectable()\nexport class AlertService {\n  /** All alerts currently to be displayed */\n  alerts: Alert[] = [];\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private loggingService: LoggingService\n  ) {}\n\n  /**\n   * Display the given alert.\n   * @param alert The alert instance to be displayed\n   */\n  addAlert(alert: Alert) {\n    this.alerts.push(alert);\n    this.displayAlert(alert);\n    this.logToConsole(alert);\n  }\n\n  private displayAlert(alert: Alert) {\n    const snackConfig = {\n      data: alert,\n      duration: 10000,\n      panelClass: \"alerts-snackbar\",\n    };\n\n    switch (alert.display) {\n      case AlertDisplay.NONE:\n        return;\n      case AlertDisplay.TEMPORARY:\n        snackConfig.duration = 5000;\n        break;\n      case AlertDisplay.PERSISTENT:\n        snackConfig.duration = 3600000;\n        break;\n    }\n\n    alert.notificationRef = this.snackBar.openFromComponent(\n      AlertComponent,\n      snackConfig\n    );\n  }\n\n  private logToConsole(alert: Alert) {\n    switch (alert.type) {\n      case Alert.WARNING:\n      case Alert.DANGER:\n        this.loggingService.warn(alert.message);\n        break;\n      case Alert.INFO:\n        this.loggingService.info(alert.message);\n        break;\n      case Alert.DEBUG:\n        this.loggingService.debug(alert.message);\n        break;\n    }\n  }\n\n  /**\n   * Remove an existing alert so that it is no longer displayed.\n   * @param alert The alert to be removed\n   */\n  removeAlert(alert: Alert) {\n    const index = this.alerts.indexOf(alert, 0);\n    if (index > -1) {\n      this.alerts.splice(index, 1);\n    }\n  }\n\n  /**\n   * Display an alert message of \"Info\" level, that will automatically dismiss itself after a timeout.\n   * @param message The text to be displayed\n   * @param display Optional override of the display style (e.g. whether the alert has to be actively dismissed by the user)\n   */\n  public addInfo(\n    message: string,\n    display: AlertDisplay = AlertDisplay.TEMPORARY\n  ) {\n    this.addAlert(new Alert(message, Alert.INFO, display));\n  }\n\n  /**\n   * Display an alert message of \"Warning\" level, that will have to be actively dismissed by the user.\n   * @param message The text to be displayed\n   * @param display Optional override of the display style (e.g. whether the alert has to be actively dismissed by the user)\n   */\n  public addWarning(\n    message: string,\n    display: AlertDisplay = AlertDisplay.PERSISTENT\n  ) {\n    this.addAlert(new Alert(message, Alert.WARNING, display));\n  }\n\n  /**\n   * Display an alert message of \"Danger\" level, that is highlighted and will have to be actively dismissed by the user.\n   * @param message The text to be displayed\n   * @param display Optional override of the display style (e.g. whether the alert has to be actively dismissed by the user)\n   */\n  public addDanger(\n    message: string,\n    display: AlertDisplay = AlertDisplay.PERSISTENT\n  ) {\n    this.addAlert(new Alert(message, Alert.DANGER, display));\n  }\n\n  /**\n   * Display an alert message of \"Debug\" level, that will not be displayed to the user.\n   * @param message The text to be displayed\n   * @param display Optional override of the display style (e.g. whether the alert has to be actively dismissed by the user)\n   */\n  public addDebug(message: string, display: AlertDisplay = AlertDisplay.NONE) {\n    this.addAlert(new Alert(message, Alert.DEBUG, display));\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { MatSnackBarRef } from \"@angular/material/snack-bar\";\nimport { AlertComponent } from \"./alerts/alert.component\";\nimport { AlertDisplay } from \"./alert-display\";\n\n/**\n * An Alert message to be displayed to the user through the {@link AlertService}.\n */\nexport class Alert {\n  /** Info messages provide feedback or information to the user without any required action */\n  static INFO = \"info\";\n  /** Warning messages provide feedback about unexpected or potentially unintended events */\n  static WARNING = \"warning\";\n  /** Danger messages inform about errors or critical conditions that the user should not overlook */\n  static DANGER = \"danger\";\n  /** Debug messages are not relevant to the normal user and only needed for developers troubleshooting errors */\n  static DEBUG = \"debug\";\n\n  /** reference to the ui displaying the message */\n  public notificationRef: MatSnackBarRef<AlertComponent>;\n\n  /**\n   * Create a container of a new Alert message.\n   * @param message The text of the message\n   * @param type The type of the message\n   * @param display The display style (e.g. whether the alert has to be actively dismissed by the user)\n   */\n  constructor(\n    public message: string,\n    public type: string,\n    public display: AlertDisplay\n  ) {}\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { AlertComponent } from \"./alerts/alert.component\";\nimport { AlertService } from \"./alert.service\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\n\n/**\n * Show alert message to the user informing about events or errors.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n  declarations: [AlertComponent],\n  exports: [AlertComponent],\n  providers: [AlertService],\n})\nexport class AlertsModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Inject } from \"@angular/core\";\n\nimport { Alert } from \"../alert\";\nimport { MAT_SNACK_BAR_DATA } from \"@angular/material/snack-bar\";\n\n/**\n * Display an {@link Alert} with basic formatting and UI controls.\n */\n@Component({\n  templateUrl: \"./alert.component.html\",\n  styleUrls: [\"./alert.component.scss\"],\n})\nexport class AlertComponent {\n  /** the displayed alert */\n  alert: Alert;\n\n  /**\n   * This component is created through MatSnackBar which provides the required data during creation.\n   * @param data The alert instance to be displayed\n   */\n  constructor(@Inject(MAT_SNACK_BAR_DATA) private data: any) {\n    this.alert = data;\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div class=\"ndb-alert ndb-alert-{{alert.type}}\">\n  <button mat-icon-button (click)=\"alert.notificationRef.dismiss()\" class=\"ndb-alert-dismiss\">\n    <mat-icon class=\"ndb-alert-dismiss-icon\" fontIcon=\"fa-window-close-o\"></mat-icon>\n  </button>\n  <p>{{ alert.message }}</p>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { Angulartics2Piwik } from \"angulartics2/piwik\";\nimport { environment } from \"../../../environments/environment\";\n\nconst md5 = require(\"md5\");\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AnalyticsService {\n  static angulartics2Piwik: Angulartics2Piwik;\n\n  static eventTrack(\n    action: string,\n    properties: {\n      category: string;\n      label: string;\n      value: number;\n    } = {\n      category: \"no_category\",\n      label: \"no_label\",\n      value: -1,\n    }\n  ): void {\n    AnalyticsService.angulartics2Piwik.eventTrack(action, properties);\n  }\n\n  static setUser(username: string): void {\n    AnalyticsService.angulartics2Piwik.setUsername(\n      AnalyticsService.getUserHash(username)\n    );\n  }\n\n  static setVersion(): void {\n    AnalyticsService.angulartics2Piwik.setUserProperties({\n      dimension1: \"ndb-core@\" + environment.appVersion,\n    });\n  }\n\n  private static getUserHash(username: string) {\n    return md5(username);\n  }\n\n  constructor(private angulartics2Piwik: Angulartics2Piwik) {\n    AnalyticsService.angulartics2Piwik = angulartics2Piwik;\n  }\n\n  init(): void {\n    AnalyticsService.angulartics2Piwik.startTracking();\n    AnalyticsService.setVersion();\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { APP_INITIALIZER, NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AppConfig } from \"./app-config\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n/**\n * Management of central configuration for the app that can a set by an administrator independent of code\n * in the assets/config.json file.\n *\n * Just import this module in your root module to ensure the AppConfig is properly initialized on startup.\n *\n * You can then use the static `AppConfig.settings` object (which exactly represents the contents of the config.json)\n * to access the configuration values without need for dependency injection of a service.\n */\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [],\n  providers: [\n    AppConfig,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeAppConfig,\n      deps: [AppConfig],\n      multi: true,\n    },\n  ],\n})\nexport class AppConfigModule {}\n\n/**\n * Factory method for APP_INITIALIZER to load essential things before any other modules.\n * This is required to ensure the AppConfig.settings are available before other code needs it.\n *\n * @param appConfig The AppConfig service (through dependency injection)\n */\nexport function initializeAppConfig(appConfig: AppConfig) {\n  return () => appConfig.load();\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { IAppConfig } from \"./app-config.model\";\nimport { HttpClient } from \"@angular/common/http\";\n\n/**\n * Central app configuration.\n *\n * The settings are defined in a json file and can therefore be changed for different deployments\n * without code changes.\n *\n * Simply use the static `AppConfig.settings` for easy access to the app's configuration.\n * You do _not_ have to inject the AppConfig service into your code in order to access the app settings.\n * AppConfig is an Angular service only because this is required for initially loading the remote settings into\n * the static AppConfig.settings object.\n *\n * @example\n * this.title = AppConfig.settings.site_name;\n * // just directly use AppConfig and let your IDE add an \"import\" statement to the file\n * // no need for dependency injection here\n */\n@Injectable()\nexport class AppConfig {\n  /** settings for the app */\n  static settings: IAppConfig;\n\n  /** file location of the config file to be created by the administrator */\n  private readonly CONFIG_FILE = \"assets/config.json\";\n\n  /** fallback file location of the config that is part of the project already if the \"real\" config file isn't found */\n  private readonly DEFAULT_CONFIG_FILE = \"assets/config.default.json\";\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Load the config file into the `AppConfig.settings` so they can be used synchronously anywhere in the code after that.\n   *\n   * If the config file does not exist, uses the default config as a fallback.\n   */\n  load() {\n    return this.loadAppConfigJson(this.CONFIG_FILE).then(\n      (result) => result,\n      () => this.loadAppConfigJson(this.DEFAULT_CONFIG_FILE)\n    );\n  }\n\n  /**\n   * Load the given file and set it as AppConfig.settings.\n   *\n   * This requires a HTTP request because the \"assets\" folder including the config.json is on our server\n   * while this javascript code is executed in the users browser.\n   *\n   * @param jsonFileLocation The file path of the json file to be loaded as config\n   */\n  private loadAppConfigJson(jsonFileLocation: string) {\n    return new Promise<void>((resolve, reject) => {\n      this.http\n        .get<IAppConfig>(jsonFileLocation)\n        .toPromise()\n        .then((result) => {\n          AppConfig.settings = result;\n          resolve();\n        })\n        .catch((response: any) => {\n          reject(\n            `Could not load file '${jsonFileLocation}': ${JSON.stringify(\n              response\n            )}`\n          );\n        });\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ConfigService } from \"./config.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  providers: [ConfigService],\n})\nexport class ConfigModule {}\n","import { Injectable } from \"@angular/core\";\nimport config from \"./config-fix.json\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ConfigService {\n  static readonly PREFIX_VIEW_CONFIG = \"view:\";\n\n  constructor() {}\n\n  public async loadConfig() {\n    return await new Promise((resolve) => {\n      setTimeout(() => {\n        console.log(\"config loaded\"), resolve();\n      }, 300);\n    });\n  }\n\n  public getConfig<T>(id: string): T {\n    console.log(\"config\", config);\n    return config[id];\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ConfirmationDialogComponent } from \"./confirmation-dialog/confirmation-dialog.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { ConfirmationDialogService } from \"./confirmation-dialog.service\";\n\n/**\n * A helper utility module helping to display configurable confirmation dialog boxes\n * without having to create a custom template every time.\n *\n * Use the {@link ConfirmationDialogService} for this.\n */\n@NgModule({\n  imports: [CommonModule, MatDialogModule, MatButtonModule],\n  declarations: [ConfirmationDialogComponent],\n  providers: [ConfirmationDialogService],\n})\nexport class ConfirmationDialogModule {}\n","import { Injectable } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { ConfirmationDialogComponent } from \"./confirmation-dialog/confirmation-dialog.component\";\n\n/**\n * Inject this service instead of MatDialog if you need a simple, configurable confirmation dialog box\n * to be displayed to the user.\n *\n * Import the {@link ConfirmationDialogModule} in your root module to provide this service.\n *\n * @example\n const dialogRef = this.confirmationDialog.openDialog('Delete?', 'Are you sure you want to delete this record?');\n dialogRef.afterClosed().subscribe(confirmed => {\n    if (confirmed) {\n       // delete\n    }\n });\n */\n@Injectable()\nexport class ConfirmationDialogService {\n  constructor(private dialog: MatDialog) {}\n\n  /**\n   * Open a dialog with the given configuration.\n   * @param title The title displayed for the dialog\n   * @param text The text displayed for the dialog\n   * @param yesNoButtons Whether two buttons (yes/no) are shown to the user. Otherwise only an \"Ok\" button will be shown.\n   * @return The reference to the opened MatDialog.\n   *          You can use this to control the dialog or subscribe to its result:\n   *          (`ref.afterClosed().subscribe(confirmed => myAction(confirmed));`\n   */\n  openDialog(\n    title: string,\n    text: string,\n    yesNoButtons = true\n  ): MatDialogRef<ConfirmationDialogComponent> {\n    return this.dialog.open(ConfirmationDialogComponent, {\n      data: { title: title, text: text, yesNo: yesNoButtons },\n    });\n  }\n}\n","import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n/**\n * A configurable confirmation dialog box\n * used by the {@link ConfirmationDialogService}.\n */\n@Component({\n  selector: \"app-confirmation-dialog\",\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.scss\"],\n})\nexport class ConfirmationDialogComponent {\n  /**\n   * This component is used as a template for MatDialog, created with the required dependencies through that service.\n   * @param dialogRef The reference to the dialog this component is displayed within\n   * @param data The configuration defining what text and buttons will be displayed\n   */\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogConfig\n  ) {}\n}\n\n/**\n * Options to configure the {@link ConfirmationDialogComponent}.\n */\nexport interface ConfirmationDialogConfig {\n  /** title of the dialog box */\n  title: string;\n\n  /** description text in the dialog box */\n  text: string;\n\n  /** Whether to display an option of yes/no buttons or just a single \"ok\" button */\n  yesNo: boolean;\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <p>{{data.text}}</p>\n</div>\n\n<div mat-dialog-actions *ngIf='data.yesNo'>\n  <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial>Yes</button>\n  <button mat-stroked-button [mat-dialog-close]=\"false\">No</button>\n</div>\n<div mat-dialog-actions *ngIf='!data.yesNo'>\n  <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial>OK</button>\n</div>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Database } from \"./database\";\nimport { SessionService } from \"../session/session-service/session.service\";\n\n/**\n * Provider of Database service for the Angular dependency injection.\n *\n * This depends on the SessionService that is set up\n * (which in turn considers the app-config.json to switch between an in-memory database and a synced persistent database).\n */\nexport let databaseServiceProvider = {\n  provide: Database,\n  useFactory: function (_sessionService: SessionService) {\n    return _sessionService.getDatabase();\n  },\n  deps: [SessionService],\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * An implementation of this abstract class provides functions for direct database access.\n * This interface is an extension of the [PouchDB API](https://pouchdb.com/api.html).\n *\n * A `Database` instance is injected into the app through the {@link databaseServiceProvider}\n * with the help of the {@link SessionService}.\n */\nexport abstract class Database {\n  /**\n   * Load a single document by id from the database.\n   * @param id The primary key of the document to be loaded\n   * @param options Optional options for the database engine (PouchDB)\n   */\n  abstract get(id: string, options?: any): Promise<any>;\n\n  /**\n   * Load all documents (matching the given PouchDB options) from the database.\n   *\n   * Normally you should rather use \"getAll()\" or another well typed method of this class\n   * instead of passing PouchDB specific options here\n   * because that will make your code tightly coupled with PouchDB rather than any other database provider.\n   *\n   * @param options PouchDB options object as in the normal PouchDB library\n   */\n  abstract allDocs(options?: any): Promise<any>;\n\n  /**\n   * Save a document to the database.\n   * @param object The document to be saved\n   * @param forceUpdate (Optional) Whether conflicts should be ignored and an existing conflicting document forcefully overwritten.\n   */\n  abstract put(object: any, forceUpdate?: boolean): Promise<any>;\n\n  /**\n   * Delete a document from the database\n   * @param object The document to be deleted (usually this object must at least contain the _id and _rev)\n   */\n  abstract remove(object: any): Promise<any>;\n\n  /**\n   * Query data from the database based on a more complex, indexed request.\n   *\n   * This is directly calling the PouchDB implementation of this function.\n   * Also see the documentation there: {@link https://pouchdb.com/api.html#query_database}\n   *\n   * @param fun The name of a previously saved database index\n   * @param options Additional options for the query, like a `key`. See the PouchDB docs for details.\n   */\n  abstract query(fun: any, options?: any): Promise<any>;\n\n  /**\n   * Create a database index to `query()` certain data more efficiently in the future.\n   *\n   * Also see the PouchDB documentation regarding indices and queries: {@link https://pouchdb.com/api.html#query_database}\n   *\n   * @param designDoc The PouchDB style design document for the map/reduce query\n   */\n  abstract saveDatabaseIndex(designDoc: any): Promise<any>;\n\n  /**\n   * Load all documents (with the given prefix) from the database.\n   * @param prefix The string prefix of document ids that should be retrieved\n   */\n  getAll(prefix = \"\"): Promise<Array<any>> {\n    return this.allDocs({\n      include_docs: true,\n      startkey: prefix,\n      endkey: prefix + \"\\ufff0\",\n    });\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Database } from \"./database\";\nimport { Note } from \"../../child-dev-project/notes/model/note\";\nimport { AttendanceMonth } from \"../../child-dev-project/attendance/model/attendance-month\";\nimport { ChildSchoolRelation } from \"../../child-dev-project/children/model/childSchoolRelation\";\n\n/**\n * In-Memory database implementation that works as a drop-in replacement of {@link PouchDatabase}\n *\n * The MockDatabase internally stores all documents in a variable and tries to simulate functionality\n * as similar as possible to the PouchDatabase.\n */\nexport class MockDatabase extends Database {\n  private data = [];\n\n  /**\n   * Create an in-memory database manager.\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * see {@link Database}\n   * @param id The primary id of the document\n   */\n  get(id: string) {\n    if (!this.exists(id)) {\n      return Promise.reject({ status: 404, message: \"object not found\" });\n    }\n\n    const index = this.findIndex(id);\n    const result = this.data[index];\n\n    return Promise.resolve(result);\n  }\n\n  /**\n   * see {@link Database}\n   * @param options Only 'startkey' is considered by the MockDatabase implementation\n   */\n  allDocs(options?: any) {\n    let result = this.data;\n\n    // default options provided through getAll(prefix): {include_docs: true, startkey: prefix, endkey: prefix + '\\ufff0'}\n    // MockDatabase ignores endkey and only implements filtering based on startkey/prefix\n    if (options && options.hasOwnProperty(\"startkey\")) {\n      result = this.data.filter((o) => o._id.startsWith(options.startkey));\n    }\n\n    return Promise.resolve(result);\n  }\n\n  /**\n   * see {@link Database}\n   * @param object The document to be saved\n   * @param forceUpdate Whether a conflicting document will be forcefully overwritten\n   */\n  async put(object: any, forceUpdate?: boolean) {\n    if (this.exists(object._id)) {\n      return this.overwriteExisting(object);\n    } else {\n      object._rev = \"x\";\n      this.data.push(object);\n      return Promise.resolve(this.generateWriteResponse(object));\n    }\n  }\n\n  private async overwriteExisting(object: any): Promise<any> {\n    const existingObject = await this.get(object._id);\n\n    if (object._rev !== existingObject._rev) {\n      return Promise.reject({ message: \"_id already exists\" });\n    }\n\n    const index = this.data.findIndex((e) => e._id === object._id);\n    if (index > -1) {\n      object._rev = object._rev + \"x\";\n      this.data[index] = object;\n      return Promise.resolve(this.generateWriteResponse(object));\n    } else {\n      return Promise.reject({ message: \"failed to overwrite existing object\" });\n    }\n  }\n\n  private generateWriteResponse(writtenObject: any) {\n    return {\n      ok: true,\n      id: writtenObject._id,\n      rev: writtenObject._rev,\n    };\n  }\n\n  /**\n   * see {@link Database}\n   * @param object The document to be deleted\n   */\n  remove(object: any) {\n    if (!this.exists(object._id)) {\n      return Promise.reject({ status: 404, message: \"object not found\" });\n    }\n\n    const index = this.findIndex(object._id);\n    if (index > -1) {\n      this.data.splice(index, 1);\n    }\n\n    return Promise.resolve(true);\n  }\n\n  private exists(id: string) {\n    return this.findIndex(id) > -1;\n  }\n\n  private findIndex(id: string) {\n    return this.data.findIndex((o) => o._id === id);\n  }\n\n  /**\n   * A \"simulation\" of queries as the PouchDatabase implementation would handle them.\n   *\n   * This has hard-coded response logic for some individual indices that are used in the app\n   * and at the moment cannot handle generic creating and executing real queries.\n   * You can add a mock implementation here for your specific query/index if necessary.\n   *\n   * @param fun The name of the previously created index\n   * @param options Additional options for the query\n   */\n  async query(fun: any, options?: any): Promise<any> {\n    // TODO: implement generic mock query function\n    /* SAMPLE INPUT:\n      query('notes_index/by_child', {key: childId, include_docs: true});\n      query('avg_attendance_index/three_months', {reduce: true, group: true});\n    */\n\n    // mock specific indices\n    let filterFun;\n    let reducerFun;\n    switch (fun) {\n      case \"notes_index/by_child\":\n        filterFun = (e) =>\n          e._id.startsWith(Note.ENTITY_TYPE) &&\n          e.children.includes(options.key);\n        break;\n      case \"attendances_index/by_child\":\n        filterFun = (e) =>\n          e._id.startsWith(AttendanceMonth.ENTITY_TYPE) &&\n          e.student === options.key;\n        break;\n      case \"attendances_index/by_month\":\n        filterFun = (e) => {\n          if (!e._id.startsWith(AttendanceMonth.ENTITY_TYPE)) {\n            return false;\n          }\n          e.month = new Date(e.month);\n          return (\n            e.month.getFullYear().toString() +\n              \"-\" +\n              (e.month.getMonth() + 1).toString() ===\n            options.key\n          );\n        };\n        break;\n      case \"avg_attendance_index/three_months\":\n        filterFun = (e) =>\n          e._id.startsWith(AttendanceMonth.ENTITY_TYPE) &&\n          this.isWithinLastMonths(e.month, new Date(), 3);\n        reducerFun = this.getStatsReduceFun(\n          (e: AttendanceMonth) => e.student,\n          (e: AttendanceMonth) =>\n            e.daysAttended / (e.daysWorking - e.daysExcused)\n        );\n        break;\n      case \"avg_attendance_index/last_month\":\n        filterFun = (e) =>\n          e._id.startsWith(AttendanceMonth.ENTITY_TYPE) &&\n          this.isWithinLastMonths(e.month, new Date(), 1);\n        reducerFun = this.getStatsReduceFun(\n          (e: AttendanceMonth) => e.student,\n          (e: AttendanceMonth) =>\n            e.daysAttended / (e.daysWorking - e.daysExcused)\n        );\n        break;\n      case \"childSchoolRelations_index/by_child\":\n        filterFun = (e) =>\n          e._id.startsWith(ChildSchoolRelation.ENTITY_TYPE) &&\n          e.childId === options.key;\n        break;\n      case \"childSchoolRelations_index/by_school\":\n        filterFun = (e) =>\n          e._id.startsWith(ChildSchoolRelation.ENTITY_TYPE) &&\n          ((e.start <= new Date().setHours(0, 0, 0, 0) && !e.end) ||\n            e.end >= new Date().setHours(0, 0, 0, 0)) &&\n          e.schoolId === options.key;\n        break;\n      case \"search_index/by_name\":\n        filterFun = (e) => {\n          return (\n            e.hasOwnProperty(\"searchIndices\") &&\n            e.searchIndices.some((word) =>\n              word.toString().toLowerCase().includes(options.startkey)\n            )\n          );\n        };\n        break;\n      case \"childSchoolRelations_index/by_date\":\n        return this.filterForLatestRelationOfChild(\n          options.endkey,\n          options.limit\n        );\n    }\n    if (filterFun !== undefined) {\n      if (reducerFun !== undefined) {\n        const allData = await this.getAll();\n        const filteredResults = allData.filter(filterFun);\n        const reducedResults = filteredResults.reduce(reducerFun, []);\n        return { rows: reducedResults };\n      } else {\n        const allData = await this.getAll();\n        return {\n          rows: allData.filter(filterFun).map((e) => {\n            return { id: e._id, doc: e };\n          }),\n        };\n      }\n    }\n\n    console.warn('MockDatabase does not implement \"query()\"');\n    return { rows: [] };\n  }\n\n  private async filterForLatestRelationOfChild(\n    childKey: string,\n    limit: number\n  ): Promise<any> {\n    return new Promise((resolve) => {\n      this.getAll().then((all) => {\n        const relations = all.filter((e) =>\n          e._id.startsWith(ChildSchoolRelation.ENTITY_TYPE)\n        );\n        const sorted = relations.sort((a, b) => {\n          const aValue =\n            a.childId + \"_\" + this.zeroPad(new Date(a.start).valueOf());\n          const bValue =\n            b.childId + \"_\" + this.zeroPad(new Date(b.start).valueOf());\n          return aValue < bValue ? 1 : aValue === bValue ? 0 : -1;\n        });\n        const filtered: ChildSchoolRelation[] = sorted.filter(\n          (doc) => doc.childId + \"_\" === childKey\n        );\n        let results: { doc: ChildSchoolRelation }[] = filtered.map(\n          (relation) => {\n            return { doc: relation };\n          }\n        );\n        if (limit) {\n          results = results.slice(0, limit);\n        }\n        resolve({ rows: results });\n      });\n    });\n  }\n\n  /**\n   * This function is useful when comparing numbers on string level.\n   * For example: 123 < 1111 but \"123\" > \"1111\"\n   * That is why its being transformed to \"0123\" and \"1111\" so \"0123\" < \"1111\"\n   * @param str the string that should be padded with zeros\n   * @param length the length to which the string should be padded\n   * @return string of the padded input\n   */\n  private zeroPad(str: string | number, length: number = 14): string {\n    // with ECMAScript 2017 you can do a one-liner: 'return str.toString().padStart(length, '0');'\n    let res = str.toString();\n    while (res.length < length) {\n      res = \"0\" + res;\n    }\n    return res;\n  }\n\n  private isWithinLastMonths(\n    date: Date,\n    now: Date,\n    numberOfMonths: number\n  ): boolean {\n    if (!date) {\n      return false;\n    }\n    date = new Date(date);\n\n    let months;\n    months = (now.getFullYear() - date.getFullYear()) * 12;\n    months -= date.getMonth();\n    months += now.getMonth();\n    if (months < 0) {\n      return false;\n    }\n    return months <= numberOfMonths;\n  }\n\n  private getStatsReduceFun(\n    keyFun: (any) => string,\n    valueFun: (any) => number\n  ) {\n    return (acc, value) => {\n      const stats = {\n        key: keyFun(value),\n        value: { count: 1, sum: valueFun(value) },\n      };\n      const existing = acc.filter((x) => x.key === keyFun(value));\n      if (existing.length > 0) {\n        const v = existing[0].value;\n        v.count++;\n        v.sum = v.sum + stats.value.sum;\n      } else {\n        acc.push(stats);\n      }\n\n      return acc;\n    };\n  }\n\n  /**\n   * Currently not implemented for MockDatabase!\n   *\n   * Check (and extend) the `query` method for hard-coded mocks of some specific queries.\n   *\n   * @param designDoc\n   */\n  saveDatabaseIndex(designDoc) {\n    // TODO: implement mock query\n    /* SAMPLE INPUT:\n    const designDoc = {\n      _id: '_design/attendance_index',\n      views: {\n        by_name: {\n          map: (doc) => { emit(doc.child); }\n        },\n        by_month: {\n          map: (doc) => { emit(doc.month); }\n        }\n      }\n    };\n     */\n\n    // tslint:disable-next-line:no-console\n    console.debug('MockDatabase does not implement \"saveDatabaseIndex()\"');\n    return Promise.resolve({});\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Database } from \"./database\";\nimport { AlertService } from \"../alerts/alert.service\";\nimport { AlertDisplay } from \"../alerts/alert-display\";\nimport moment from \"moment\";\nimport { LoggingService } from \"../logging/logging.service\";\n\n/**\n * Wrapper for a PouchDB instance to decouple the code from\n * that external library.\n *\n * Additional convenience functions on top of the PouchDB API\n * should be implemented in the abstract {@link Database}.\n */\nexport class PouchDatabase extends Database {\n  /**\n   * Create a PouchDB database manager.\n   * @param _pouchDB An (initialized) PouchDB database instance from the PouchDB library.\n   * @param alertService The AlertService instance of the app to be able to display problems to users.\n   * @param loggingService The LoggingService instance of the app to log and report problems.\n   */\n  constructor(\n    private _pouchDB: any,\n    private alertService: AlertService,\n    private loggingService: LoggingService\n  ) {\n    super();\n  }\n\n  /**\n   * Load a single document by id from the database.\n   * (see {@link Database})\n   * @param id The primary key of the document to be loaded\n   * @param options Optional PouchDB options for the request\n   * @param returnUndefined (Optional) return undefined instead of throwing error if doc is not found in database\n   */\n  get(id: string, options: any = {}, returnUndefined?: boolean): Promise<any> {\n    return this._pouchDB.get(id, options).catch((err) => {\n      if (err.status === 404) {\n        this.loggingService.debug(\"Doc not found in database: \" + id);\n        if (returnUndefined) {\n          return undefined;\n        } else {\n          throw err;\n        }\n      } else {\n        this.notifyError(err);\n        throw err;\n      }\n    });\n  }\n\n  /**\n   * Load all documents (matching the given PouchDB options) from the database.\n   * (see {@link Database})\n   *\n   * Normally you should rather use \"getAll()\" or another well typed method of this class\n   * instead of passing PouchDB specific options here\n   * because that will make your code tightly coupled with PouchDB rather than any other database provider.\n   *\n   * @param options PouchDB options object as in the normal PouchDB library\n   */\n  allDocs(options?: any) {\n    return this._pouchDB.allDocs(options).then((result) => {\n      const resultArray = [];\n      for (const row of result.rows) {\n        resultArray.push(row.doc);\n      }\n      return resultArray;\n    });\n  }\n\n  /**\n   * Save a document to the database.\n   * (see {@link Database})\n   *\n   * @param object The document to be saved\n   * @param forceOverwrite (Optional) Whether conflicts should be ignored and an existing conflicting document forcefully overwritten.\n   */\n  put(object: any, forceOverwrite?: boolean) {\n    const options: any = {};\n    // if (forceOverwrite) {\n    //   options.force = true;\n    // }\n\n    return this._pouchDB.put(object, options).catch((err) => {\n      if (err.status === 409) {\n        this.resolveConflict(object, forceOverwrite, err);\n      } else {\n        this.notifyError(err);\n        throw err;\n      }\n    });\n  }\n\n  /**\n   * Delete a document from the database\n   * (see {@link Database})\n   *\n   * @param object The document to be deleted (usually this object must at least contain the _id and _rev)\n   */\n  remove(object: any) {\n    return this._pouchDB.remove(object).catch((err) => {\n      this.notifyError(err);\n      throw err;\n    });\n  }\n\n  /**\n   * Query data from the database based on a more complex, indexed request.\n   * (see {@link Database})\n   *\n   * This is directly calling the PouchDB implementation of this function.\n   * Also see the documentation there: {@link https://pouchdb.com/api.html#query_database}\n   *\n   * @param fun The name of a previously saved database index\n   * @param options Additional options for the query, like a `key`. See the PouchDB docs for details.\n   */\n  query(\n    fun: string | ((doc: any, emit: any) => void),\n    options: any\n  ): Promise<any> {\n    return this._pouchDB.query(fun, options);\n  }\n\n  /**\n   * Create a database index to `query()` certain data more efficiently in the future.\n   * (see {@link Database})\n   *\n   * Also see the PouchDB documentation regarding indices and queries: {@link https://pouchdb.com/api.html#query_database}\n   *\n   * @param designDoc The PouchDB style design document for the map/reduce query\n   */\n  async saveDatabaseIndex(designDoc: any): Promise<any> {\n    const existingDesignDoc = await this.get(designDoc._id, {}, true);\n    if (!existingDesignDoc) {\n      this.loggingService.debug(\"creating new database index\");\n    } else if (\n      JSON.stringify(existingDesignDoc.views) !==\n      JSON.stringify(designDoc.views)\n    ) {\n      this.loggingService.debug(\"replacing existing database index\");\n      designDoc._rev = existingDesignDoc._rev;\n    } else {\n      // already up to date, nothing more to do\n      return;\n    }\n\n    await this.put(designDoc);\n\n    await this.prebuildViewsOfDesignDoc(designDoc);\n  }\n\n  private async prebuildViewsOfDesignDoc(designDoc: any) {\n    for (const viewName of Object.keys(designDoc.views)) {\n      try {\n        const queryName =\n          designDoc._id.replace(/_design\\//, \"\") + \"/\" + viewName;\n        console.log(\"start indexing \" + queryName);\n        const startTime = moment();\n        await this.query(queryName, { key: \"1\" });\n        const indexingTime = moment().diff(startTime, \"milliseconds\");\n        console.log(\"done indexing \" + queryName, indexingTime);\n        if (indexingTime > 1000) {\n          this.loggingService.warn({\n            action: \"Indexing for query\",\n            query: queryName,\n            duration: indexingTime,\n          });\n        }\n      } catch (err) {\n        this.alertService.addWarning(\n          \"failed to trigger query for new index: \",\n          err\n        );\n      }\n    }\n  }\n\n  private notifyError(err) {\n    this.alertService.addWarning(\n      \"PouchDB Error \" + err.status + \": \" + JSON.stringify(err),\n      AlertDisplay.NONE\n    );\n  }\n\n  /**\n   * Attempt to intelligently resolve conflicting document versions automatically.\n   * @param newObject\n   * @param overwriteChanges\n   * @param existingError\n   */\n  private resolveConflict(\n    newObject: any,\n    overwriteChanges: boolean,\n    existingError: any\n  ) {\n    this.get(newObject._id).then((existingObject) => {\n      const resolvedObject = this.mergeObjects(existingObject, newObject);\n      if (resolvedObject) {\n        this.alertService.addDebug(\n          \"resolved document conflict automatically (\" +\n            resolvedObject._id +\n            \")\"\n        );\n        this.put(resolvedObject);\n      } else if (overwriteChanges) {\n        this.alertService.addDebug(\n          \"overwriting conflicting document version (\" + newObject._id + \")\"\n        );\n        newObject._rev = existingObject._rev;\n        this.put(newObject);\n      } else {\n        existingError.message = existingError.message + \" (unable to resolve)\";\n        throw existingError;\n      }\n    });\n  }\n\n  private mergeObjects(existingObject: any, newObject: any) {\n    // TODO: implement automatic merging of conflicting entity versions\n    return undefined;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { DemoDataService } from \"./demo-data.service\";\nimport { LoggingService } from \"../logging/logging.service\";\n\n/**\n * Loading box during demo data generation.\n *\n * see {@link DemoDataModule}\n */\n@Component({\n  template:\n    \"<p>Generating sample data for this demo ...</p>\" +\n    '<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>',\n})\nexport class DemoDataGeneratingProgressDialogComponent implements OnInit {\n  /**\n   * Display a loading dialog while generating demo data from all register generators.\n   * @param dialog\n   */\n  static loadDemoDataWithLoadingDialog(dialog: MatDialog) {\n    dialog.open(DemoDataGeneratingProgressDialogComponent);\n  }\n\n  constructor(\n    private demoDataService: DemoDataService,\n    private dialogRef: MatDialogRef<DemoDataGeneratingProgressDialogComponent>,\n    private loggingService: LoggingService\n  ) {}\n\n  ngOnInit(): void {\n    this.dialogRef.disableClose = true;\n    this.dialogRef.afterOpened().subscribe(() => {\n      this.demoDataService\n        .publishDemoData()\n        .then(() => {\n          // don't use await this.demoDataService - dialogRef.close doesn't seem to work consistently in that case\n          this.dialogRef.close(true);\n        })\n        .catch((err) =>\n          this.loggingService.error({\n            title: \"error during demo data generation\",\n            details: err,\n          })\n        );\n    });\n  }\n}\n","import { Entity } from \"../entity/entity\";\n\n/**\n * Abstract base class for demo data generator services.\n *\n * For usage refer to the How-To Guides:\n * - [How to Generate Demo Data]{@link /additional-documentation/how-to-guides/generate-demo-data.html}\n */\nexport abstract class DemoDataGenerator<T extends Entity> {\n  /** internally used array of the generated entities */\n  protected _entities: T[];\n\n  /**\n   * generated demo entities\n   */\n  get entities() {\n    if (!this._entities) {\n      this._entities = this.generateEntities();\n    }\n    return this._entities;\n  }\n\n  /**\n   * Generate new demo entities.\n   */\n  protected abstract generateEntities(): T[];\n\n  /**\n   * Remove all previously generated entities.\n   */\n  reset() {\n    delete this._entities;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { DemoDataServiceConfig, DemoDataService } from \"./demo-data.service\";\nimport {\n  ClassProvider,\n  FactoryProvider,\n  ModuleWithProviders,\n  NgModule,\n  ValueProvider,\n} from \"@angular/core\";\nimport { DemoDataGeneratingProgressDialogComponent } from \"./demo-data-generating-progress-dialog.component\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\n\n/**\n * Generate realist mock entities for testing and demo purposes.\n *\n * Import this module in the root AppModule to automatically write demo data into the database on loading of the module.\n * You need to pass providers for {@link DemoDataGenerator} implementations to the `forRoot()` method to register them.\n *\n  ```\n  DemoDataModule.forRoot([\n     ...DemoChildGenerator.provider({count: 150}),\n     { provide: DemoUserGeneratorService, useClass: DemoUserGeneratorService }\n  ])\n  ```\n *\n * In addition to importing the `DemoDataModule` you need to call the {@link DemoDataService}'s `publishDemoData()` method\n * to actually start the data generation.\n * Use `DemoDataGeneratingProgressDialogComponent.loadDemoDataWithLoadingDialog(this.dialog);` passing a `MatDialog` service\n * to display a dialog box to the user and automatically handle the data generation.\n *\n * To implement your own demo data generator, refer to the How-To Guides:\n * - [How to Generate Demo Data]{@link /additional-documentation/how-to-guides/generate-demo-data.html}\n */\n@NgModule({\n  imports: [MatProgressBarModule, MatDialogModule],\n  declarations: [DemoDataGeneratingProgressDialogComponent],\n  exports: [DemoDataGeneratingProgressDialogComponent],\n})\nexport class DemoDataModule {\n  /**\n   * Get a provider for the module while also passing the DemoDataGenerator services to be registered with the module.\n   * @param demoDataGeneratorProviders An array of providers of DemoDataGenerator service implementations.\n   *        These generators will be registered and called when demo data generation is triggered.\n   */\n  static forRoot(\n    demoDataGeneratorProviders: (\n      | ValueProvider\n      | ClassProvider\n      | FactoryProvider\n    )[]\n  ): ModuleWithProviders<DemoDataModule> {\n    return {\n      ngModule: DemoDataModule,\n      providers: [\n        DemoDataService,\n        {\n          provide: DemoDataServiceConfig,\n          useValue: { dataGeneratorProviders: demoDataGeneratorProviders },\n        },\n        demoDataGeneratorProviders,\n      ],\n    };\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  ClassProvider,\n  FactoryProvider,\n  Injectable,\n  Injector,\n  ValueProvider,\n} from \"@angular/core\";\nimport { DemoDataGenerator } from \"./demo-data-generator\";\nimport { EntityMapperService } from \"../entity/entity-mapper.service\";\nimport { AlertService } from \"../alerts/alert.service\";\nimport { AlertDisplay } from \"../alerts/alert-display\";\n\n/**\n * General config object to pass all initially register DemoDataGenerators\n * with `DemoDataModule.forRoot()`.\n *\n * see docs at {@link DemoDataModule}\n */\nexport class DemoDataServiceConfig {\n  /**\n   * Providers for DemoDataGenerator service implementations to be registered for data generation.\n   *\n   * This may also include providers for services a DemoDataGenerator depends on.\n   */\n  dataGeneratorProviders: (\n    | ValueProvider\n    | ClassProvider\n    | FactoryProvider\n  )[] = [];\n}\n\n/**\n * The DemoDataService is the manager for all provided DemoDataGenerator implementations.\n * It serves as the central service to trigger the demo data generation into the database.\n *\n * To add more demo data generators, refer the documentation\n * [How to Generate Demo Data]{@link /additional-documentation/how-to-guides/generate-demo-data.html}\n */\n@Injectable()\nexport class DemoDataService {\n  /** All registered demo data generator services */\n  readonly dataGenerators: DemoDataGenerator<any>[] = [];\n\n  constructor(\n    private entityMapper: EntityMapperService,\n    private alertService: AlertService,\n    private injector: Injector,\n    private config: DemoDataServiceConfig\n  ) {\n    this.registerAllProvidedDemoDataGenerators();\n  }\n\n  private registerAllProvidedDemoDataGenerators() {\n    for (const provider of this.config.dataGeneratorProviders) {\n      const service = this.injector.get<any>(provider.provide);\n      if (service && service instanceof DemoDataGenerator) {\n        this.dataGenerators.push(service);\n      }\n    }\n  }\n\n  /**\n   * Trigger all registered DemoDataGenerator implementations to generate demo entities\n   * and add all the generated entities to the Database.\n   */\n  async publishDemoData() {\n    // completely generate all data (i.e. call every generator) before starting to save the data\n    // to allow generators to delete unwanted entities of other generators before they are saved\n    // (e.g. the DropoutChildGenerator should be able to delete Attendance records of the Child after its dropout date)\n    this.dataGenerators.forEach((generator) => generator.entities);\n\n    // save the generated data\n    for (const generator of this.dataGenerators) {\n      for (const entity of generator.entities) {\n        try {\n          await this.entityMapper.save(entity);\n        } catch (e) {\n          this.alertService.addWarning(e, AlertDisplay.NONE);\n        }\n      }\n    }\n  }\n}\n","import * as originalFaker_IND from \"faker/locale/en_IND\";\n\n/**\n * Extension of faker.js implementing additional data generation methods.\n */\nclass CustomFaker {\n  /**\n   * Merge the created CustomFaker's implementation with a given faker's standard methods.\n   * @param baseFaker A standard faker.js\n   */\n  constructor(\n    // @ts-ignore\n    private baseFaker: Faker.FakerStatic\n  ) {\n    // make baseFaker methods available from instances of this class\n    Object.assign(this, baseFaker);\n  }\n\n  /**\n   * Generate a date that works as a date of birth in the given age range.\n   * @param minAge The minimum age (today) of a person with the generated random birth date.\n   * @param maxAge The maximum age (today) of a person with the generated random birth date.\n   */\n  public dateOfBirth(minAge: number, maxAge: number): Date {\n    const currentYear = new Date().getFullYear();\n    const latest = new Date();\n    latest.setFullYear(currentYear - minAge);\n    const earliest = new Date();\n    earliest.setFullYear(currentYear - maxAge);\n    return this.baseFaker.date.between(earliest, latest);\n  }\n\n  /**\n   * Return the given date if it is defined and earlier than today's date\n   * otherwise return a Date representing today.\n   * @param date The date to be compared\n   */\n  getEarlierDateOrToday(date: Date): Date {\n    const today = new Date();\n\n    if (!date || date > today) {\n      return today;\n    } else {\n      return date;\n    }\n  }\n}\n\n/**\n * Typing for faker including extended functionality.\n */\nexport type Faker = typeof originalFaker_IND & CustomFaker;\n\noriginalFaker_IND.seed(1);\n\n/**\n * (Extended) faker module\n */\nexport const faker = new CustomFaker(originalFaker_IND) as Faker;\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatSortModule } from \"@angular/material/sort\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { EntitySubrecordComponent } from \"./entity-subrecord/entity-subrecord.component\";\nimport { KeysPipe } from \"./keys-pipe/keys.pipe\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { ConfirmationDialogModule } from \"../confirmation-dialog/confirmation-dialog.module\";\nimport { FormDialogModule } from \"../form-dialog/form-dialog.module\";\n\n/**\n * EntitySubrecord provides generic components to display and edit a list of entities\n * which are related to the \"primary\" entity whose details are currently displayed.\n *\n * For example, all Notes related to a certain Child are displayed within the Child's detail view\n * with the help of the {@link EntitySubrecordComponent}.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatTableModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    FormDialogModule,\n    ConfirmationDialogModule,\n  ],\n  declarations: [EntitySubrecordComponent, KeysPipe],\n  exports: [EntitySubrecordComponent, KeysPipe],\n})\nexport class EntitySubrecordModule {}\n","/**\n * Input types available for columns generated by the {@link EntitySubrecordComponent}.\n * Defines what form field is offered to the user to edit the column's value.\n */\nexport enum ColumnDescriptionInputType {\n  TEXT = \"text\",\n  NUMBER = \"number\",\n  DATE = \"date\",\n  MONTH = \"month\",\n  TEXTAREA = \"textarea\",\n  SELECT = \"select\",\n  AUTOCOMPLETE = \"autocomplete\",\n  FUNCTION = \"function\",\n  READONLY = \"readonly\",\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { ColumnDescriptionInputType } from \"./column-description-input-type.enum\";\n\n/**\n *  Objects of this class are used to define columns for the {@link EntitySubrecordComponent}.\n *  A ColumnDescription describes a single column to be generated in that generic component.\n */\nexport class ColumnDescription {\n  /**\n   * @param name The identifier of the column\n   * @param label The label for the column displayed in the table header\n   * @param inputType How the value of this column is displayed and what kind of form field is provided to edit it\n   * @param selectValues Array of possible values for editing this column; required for inputTypes select and autocomplete\n   * @param formatter Function doing a custom transformation of the column's value before it is displayed.\n   * @param visibleFrom The minimal screen size the column is shown.\n   *           screen size classes: xs\t'screen and (max-width: 599px)'\n   *           sm\t'screen and (min-width: 600px) and (max-width: 959px)'\n   *           md\t'screen and (min-width: 960px) and (max-width: 1279px)'\n   *           lg\t'screen and (min-width: 1280px) and (max-width: 1919px)'\n   *           xl\t'screen and (min-width: 1920px) and (max-width: 5000px)'\n   * @param styleBuilder (Optional) function building a ngStyle value, receiving the value as a parameter\n   */\n  constructor(\n    public name: string,\n    public label: string,\n    public inputType: ColumnDescriptionInputType,\n\n    public selectValues: Array<{ value: any; label: string }> = [],\n\n    public formatter = (value) => {\n      return value;\n    },\n    public visibleFrom: string = undefined,\n    public styleBuilder: (value) => Object = () => {\n      return {};\n    }\n  ) {}\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Entity } from \"../../entity/entity\";\nimport { EntityMapperService } from \"../../entity/entity-mapper.service\";\nimport { ColumnDescription } from \"./column-description\";\nimport { MediaChange, MediaObserver } from \"@angular/flex-layout\";\nimport { AlertService } from \"app/core/alerts/alert.service\";\nimport { FormValidationResult } from \"./form-validation-result\";\nimport { ConfirmationDialogService } from \"../../confirmation-dialog/confirmation-dialog.service\";\nimport { ColumnDescriptionInputType } from \"./column-description-input-type.enum\";\nimport { ComponentType } from \"@angular/cdk/overlay\";\nimport { FormDialogService } from \"../../form-dialog/form-dialog.service\";\nimport { ShowsEntity } from \"../../form-dialog/shows-entity.interface\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n/**\n * Generically configurable component to display and edit a list of entities in a compact way\n * that can especially be used within another entity's details view to display related entities.\n *\n * For example, all Notes related to a certain Child are displayed within the Child's detail view\n * with the help of this component.\n *\n * A detailed Guide on how to use this component is available:\n * - [How to display related entities]{@link /additional-documentation/how-to-guides/display-related-entities.html}\n */\n@UntilDestroy()\n@Component({\n  selector: \"app-entity-subrecord\",\n  templateUrl: \"./entity-subrecord.component.html\",\n  styleUrls: [\"./entity-subrecord.component.scss\"],\n})\nexport class EntitySubrecordComponent implements OnInit, OnChanges {\n  /** data to be displayed */\n  @Input() records: Array<Entity>;\n\n  /** configuration what kind of columns to be generated for the table */\n  @Input() columns: Array<ColumnDescription>;\n\n  /**\n   * factory method to create a new instance of the displayed Entity type\n   * used when the user adds a new entity to the list.\n   */\n  @Input() newRecordFactory: () => Entity;\n\n  /**\n   * A Component to be used to display a detailed view or form of a single instance of the displayed entities.\n   * This is displayed as a modal (hovering) dialog above the active view and allows the user to get\n   * more information or more comfortable editing of a single record.\n   */\n  @Input() detailsComponent: ComponentType<ShowsEntity>;\n\n  /**\n   * Whether an \"Add\" button to create a new entry should be displayed as part of the form.\n   * Default is \"true\".\n   */\n  @Input() showAddButton = true;\n\n  /**\n   * Optional function implementing form validation logic that takes an entity instance, checks it and returns\n   * a {@link FormValidationResult} that is then handled by the EntitySubrecordComponent.\n   */\n  @Input() formValidation?: (record: Entity) => FormValidationResult;\n\n  /**\n   * Event whenever an entity in this table is changed.\n   */\n  @Output() changedRecordsInEntitySubrecordEvent = new EventEmitter<any>();\n\n  /** id of the parent entity of the records being displayed. May be used for custom display logic. */\n  @Input() entityId?: string;\n\n  /** data displayed in the template's table */\n  recordsDataSource = new MatTableDataSource();\n  /** columns displayed in the template's table */\n  columnsToDisplay = [];\n\n  /** map of entities' ids and whether this record's table row is currently in edit mode */\n  recordsEditing = new Map<string, boolean>();\n  /** backup copies of the original state of records to allow reset */\n  private originalRecords = [];\n\n  private screenWidth = \"\";\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private _entityMapper: EntityMapperService,\n    private _snackBar: MatSnackBar,\n    private _confirmationDialog: ConfirmationDialogService,\n    private formDialog: FormDialogService,\n    private alertService: AlertService,\n    private media: MediaObserver\n  ) {\n    this.media.media$\n      .pipe(untilDestroyed(this))\n      .subscribe((change: MediaChange) => {\n        if (change.mqAlias !== this.screenWidth) {\n          this.screenWidth = change.mqAlias;\n          this.setupTable();\n        }\n      });\n  }\n\n  ngOnInit() {\n    this.recordsDataSource.sort = this.sort;\n  }\n\n  /**\n   * Update the component if any of the @Input properties were changed from outside.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes[\"records\"] && this.records !== undefined) {\n      this.recordsDataSource.data = this.records;\n\n      this.records.forEach((e) =>\n        this.originalRecords.push(Object.assign({}, e))\n      );\n    }\n    if (changes[\"columns\"]) {\n      this.columnsToDisplay = this.columns.map((e) => e.name);\n      this.columnsToDisplay.push(\"actions\");\n      this.setupTable();\n    }\n  }\n\n  /**\n   * Save an edited record to the database (if validation succeeds).\n   * @param record The entity to be saved.\n   */\n  save(record: Entity) {\n    if (this.formValidation) {\n      const formValidationResult = this.formValidation(record);\n      if (!formValidationResult.hasPassedValidation) {\n        this.alertService.addWarning(formValidationResult.validationMessage);\n        return;\n      }\n    }\n\n    this._entityMapper.save(record).then(() => {\n      this.changedRecordsInEntitySubrecordEvent.emit();\n    });\n\n    // updated backup copies used for reset\n    const i = this.originalRecords.findIndex(\n      (e) => e.entityId === record.getId()\n    );\n    this.originalRecords[i] = Object.assign({}, record);\n\n    this.recordsEditing.set(record.getId(), false);\n  }\n\n  /**\n   * Discard any changes to the given entity and reset it to the state before the user started editing.\n   * @param record The entity to be reset.\n   */\n  resetChanges(record: Entity) {\n    // reload original record from database\n    const index = this.records.findIndex((a) => a.getId() === record.getId());\n    if (index > -1) {\n      const originalRecord = this.originalRecords.find(\n        (e) => e.entityId === record.getId()\n      );\n      Object.assign(record, originalRecord);\n      this.records[index] = record;\n      this.recordsDataSource.data = this.records;\n    }\n\n    this.recordsEditing.set(record.getId(), false);\n  }\n\n  private removeFromDataTable(record: Entity) {\n    const index = this.records.findIndex((a) => a.getId() === record.getId());\n    if (index > -1) {\n      this.records.splice(index, 1);\n      this.recordsDataSource.data = this.records;\n    }\n  }\n\n  /**\n   * Delete the given entity from the database (after explicit user confirmation).\n   * @param record The entity to be deleted.\n   */\n  delete(record: Entity) {\n    const dialogRef = this._confirmationDialog.openDialog(\n      \"Delete?\",\n      \"Are you sure you want to delete this record?\"\n    );\n\n    dialogRef.afterClosed().subscribe((confirmed) => {\n      if (confirmed) {\n        this._entityMapper.remove(record).then(() => {\n          this.changedRecordsInEntitySubrecordEvent.emit();\n        });\n        this.removeFromDataTable(record);\n\n        const snackBarRef = this._snackBar.open(\"Record deleted\", \"Undo\", {\n          duration: 8000,\n        });\n        snackBarRef.onAction().subscribe(() => {\n          this._entityMapper.save(record, true);\n          this.records.unshift(record);\n          this.recordsDataSource.data = this.records;\n        });\n      }\n    });\n  }\n\n  /**\n   * Create a new entity.\n   * The entity is only written to the database when the user saves this record which is newly added in edit mode.\n   */\n  create() {\n    const newRecord = this.newRecordFactory();\n\n    this.records.unshift(newRecord);\n    this.originalRecords.unshift(Object.assign({}, newRecord));\n    this.recordsDataSource.data = this.records;\n\n    if (this.detailsComponent === undefined) {\n      // edit inline in table\n      this.recordsEditing.set(newRecord.getId(), true);\n    } else {\n      // open in modal for comfortable editing\n      this.showRecord(newRecord);\n    }\n  }\n\n  /**\n   * Show one record's details in a modal dialog (if configured).\n   * @param record The entity whose details should be displayed.\n   */\n  showRecord(record: Entity) {\n    if (\n      this.detailsComponent === undefined ||\n      this.recordsEditing.get(record.getId())\n    ) {\n      return;\n    }\n    this.formDialog.openDialog(this.detailsComponent, record);\n  }\n\n  autocompleteSearch(col, input) {\n    if (col.allSelectValues === undefined) {\n      col.allSelectValues = col.selectValues;\n    }\n    col.selectValues = col.allSelectValues.filter(\n      (v) => v.value.includes(input) || v.label.includes(input)\n    );\n  }\n\n  /**\n   * resets columnsToDisplay depending on current screensize\n   */\n  setupTable() {\n    if (this.columns !== undefined && this.screenWidth !== \"\") {\n      const columnsHelpArray = [];\n      const entitySubrecordComponent = this;\n      this.columns.forEach(function (this, col) {\n        if (entitySubrecordComponent.isVisible(col)) {\n          columnsHelpArray.push(col.name);\n        }\n      });\n      this.columnsToDisplay = columnsHelpArray;\n      if (this.screenWidth !== \"xs\") {\n        this.columnsToDisplay.push(\"actions\");\n      }\n    }\n  }\n\n  /**\n   * isVisible\n   * compares the current screensize to the columns' property visibleFrom. screensize < visibleFrom? column not displayed\n   * @param col column that is checked\n   * @return returns true if column is visible\n   */\n  isVisible(col) {\n    let returnVal;\n    switch (col.visibleFrom) {\n      case \"xl\": {\n        returnVal = this.screenWidth.match(\"xl\");\n        break;\n      }\n      case \"lg\": {\n        returnVal = this.screenWidth.match(\"(lg|xl)\");\n        break;\n      }\n      case \"md\": {\n        returnVal = this.screenWidth.match(\"(md|lg|xl)\");\n        break;\n      }\n      case \"sm\": {\n        returnVal = this.screenWidth.match(\"(sm|md|lg|xl)\");\n        break;\n      }\n      default: {\n        returnVal = true;\n      }\n    }\n    return returnVal;\n  }\n\n  /**\n   * Checks whether the given column configuration's input type is readonly\n   * and therefore not changing its template in edit mode.\n   * @param inputType The input type to be checked.\n   */\n  isReadonlyInputType(inputType: ColumnDescriptionInputType): boolean {\n    return (\n      inputType === ColumnDescriptionInputType.FUNCTION ||\n      inputType === ColumnDescriptionInputType.READONLY\n    );\n  }\n\n  /**\n   * returns the color for a record.\n   * If this entity id is undefined, this will return the default color. Otherwise it will attempt\n   * to get a specific color for this specific entity id\n   * @param record The record to check for. The record must be an entity that has a <code>getColor()</code>-Method specified.\n   * If this entityId is set, a <code>getColorForId()</code>-Method must be specified, that accepts this id.\n   */\n  getColor(record) {\n    if (this.entityId !== undefined) {\n      return record.getColorForId(this.entityId);\n    }\n    return record.getColor();\n  }\n}\n","<table mat-table [dataSource]=\"recordsDataSource\" matSort class=\"mat-elevation-z8 subrecord-table\">\n\n  <ng-container *ngFor=\"let col of columns\" [matColumnDef]=\"col.name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{col.label}} </th>\n    <td mat-cell *matCellDef=\"let rec\"\n        (click)='showRecord(rec)' [ngClass]=\"{'table-link': detailsComponent!==undefined}\">\n\n      <div *ngIf=\"col.inputType === 'function'\" class='table-show-number'>\n        {{ col.formatter( rec[col.name].bind(rec)() ) }}\n      </div>\n\n      <div *ngIf=\"col.inputType === 'readonly'\" class='table-show-number'>\n        {{ col.formatter( rec[col.name] ) }}\n      </div>\n\n\n      <div *ngIf=\"!recordsEditing.get(rec.getId()) && !isReadonlyInputType(col.inputType)\"\n           [ngStyle]=\"col.styleBuilder ? col.styleBuilder(rec[col.name]) : {}\"\n           [ngClass]=\"{ 'table-show-number': col.inputType==='number' }\">\n        {{ col.formatter(rec[col.name]) }}\n      </div>\n\n      <div *ngIf=\"recordsEditing.get(rec.getId()) &&  !isReadonlyInputType(col.inputType)\">\n        <mat-form-field [ngClass]=\"{\n            'table-input-number': col.inputType === 'number',\n            'table-input-month': col.inputType === 'month' || col.inputType === 'date'\n            }\">\n\n          <input *ngIf=\"col.inputType === 'text'\"\n                 matInput type=\"text\" [title]=\"col.label\" [value]=\"rec[col.name]\" (change)=\"rec[col.name]=$event.target.value\">\n\n          <input *ngIf=\"col.inputType === 'number'\"\n                 matInput type=\"number\" min=\"0\" [title]=\"col.label\" [value]=\"rec[col.name]\" (change)=\"rec[col.name]=$event.target.valueAsNumber\">\n\n          <input *ngIf=\"col.inputType === 'date'\"\n                 matInput [title]=\"col.label\" [value]=\"rec[col.name]\" (dateChange)=\"rec[col.name]=$event.target.value\"  [matDatepicker]=\"subrecordDatepicker\">\n          <mat-datepicker-toggle *ngIf=\"col.inputType === 'date'\" matSuffix [for]=\"subrecordDatepicker\"></mat-datepicker-toggle>\n          <mat-datepicker #subrecordDatepicker ></mat-datepicker>\n\n          <input *ngIf=\"col.inputType === 'month'\"\n                 matInput type=\"month\" [title]=\"col.label\" [valueAsDate]=\"rec[col.name]\" (change)=\"rec[col.name]=$event.target.valueAsDate\">\n\n          <textarea *ngIf=\"col.inputType === 'textarea'\"\n                    matInput [title]=\"col.label\" [value]=\"rec[col.name]\" (change)=\"rec[col.name]=$event.target.value\"></textarea>\n\n          <mat-select *ngIf=\"col.inputType === 'select'\" [(value)]=\"rec[col.name]\">\n            <mat-option *ngFor='let option of col.selectValues' [value]=\"option.value\">{{option.label}}</mat-option>\n          </mat-select>\n\n          <span *ngIf=\"col.inputType === 'autocomplete'\">\n            <input [matAutocomplete]=\"auto\" (input)=\"autocompleteSearch(col, $event.target.value)\"\n                   matInput type=\"text\" [title]=\"col.label\" [value]=\"rec[col.name]\" (change)=\"rec[col.name]=$event.target.value\">\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"rec[col.name]=$event.option.value\">\n              <mat-option *ngFor=\"let option of col.selectValues\" [value]=\"option.value\">{{option.label}}</mat-option>\n            </mat-autocomplete>\n          </span>\n\n        </mat-form-field>\n      </div>\n    </td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef >\n      <button *ngIf=\"showAddButton\" mat-stroked-button class=\"table-action-button\" color=\"accent\" (click)=\"create()\">\n        <mat-icon class=\"table-action-icon\" aria-label=\"add\" fontIcon=\"fa-plus-circle\"></mat-icon>\n        <!-- fxHide.md=\"false\">Add New -->\n      </button>\n    </th>\n    <td mat-cell *matCellDef=\"let rec\">\n      <button mat-icon-button *ngIf=\"!recordsEditing.get(rec.getId())\" (click)=\"recordsEditing.set(rec.getId(), true)\">\n        <mat-icon class=\"table-action-icon\" aria-label=\"edit\" fontIcon=\"fa-pencil\"></mat-icon>\n      </button>\n      <button mat-icon-button *ngIf=\"recordsEditing.get(rec.getId())\" (click)=\"save(rec)\">\n        <mat-icon class=\"table-action-icon\" aria-label=\"save\" fontIcon=\"fa-check-circle\"></mat-icon>\n      </button>\n      <button mat-icon-button *ngIf=\"recordsEditing.get(rec.getId())\" (click)=\"resetChanges(rec)\">\n        <mat-icon class=\"table-action-icon\" aria-label=\"cancel\" fontIcon=\"fa-times-circle\"></mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"delete(rec)\">\n        <mat-icon class=\"table-action-icon\" aria-label=\"delete\" fontIcon=\"fa-trash\"></mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let rec; columns: columnsToDisplay\"\n      [ngStyle]=\"{'background-color': getColor(rec)}\">\n  </tr>\n</table>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n * Angular Pipe to transform a given object to an array of the object's keys.\n *\n * @example in a template to display keys of an enum:\n * `*ngFor=\"let g of enumGenders | keys\"`\n */\n@Pipe({\n  name: \"keys\",\n})\nexport class KeysPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    const keys = [];\n    for (const enumMember of Object.keys(value)) {\n      keys.push({ key: enumMember, value: value[enumMember] });\n    }\n    return keys;\n  }\n}\n","/**\n * Decorator (Annotation `@DatabaseEntity()`) to set the string ENTITY_TYPE to an Entity Type.\n *\n * also see {@link /additional-documentation/how-to-guides/create-a-new-entity-type.html}\n *\n * @param entityType The string key for this Entity Type, used as id prefix.\n */\nexport function DatabaseEntity(entityType: string) {\n  return (constructor) => {\n    constructor.ENTITY_TYPE = entityType;\n\n    // append parent schema definitions\n    const parentConstructor = Object.getPrototypeOf(constructor);\n    parentConstructor.schema.forEach((value, key) =>\n      constructor.schema.set(key, value)\n    );\n  };\n}\n","import \"reflect-metadata\";\nimport { EntitySchemaField } from \"./schema/entity-schema-field\";\n\n/**\n * Decorator (Annotation `@DatabaseField()`) to mark a property of an Entity that should be persisted in the database.\n *\n * also see {@link /additional-documentation/how-to-guides/create-a-new-entity-type.html}\n *\n * @param propertySchema (optional) SchemaField definition that configures additional options regarding this field\n */\nexport function DatabaseField(propertySchema: EntitySchemaField = {}) {\n  return (target, propertyName: string) => {\n    target[propertyName] = undefined; // This ensures that the field is not read only\n\n    if (propertySchema.dataType === undefined) {\n      propertySchema.dataType = Reflect.getMetadata(\n        \"design:type\",\n        target,\n        propertyName\n      ).name.toLowerCase();\n    }\n\n    if (Object.getOwnPropertyDescriptor(target.constructor, \"schema\") == null) {\n      target.constructor.schema = new Map<string, EntitySchemaField>();\n    }\n    target.constructor.schema.set(propertyName, propertySchema);\n\n    return target;\n  };\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { Database } from \"../../database/database\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { BackgroundProcessState } from \"../../sync-status/background-process-state.interface\";\n\n/**\n * Manage database query index creation and use, working as a facade in front of the Database service.\n * This allows to track pending indexing processes and also show them to users in the UI.\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatabaseIndexingService {\n  private _indicesRegistered = new BehaviorSubject<BackgroundProcessState[]>(\n    []\n  );\n\n  /** All currently registered indices with their status */\n  get indicesRegistered(): Observable<BackgroundProcessState[]> {\n    return this._indicesRegistered.asObservable();\n  }\n\n  constructor(private db: Database) {}\n\n  /**\n   * Register a new database query to be created/updated and indexed.\n   *\n   * This also triggers updates to the observable `indicesRegistered`.\n   *\n   * @param designDoc The design document (see @link{Database}) describing the query/index.\n   */\n  async createIndex(designDoc: any): Promise<void> {\n    const indexState: BackgroundProcessState = {\n      title: \"Preparing data (Indexing)\",\n      details: designDoc._id.replace(/_design\\//, \"\"),\n      pending: true,\n    };\n    const indexCreationPromise = this.db.saveDatabaseIndex(designDoc);\n    this._indicesRegistered.next([\n      ...this._indicesRegistered.value,\n      indexState,\n    ]);\n\n    try {\n      await indexCreationPromise;\n    } catch (err) {\n      indexState.pending = false;\n      indexState.error = err;\n      this._indicesRegistered.next(this._indicesRegistered.value);\n      throw err;\n    }\n\n    indexState.pending = false;\n    this._indicesRegistered.next(this._indicesRegistered.value);\n  }\n\n  /**\n   * Load data from the Database through the given, previously created index.\n   * @param indexName The name of the previously created index to be queried.\n   * @param options Additional query options (see @link{Database})\n   */\n  queryIndex(indexName: string, options?: any) {\n    return this.db.query(indexName, options);\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { Database } from \"../database/database\";\nimport { Entity, EntityConstructor } from \"./entity\";\nimport { EntitySchemaService } from \"./schema/entity-schema.service\";\n\n/**\n * Handles loading and saving of data for any higher-level feature module.\n * The EntityMapperService implicitly transforms objects from instances of Entity classes to the format to be written\n * to the database and back - ensuring they you always receive instances of {@link Entity} subclasses, that you can\n * simply treat them as normal javascript class instances without worrying about database persistance logic.\n *\n * To understand more about how to use the Entity system in your own modules, refer to the How-To Guides:\n * - [How to Load and Save Data]{@link /additional-documentation/how-to-guides/load-and-save-data.html}\n * - [How to Create a new Entity Type]{@link /additional-documentation/how-to-guides/create-a-new-entity-type.html}\n */\n@Injectable()\nexport class EntityMapperService {\n  constructor(\n    private _db: Database,\n    private entitySchemaService: EntitySchemaService\n  ) {}\n\n  /**\n   * Load an Entity from the database with the given id.\n   *\n   * @param entityType Class that implements Entity, which is the type of Entity the results should be transformed to\n   * @param id The id of the entity to load\n   * @returns A Promise resolving to an instance of entityType filled with its data.\n   */\n  public async load<T extends Entity>(\n    entityType: EntityConstructor<T>,\n    id: string\n  ): Promise<T> {\n    const resultEntity = new entityType(\"\");\n    const result = await this._db.get(\n      Entity.createPrefixedId(resultEntity.getType(), id)\n    );\n    this.entitySchemaService.loadDataIntoEntity(resultEntity, result);\n    return resultEntity;\n  }\n\n  /**\n   * Load all entities from the database of the given type (for example a list of entities of the type User).\n   *\n   * @param entityType Class that implements Entity, which is the type of Entity the results should be transformed to\n   * @returns A Promise resolving to an array of instances of entityType with the data of the loaded entities.\n   */\n  public async loadType<T extends Entity>(\n    entityType: EntityConstructor<T>\n  ): Promise<T[]> {\n    const resultArray: Array<T> = [];\n\n    const allRecordsOfType = await this._db.getAll(\n      new entityType(\"\").getType() + \":\"\n    );\n\n    for (const record of allRecordsOfType) {\n      const entity = new entityType(\"\");\n      this.entitySchemaService.loadDataIntoEntity(entity, record);\n      resultArray.push(entity);\n    }\n\n    return resultArray;\n  }\n\n  /**\n   * Save an entity to the database after transforming it to its database representation.\n   * @param entity The entity to be saved\n   * @param forceUpdate Optional flag whether any conflicting version in the database will be quietly overwritten.\n   *          if a conflict occurs without the forceUpdate flag being set, the save will fail, rejecting the returned promise.\n   */\n  public async save<T extends Entity>(\n    entity: T,\n    forceUpdate: boolean = false\n  ): Promise<any> {\n    const rawData = this.entitySchemaService.transformEntityToDatabaseFormat(\n      entity\n    );\n    const result = await this._db.put(rawData, forceUpdate);\n    if (result.ok) {\n      entity._rev = result.rev;\n    }\n    return result;\n  }\n\n  /**\n   * Delete an entity from the database.\n   * @param entity The entity to be deleted\n   */\n  public remove<T extends Entity>(entity: T): Promise<any> {\n    return this._db.remove(entity);\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { EntityMapperService } from \"./entity-mapper.service\";\nimport { EntitySchemaService } from \"./schema/entity-schema.service\";\n\n/**\n * Generic system to manage saving and loading documents with the database\n * while offering certain transformations between the object and the database representation.\n * A key part of this is to return instances of {@link Entity} subclasses to other modules of the app\n * which can simply treat them as normal javascript class instances without worrying about database persistance logic.\n *\n * The main service used by other modules is {@link EntityMapperService}, which provides functions to load, save and query\n * data from the database (and return it after transformation to the correct Entity instances).\n *\n * The Entity schema system allows you to use annotations in the Entity classes to define which properties\n * are saved to the database, how they are transformed and which properties are ignored when writing to the database.\n * This is handled by the {@link EntitySchemaService} (which is internally used by the EntityMapperService.\n * You can register your own custom data-type transformations with the EntitySchemaService as well.\n *\n * To understand how to use the Entity system in your own modules, refer to the How-To Guides:\n * - [How to Load and Save Data]{@link /additional-documentation/how-to-guides/load-and-save-data.html}\n * - [How to Create a new Entity Type]{@link /additional-documentation/how-to-guides/create-a-new-entity-type.html}\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  providers: [EntityMapperService, EntitySchemaService],\n})\nexport class EntityModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchema } from \"./schema/entity-schema\";\nimport { DatabaseField } from \"./database-field.decorator\";\nimport {\n  WarningLevel,\n  WarningLevelColor,\n} from \"../../child-dev-project/warning-level\";\n\n/**\n * This represents a static class of type <T>.\n * It can be used for passing a class from which new objects should be created.\n * For example usage check the {@link EntityMapperService}.\n */\nexport type EntityConstructor<T extends Entity> = new (id: string) => T;\n\n/**\n * \"Entity\" is a base class for all domain model classes.\n * It implements the basic general properties and methods that are required for all Entity types\n * e.g. supporting the Entity Schema system or basic database logic.\n *\n * Entity classes do not deal with database actions, use {@link EntityMapperService} with its find/save/delete functions.\n *\n * Do not use the Entity class directly. Instead implement your own Entity types, writing classes that extend \"Entity\".\n * A How-To Guide on how to implement your own types is available:\n * - [How to Create a new Entity Type]{@link /additional-documentation/how-to-guides/create-a-new-entity-type.html}\n */\nexport class Entity {\n  /**\n   * The entity's type.\n   * In classes extending Entity this is usually overridden by the class annotation `@DatabaseEntity('NewEntity')`.\n   */\n  static ENTITY_TYPE = \"Entity\";\n\n  /**\n   * EntitySchema defining property transformations from/to the database.\n   * This is auto-generated from the property annotations `@DatabaseField()`.\n   *\n   * see {@link /additional-documentation/how-to-guides/create-a-new-entity-type.html}\n   */\n  static schema: EntitySchema;\n\n  /**\n   * Extract the ENTITY_TYPE from an id.\n   * @param id An entity's id including prefix.\n   */\n  static extractTypeFromId(id: string): string {\n    const split = id.indexOf(\":\");\n    return id.substring(0, split);\n  }\n\n  /**\n   * Extract entityId without prefix.\n   * @param id An entity's id including prefix.\n   */\n  static extractEntityIdFromId(id: string): string {\n    const split = id.indexOf(\":\");\n    return id.substring(split + 1);\n  }\n\n  /**\n   * Create a prefixed id by adding the type prefix if it isn't already part of the given id.\n   * @param type The type prefix to be added.\n   * @param id The id to be extended with a prefix.\n   */\n  static createPrefixedId(type: string, id: string): string {\n    id = String(id);\n    const prefix = type + \":\";\n    if (!id.startsWith(prefix)) {\n      return prefix + id;\n    } else {\n      return id;\n    }\n  }\n\n  /**\n   * Internal database id.\n   * This is usually combined from the ENTITY_TYPE as a prefix with the entityId field `EntityType:entityId`\n   * @example \"Entity:123\"\n   */\n  @DatabaseField() _id: string;\n\n  /** internal database doc revision, used to detect conflicts by PouchDB/CouchDB */\n  @DatabaseField() _rev: string;\n\n  /** actual id without prefix */\n  get entityId(): string {\n    return Entity.extractEntityIdFromId(this._id);\n  }\n\n  /**\n   * Set id without prefix.\n   * @param newEntityId The new id without prefix.\n   */\n  set entityId(newEntityId: string) {\n    this._id = Entity.createPrefixedId(this.getType(), newEntityId);\n  }\n\n  /**\n   * Creates an entity object with the given id. This id is final and won't be changeable after this object has been\n   * created.\n   *\n   * @param id a unique id for this entity\n   */\n  constructor(id: string) {\n    this.entityId = id;\n  }\n\n  /**\n   * Get the class (Entity or the actual subclass of the instance) to call static methods on the correct class considering inheritance\n   */\n  getConstructor(): typeof Entity {\n    return <typeof Entity>this.constructor;\n  }\n\n  /**\n   * Returns the id of this entity.\n   *\n   * Note that an id is final and can't be changed after the object has been instantiated, hence there is no\n   * <code>setId()</code> method.\n   *\n   * @returns {string} the unique id of this entity\n   */\n  public getId(): string {\n    return this.entityId;\n  }\n\n  /**\n   * Returns the type which is used to categorize this entity in the database.\n   *\n   * <b>Important: Do not overwrite this method! Types are handled internally.</b>\n   *\n   * @returns {string} the entity's type (which is the class name).\n   */\n  public getType(): string {\n    return this.getConstructor().ENTITY_TYPE;\n  }\n\n  /**\n   * Returns a string representation or summary of the instance.\n   *\n   * <b>Important: Overwrite this method in subtypes!</b>\n   *\n   * @returns {string} the instance's string representation.\n   */\n  public toString(): string {\n    return this.getId();\n  }\n\n  /**\n   * Returns an array of strings by which the entity can be searched.\n   *\n   * By default the parts of the \"name\" property (split at spaces) is used if it is present.\n   *\n   * <b>Overwrite this method in subtypes if you want an entity type to be searchable by other properties.</b>\n   *\n   * @returns {string[]} an array of strings through which the entity can be searched.\n   */\n  public generateSearchIndices(): string[] {\n    let indices = [];\n\n    // default indices generated from \"name\" property\n    if (this.hasOwnProperty(\"name\")) {\n      indices = this[\"name\"].split(\" \");\n    }\n\n    return indices;\n  }\n\n  /**\n   * Used by some generic UI components to set the color for the entity instance.\n   * Override this method as needed.\n   */\n  public getColor() {\n    return WarningLevelColor(this.getWarningLevel());\n  }\n\n  /**\n   * Override getWarningLevel() to define when the entity is in a critical condition and should be color-coded\n   * and highlighted in generic components of the UI.\n   */\n  public getWarningLevel(): WarningLevel {\n    return WarningLevel.NONE;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../schema/entity-schema-datatype\";\nimport { EntitySchemaField } from \"../schema/entity-schema-field\";\nimport { EntitySchemaService } from \"../schema/entity-schema.service\";\n\n/**\n * Datatype for the EntitySchemaService transforming values of an array recursively.\n *\n * (De)serialize each item in an array according to the given Datatype transformer.\n *\n * As TypeScript array types are not reliable, you have to explicitly configure the dataType for array items with the annotation.\n * For example:\n *\n * `@DatabaseField({ arrayDataType: 'month' }) dateArr: Date[];`\n * will ensure that in the database this property is saved as an array of \"month\" date strings\n * using the {@link monthEntitySchemaDatatype} (e.g. resulting in `['2020-01', '2020-04']` in the database).\n */\nexport const arrayEntitySchemaDatatype: EntitySchemaDatatype = {\n  name: \"array\",\n\n  transformToDatabaseFormat: (\n    value: any[],\n    schemaField: EntitySchemaField,\n    schemaService: EntitySchemaService,\n    parent\n  ) => {\n    if (!Array.isArray(value)) {\n      console.warn(\n        'property to be transformed with \"array\" EntitySchema is not an array',\n        value\n      );\n      return value;\n    }\n\n    const arrayElementDatatype: EntitySchemaDatatype = schemaService.getDatatypeOrDefault(\n      schemaField.arrayDataType\n    );\n    return value.map((el) =>\n      arrayElementDatatype.transformToDatabaseFormat(\n        el,\n        generateSubSchemaField(schemaField),\n        schemaService,\n        parent\n      )\n    );\n  },\n\n  transformToObjectFormat: (\n    value: any[],\n    schemaField: EntitySchemaField,\n    schemaService: EntitySchemaService,\n    parent\n  ) => {\n    if (!Array.isArray(value)) {\n      console.warn(\n        'property to be transformed with \"array\" EntitySchema is not an array',\n        value\n      );\n      return value;\n    }\n\n    const arrayElementDatatype: EntitySchemaDatatype = schemaService.getDatatypeOrDefault(\n      schemaField.arrayDataType\n    );\n\n    return value.map((el) =>\n      arrayElementDatatype.transformToObjectFormat(\n        el,\n        generateSubSchemaField(schemaField),\n        schemaService,\n        parent\n      )\n    );\n  },\n};\n\n/**\n * Generate an EntitySchemaField configuration object for the recursively called datatype for array items\n * based on the given main config for the array datatype.\n * @ignore\n *\n * @param arraySchemaField The schema field config as received by the array datatype from the annotation\n */\nfunction generateSubSchemaField(arraySchemaField: EntitySchemaField) {\n  const subSchemaField = Object.assign({}, arraySchemaField);\n  subSchemaField.dataType = arraySchemaField.arrayDataType;\n  delete subSchemaField.arrayDataType;\n  return subSchemaField;\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../schema/entity-schema-datatype\";\n\n/**\n * Datatype for the EntitySchemaService transforming Date values to/from a date string format (\"YYYY-mm-dd\").\n *\n * Throws an exception if the property is set to something that is not a Date instance and cannot be cast to Date either.\n *\n * For example:\n *\n * `@DatabaseField({dataType: 'date-only'}) myDate: Date = new Date('2020-01-15'); // will be \"2020-01-15\" (without time) in the database`\n */\nexport const dateOnlyEntitySchemaDatatype: EntitySchemaDatatype = {\n  name: \"date-only\",\n\n  transformToDatabaseFormat: (value: Date) => {\n    if (!value) {\n      return undefined;\n    }\n\n    return (\n      value.getFullYear() +\n      \"-\" +\n      (value.getMonth() + 1).toString().padStart(2, \"0\") +\n      \"-\" +\n      value.getDate().toString().padStart(2, \"0\")\n    );\n  },\n\n  transformToObjectFormat: (value) => {\n    if (!value) {\n      return undefined;\n    }\n\n    const date = new Date(value);\n    if (Number.isNaN(date.getTime())) {\n      throw new Error(\"failed to convert data to Date object: \" + value);\n    }\n    return date;\n  },\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../schema/entity-schema-datatype\";\n\n/**\n * Datatype for the EntitySchemaService transforming values to Date instances.\n *\n * This type is automatically used if you annotate a class's property that has the TypeScript type \"Date\"\n * ensuring that even if values in the database might be some kind of date string they will be cast to Date instances.\n *\n * For example:\n *\n * `@DatabaseField() myDate: Date; // will be a valid Date even if the database previously had \"2020-01-15\" as string`\n */\nexport const dateEntitySchemaDatatype: EntitySchemaDatatype = {\n  name: \"date\",\n\n  transformToDatabaseFormat: (value: Date) => {\n    // TODO: should date format be saved as date object or as string \"YYYY-mm-dd\"?\n    // return isValidDate(value) ? value.toISOString().slice(0, 10) : '';\n    // DONE: date format is now being saved as date object\n    return value;\n  },\n\n  transformToObjectFormat: (value) => {\n    if (!value) {\n      return undefined;\n    }\n\n    const date = new Date(value);\n    if (Number.isNaN(date.getTime())) {\n      throw new Error(\"failed to convert data to Date object: \" + value);\n    }\n    return date;\n  },\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../schema/entity-schema-datatype\";\n\n/**\n * The default fallback Datatype for the EntitySchemaService that keeps values unchanged between database and entity instance.\n *\n * This type is automatically used whenever no fitting Datatype can be found for that config or TypeScript type.\n */\nexport const defaultEntitySchemaDatatype: EntitySchemaDatatype = {\n  name: \"any\",\n\n  transformToDatabaseFormat: (value) => {\n    return value;\n  },\n\n  transformToObjectFormat: (value) => {\n    return value;\n  },\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../schema/entity-schema-datatype\";\n\n/**\n * Datatype for the EntitySchemaService transforming Date values to/from a short string month format (\"YYYY-mm\").\n *\n * Throws an exception if the property is set to something that is not a Date instance and cannot be cast to Date either.\n *\n * For example:\n *\n * `@DatabaseField({dataType: 'month'}) myMonth: Date = new Date('2020-01-15'); // will be \"2020-01\" in the database`\n */\nexport const monthEntitySchemaDatatype: EntitySchemaDatatype = {\n  name: \"month\",\n\n  transformToDatabaseFormat: (value) => {\n    if (!value) {\n      return undefined;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(value);\n    }\n    return (\n      value.getFullYear().toString() +\n      \"-\" +\n      (value.getMonth() + 1).toString().replace(/^(\\d)$/g, \"0$1\")\n    );\n  },\n\n  transformToObjectFormat: (value) => {\n    if (!value || value === \"\") {\n      return undefined;\n    }\n\n    value = value\n      .toString()\n      .replace(/-(\\d)-/g, \"-0$1-\")\n      .replace(/-(\\d)$/g, \"-0$1\");\n    const date = new Date(value);\n    if (Number.isNaN(date.getTime())) {\n      console.log(\"value aus datatype-month.ts: \" + value);\n      throw new Error(\"failed to convert data to Date object: \" + value);\n    }\n    return date;\n  },\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../schema/entity-schema-datatype\";\n\n/**\n * Datatype for the EntitySchemaService transforming values to \"number\".\n *\n * This type is automatically used if you annotate a class's property that has the TypeScript type \"number\"\n * ensuring that even if values in the database from other sources are not of type number they will be cast to number.\n *\n * For example:\n *\n * `@DatabaseField() myNumber: number;`\n *\n * `@DatabaseField({dataType: 'number'}) myValue: any;`\n */\nexport const numberEntitySchemaDatatype: EntitySchemaDatatype = {\n  name: \"number\",\n\n  transformToDatabaseFormat: (value) => {\n    if (!value) {\n      return undefined;\n    }\n    return Number(value);\n  },\n\n  transformToObjectFormat: (value) => {\n    if (!value) {\n      return undefined;\n    }\n    return Number(value);\n  },\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../schema/entity-schema-datatype\";\nimport { EntitySchemaField } from \"../schema/entity-schema-field\";\nimport { EntitySchemaService } from \"../schema/entity-schema.service\";\n\n/**\n * Datatype for the EntitySchemaService transforming values of complex objects recursively.\n *\n * (De)serialize instances of any class recognizing the normal @DatabaseField() annotations within that referenced class.\n * This is useful if your Entity type is complex and has properties that are instances of other classes\n * rather just basic value types like string or number.\n * You can then annotate some properties of that referenced class so they will be saved to the database while ignoring other properties.\n * The referenced class instance will be saved embedded into the entity's object and not as an own \"stand-alone\" entity.\n *\n * see the unit tests in entity-schema.service.spec.ts for an example\n *\n * Requires the class constructor as extension field in the schema field annotation:\n *\n * `@DatabaseField({ dataType: 'schema-embed', ext: MyClass })`\n */\nexport const schemaEmbedEntitySchemaDatatype: EntitySchemaDatatype = {\n  name: \"schema-embed\",\n\n  transformToDatabaseFormat: (\n    value: any,\n    schemaField: EntitySchemaField,\n    schemaService: EntitySchemaService\n  ) => {\n    return schemaService.transformEntityToDatabaseFormat(\n      value,\n      schemaField.ext.schema\n    );\n  },\n\n  transformToObjectFormat: (\n    value: any,\n    schemaField: EntitySchemaField,\n    schemaService: EntitySchemaService\n  ) => {\n    return schemaService.transformDatabaseToEntityFormat(\n      value,\n      schemaField.ext.schema\n    );\n  },\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EntitySchemaDatatype } from \"../schema/entity-schema-datatype\";\n\n/**\n * Datatype for the EntitySchemaService transforming values to \"string\".\n *\n * This type is automatically used if you annotate a class's property that has the TypeScript type \"string\"\n * ensuring that even if values in the database from other sources are not of type string, the property will be a string.\n *\n * For example:\n *\n * `@DatabaseField() myString: string;`\n *\n * `@DatabaseField({dataType: 'string'}) myValue: any;`\n */\nexport const stringEntitySchemaDatatype: EntitySchemaDatatype = {\n  name: \"string\",\n\n  transformToDatabaseFormat: (value) => {\n    if (!value) {\n      return undefined;\n    }\n    return String(value);\n  },\n\n  transformToObjectFormat: (value) => {\n    if (!value) {\n      return undefined;\n    }\n    return String(value);\n  },\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Entity } from \"../entity\";\nimport { EntitySchemaDatatype } from \"./entity-schema-datatype\";\nimport { Injectable } from \"@angular/core\";\nimport { defaultEntitySchemaDatatype } from \"../schema-datatypes/datatype-default\";\nimport { EntitySchema } from \"./entity-schema\";\nimport { EntitySchemaField } from \"./entity-schema-field\";\nimport { stringEntitySchemaDatatype } from \"../schema-datatypes/datatype-string\";\nimport { numberEntitySchemaDatatype } from \"../schema-datatypes/datatype-number\";\nimport { dateEntitySchemaDatatype } from \"../schema-datatypes/datatype-date\";\nimport { monthEntitySchemaDatatype } from \"../schema-datatypes/datatype-month\";\nimport { arrayEntitySchemaDatatype } from \"../schema-datatypes/datatype-array\";\nimport { schemaEmbedEntitySchemaDatatype } from \"../schema-datatypes/datatype-schema-embed\";\nimport { dateOnlyEntitySchemaDatatype } from \"../schema-datatypes/datatype-date-only\";\n\n/**\n * Transform between entity instances and database objects\n * based on the dataType set for properties in Entity classes using the {@link DatabaseField} annotation.\n *\n * You can inject the EntitySchemaService in your code to register your custom {@link EntitySchemaDatatype} implementations.\n *\n * This service is used by the {@link EntityMapperService} to internally transform objects.\n * You should normally use the EntityMapperService instead of transforming objects yourself with the EntitySchemaService.\n *\n * also see the How-To Guides:\n * - [Create A New Entity Type]{@link /additional-documentation/how-to-guides/create-a-new-entity-type.html}\n */\n@Injectable()\nexport class EntitySchemaService {\n  /**\n   * Internal registry of data type definitions.\n   * You can extend the Schema system with your data type conversions by using EntitySchema.registerSchemaDatatype()\n   */\n  private schemaTypes = new Map<string, EntitySchemaDatatype>();\n\n  constructor() {\n    this.registerBasicDatatypes();\n  }\n\n  private registerBasicDatatypes() {\n    this.registerSchemaDatatype(stringEntitySchemaDatatype);\n    this.registerSchemaDatatype(numberEntitySchemaDatatype);\n    this.registerSchemaDatatype(dateEntitySchemaDatatype);\n    this.registerSchemaDatatype(dateOnlyEntitySchemaDatatype);\n    this.registerSchemaDatatype(monthEntitySchemaDatatype);\n    this.registerSchemaDatatype(arrayEntitySchemaDatatype);\n    this.registerSchemaDatatype(schemaEmbedEntitySchemaDatatype);\n  }\n\n  /**\n   * Add a datatype definition to the registry to provide a conversion between what is written into the database\n   * and what is available in Entity objects.\n   * @param type The EntitySchemaDatatype object definition providing data transformation functions.\n   */\n  public registerSchemaDatatype(type: EntitySchemaDatatype) {\n    this.schemaTypes.set(type.name, type);\n  }\n\n  /**\n   * Get the datatype for the giving name (or the default datatype if no other registered type fits)\n   * @param datatypeName The key/name of the datatype\n   */\n  public getDatatypeOrDefault(datatypeName: string) {\n    datatypeName = datatypeName ? datatypeName.toLowerCase() : undefined;\n\n    if (this.schemaTypes.has(datatypeName)) {\n      return this.schemaTypes.get(datatypeName);\n    } else {\n      return defaultEntitySchemaDatatype;\n    }\n  }\n\n  /**\n   * Transform a database object to entity format according to the schema.\n   * @param data The database object that will be transformed to the given entity format\n   * @param schema A schema defining the transformation\n   */\n  public transformDatabaseToEntityFormat(data: any, schema: EntitySchema) {\n    for (const key of schema.keys()) {\n      const schemaField: EntitySchemaField = schema.get(key);\n      const newValue = this.getDatatypeOrDefault(\n        schemaField.dataType\n      ).transformToObjectFormat(data[key], schemaField, this, data);\n      if (newValue !== undefined) {\n        data[key] = newValue;\n      }\n\n      if (schemaField.generateIndex) {\n        throw new Error('schema option \"isIndexed\" not implemented yet');\n      }\n    }\n\n    return data;\n  }\n\n  /**\n   * Helper function to assign the giving data to the given entity instance after transforming it according to the schema.\n   * @param entity An entity instance whose properties will be overwritten with the transformed data\n   * @param data The database object that will be transformed and assigned to the entity\n   */\n  public loadDataIntoEntity(entity: Entity, data: any) {\n    data = this.transformDatabaseToEntityFormat(\n      data,\n      entity.getConstructor().schema\n    );\n    Object.assign(entity, data);\n  }\n\n  /**\n   * Transform an entity instance to a database object according to the schema.\n   * @param entity The object (an instance of an entity type)\n   * @param schema The schema of the entity (if not explicitly defined the schema of the given entity is used)\n   */\n  public transformEntityToDatabaseFormat(\n    entity: Entity,\n    schema?: EntitySchema\n  ): any {\n    if (!schema) {\n      schema = entity.getConstructor().schema;\n    }\n\n    const data = {};\n\n    for (const key of schema.keys()) {\n      const schemaField: EntitySchemaField = schema.get(key);\n\n      if (entity[key] !== undefined) {\n        data[key] = this.getDatatypeOrDefault(\n          schemaField.dataType\n        ).transformToDatabaseFormat(entity[key], schemaField, this, entity);\n      }\n    }\n\n    if (entity.generateSearchIndices) {\n      data[\"searchIndices\"] = entity.generateSearchIndices();\n    }\n\n    return data;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Generic configuration for a filter with different selectable {@link FilterSelectionOption} options.\n *\n * This is a reusable format for any kind of dropdown or selection component that offers the user a choice\n * to narrow down a list of data items.\n * As the filter function is provided as part of each {@link FilterSelectionOption}\n * an instance of this FilterSelection class can manage all filter selection logic.\n */\nexport class FilterSelection<T> {\n  /** key of currently selected option */\n  public selectedOption: string = \"\";\n\n  /**\n   * Create a FilterSelection with different options to be selected.\n   * @param name The name or id describing this filter\n   * @param options An array of different filtering variants to chose between\n   */\n  constructor(\n    public name: string,\n    public options: FilterSelectionOption<T>[]\n  ) {}\n\n  /** default filter will keep all items in the result */\n  defaultFilterFunction = (c: T) => true;\n\n  /**\n   * Get the full filter option by its key.\n   * @param key The identifier of the requested option\n   */\n  getOption(key: string): FilterSelectionOption<T> {\n    return this.options.find((option) => option.key === key);\n  }\n\n  private getFilterFunction(key: string) {\n    const option = this.getOption(key);\n\n    if (!option) {\n      return this.defaultFilterFunction;\n    } else {\n      return option.filterFun;\n    }\n  }\n\n  /**\n   * Get the filter function of the currently selected option.\n   * If no option has been selected yet, the returned filter function will keep all items in the result if applied.\n   *\n   * This can be directly used on a data array, e.g. \"data.filter(filterSelection.getFilterFunction('a'))\"\n   */\n  public getSelectedFilterFunction() {\n    return this.getFilterFunction(this.selectedOption);\n  }\n\n  /**\n   * Reset the available filter options to the ones dynamically generated from the given value to be matched.\n   *\n   * This is a utility function to make it easier to generate {@link FilterSelectionOption}s for standard cases\n   * if you simply want each option to filter items having the given attribute matching different values.\n   * If you have more sophisticated filtering needs, use the constructor to set {@link FilterSelectionOption}s that\n   * you created yourself.\n   *\n   * @param valuesToMatchAsOptions An array of values to be matched.\n   *        A separate FilterSelectionOption is created for each value with a filter\n   *        that is true of a data item's property exactly matches that value.\n   * @param attributeName The name of the property of a data item that is compared to the value in the filter function.\n   */\n  public initOptions(valuesToMatchAsOptions: any[], attributeName: string) {\n    const options = [{ key: \"\", label: \"All\", filterFun: (e: T) => true }];\n\n    valuesToMatchAsOptions.forEach((k) => {\n      options.push({\n        key: k.toLowerCase(),\n        label: k.toString(),\n        filterFun: (e: T) => e[attributeName] === k,\n      });\n    });\n\n    this.options = options;\n  }\n}\n\n/**\n * Represents one specific option to filter data in a certain way.\n * used by {@link FilterSelection}\n */\nexport interface FilterSelectionOption<T> {\n  /** identifier for this option in the parent FilterSelection instance */\n  key: string;\n\n  /** label displayed for this option to the user in the UI */\n  label: string;\n\n  /**\n   * function that filters a dataset.\n   * This filter logic will be applied to data when this option is selected.\n   */\n  filterFun: (c: T) => boolean;\n}\n","import {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n} from \"@angular/core\";\nimport { EntityMapperService } from \"../../entity/entity-mapper.service\";\nimport { Entity } from \"../../entity/entity\";\n\n/**\n * Use `<app-form-dialog-wrapper>` in your form templates to handle the saving and resetting of the edited entity.\n * This wrapper component ensures that the UI looks consistent for all forms\n * and also allows you to easily show the form in a dialog using the {@link FormDialogService}.\n *\n * @example\n <app-form-dialog-wrapper [entity]=\"myEntity\">\n   <h1>\n     <!-- h1 element is used for dialog title -->\n   </h1>\n   <form #entityForm=\"ngForm\"> <!-- marking your form with #entityForm is required -->\n     <!-- add your form fields here -->\n     <!-- save/cancel buttons are added by the wrapper automatically  -->\n   </form>\n </app-form-dialog-wrapper>\n */\n@Component({\n  selector: \"app-form-dialog-wrapper\",\n  templateUrl: \"./form-dialog-wrapper.component.html\",\n  styleUrls: [\"./form-dialog-wrapper.component.scss\"],\n})\nexport class FormDialogWrapperComponent {\n  /** entity to be edited */\n  @Input() set entity(value: Entity) {\n    this.originalEntity = Object.assign({}, value);\n    this._entity = value;\n  }\n  get entity(): Entity {\n    return this._entity;\n  }\n\n  /** actual reference to the entity to be edited in the form used by the getter/setter */\n  private _entity: Entity;\n  /** clone of the initially given entity as backup for resetting changes */\n  private originalEntity: Entity;\n\n  /**\n   * (Optional) callback before saving the entity to the database.\n   *\n   * You can here do any prerequisites or editing of the entity object if required.\n   * You can abort the saving by returning undefined.\n   */\n  @Input() beforeSave?: (entity: Entity) => Promise<Entity>;\n\n  /**\n   * Triggered when the form should be closed (after save or reset is completed).\n   *\n   * This emits the saved entity or undefined if the form was canceled.\n   */\n  @Output() onClose = new EventEmitter<Entity>();\n\n  /** ngForm component of the child component that is set through the ng-content */\n  @ContentChild(\"entityForm\", { static: true }) contentForm;\n\n  constructor(private entityMapper: EntityMapperService) {}\n\n  /**\n   * whether the contained form has been changed\n   */\n  public get isFormDirty(): boolean {\n    return this.contentForm.form.dirty;\n  }\n\n  /**\n   * Save the entity with the changes made in the current form.\n   *\n   * You can hook into the saving through the `beforeSave` Input.\n   */\n  public async save() {\n    if (this.beforeSave) {\n      const transformedEntity = await this.beforeSave(this.entity);\n      if (!transformedEntity) {\n        // abort saving\n        return;\n      }\n      this.entity = transformedEntity;\n    }\n\n    await this.entityMapper.save<Entity>(this.entity);\n    this.onClose.emit(this.entity);\n  }\n\n  /**\n   * Reset any changes made to the entity in the current form (and trigger an `onClose` event).\n   */\n  public async cancel() {\n    Object.assign(this._entity, this.originalEntity);\n    this.onClose.emit(undefined);\n  }\n}\n","<div mat-dialog-title class=\"form-dialog-title\">\n  <ng-content select=\"h1\"></ng-content>\n</div>\n\n<mat-dialog-content>\n  <ng-content select=\"form\"></ng-content>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button\n    mat-stroked-button\n    [disabled]=\"!contentForm.form.dirty\"\n    (click)=\"save()\"\n    angulartics2On=\"click\"\n    angularticsCategory=\"UserAction\"\n    angularticsAction=\"form_dialog_save\"\n  >\n    Save\n  </button>\n  <button\n    mat-stroked-button\n    (click)=\"cancel()\"\n    angulartics2On=\"click\"\n    angularticsCategory=\"UserAction\"\n    angularticsAction=\"form_dialog_cancel\"\n  >\n    Cancel\n  </button>\n</mat-dialog-actions>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { FormDialogService } from \"./form-dialog.service\";\nimport { FormDialogWrapperComponent } from \"./form-dialog-wrapper/form-dialog-wrapper.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ConfirmationDialogModule } from \"../confirmation-dialog/confirmation-dialog.module\";\nimport { Angulartics2Module } from \"angulartics2\";\n\n/**\n * A helper utility module to consistently and easily display forms\n *\n * Use the {@link FormDialogService} to display forms as a dialog hovering over the other UI.\n *\n * Use the {@link FormDialogWrapperComponent} to get generic logic and UI for saving/cancelling forms.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    FormsModule,\n    ConfirmationDialogModule,\n    Angulartics2Module,\n  ],\n  declarations: [FormDialogWrapperComponent],\n  providers: [FormDialogService],\n  exports: [FormDialogWrapperComponent],\n})\nexport class FormDialogModule {}\n","import { Injectable } from \"@angular/core\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { ComponentType } from \"@angular/cdk/overlay\";\nimport { ConfirmationDialogService } from \"../confirmation-dialog/confirmation-dialog.service\";\nimport { FormDialogWrapperComponent } from \"./form-dialog-wrapper/form-dialog-wrapper.component\";\nimport { ShowsEntity } from \"./shows-entity.interface\";\n\n/**\n * Inject this service instead of MatDialog to display a form or details view as a modal\n * (hovering over the rest of the UI).\n *\n * This takes care of generic logic like a user prompt asking whether changes should be saved before leaving the dialog.\n * Components used with this have to use {@link FormDialogWrapperComponent} and implement {@link ShowsEntity}.\n *\n * Import the {@link FormDialogModule} in your root module to provide this service.\n *\n * @example\n formDialog.openDialog(NoteDetailsComponent, noteEntity);\n */\n@Injectable()\nexport class FormDialogService {\n  constructor(\n    private dialog: MatDialog,\n    private confirmationDialog: ConfirmationDialogService\n  ) {}\n\n  openDialog<T extends ShowsEntity>(\n    entityDetailsComponent: ComponentType<T>,\n    entity: any\n  ): MatDialogRef<T> {\n    const dialogRef = this.dialog.open(entityDetailsComponent, {\n      width: \"80%\",\n    });\n    dialogRef.componentInstance.entity = entity;\n\n    const dialogWrapper = dialogRef.componentInstance.formDialogWrapper;\n    dialogWrapper.onClose.subscribe(() => dialogRef.close(true));\n\n    dialogRef.beforeClosed().subscribe((activelyClosed) => {\n      if (!activelyClosed && dialogWrapper.isFormDirty) {\n        this.confirmationDialog\n          .openDialog(\n            \"Save Changes?\",\n            \"Do you want to save the changes you made to the record?\"\n          )\n          .afterClosed()\n          .subscribe((confirmed) => {\n            if (confirmed) {\n              dialogWrapper.save();\n            } else {\n              dialogWrapper.cancel();\n            }\n          });\n      }\n    });\n\n    return dialogRef;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HowToComponent } from \"./how-to/how-to.component\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { MarkdownModule } from \"ngx-markdown\";\n\n/**\n * Display help information to users.\n */\n@NgModule({\n  declarations: [HowToComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n  ],\n})\nexport class HelpModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\n\n/**\n * Display markdown formatted help that is dynamically loaded from a file in the assets folder.\n * Displayed file: assets/How_To.md\n */\n@Component({\n  selector: \"app-help\",\n  templateUrl: \"./how-to.component.html\",\n  styleUrls: [\"./how-to.component.scss\"],\n})\nexport class HowToComponent {}\n","<div markdown src='assets/How_To.md'></div>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { LatestChangesDialogService } from \"../latest-changes-dialog.service\";\n\n/**\n * Simple component displaying the current app version\n * including functionality to open an info dialog showing the latest change when the user clicks on it.\n */\n@Component({\n  selector: \"app-version\",\n  templateUrl: \"./app-version.component.html\",\n  styleUrls: [\"./app-version.component.scss\"],\n})\nexport class AppVersionComponent implements OnInit {\n  /** the current app version */\n  currentVersion: string;\n\n  constructor(private changelogDialog: LatestChangesDialogService) {}\n\n  ngOnInit(): void {\n    this.currentVersion = this.changelogDialog.getCurrentVersion();\n  }\n\n  /**\n   * Open dialog box to display changelog information about the latest version to the user.\n   */\n  public showLatestChanges(): void {\n    this.changelogDialog.showLatestChanges();\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<div class=\"version-footer\">\n  <a (click)=\"showLatestChanges()\" style=\"cursor: pointer\">{{currentVersion}}</a>\n</div>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { Changelog } from \"../changelog\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { isObservable, Observable } from \"rxjs\";\nimport { LatestChangesService } from \"../latest-changes.service\";\n\n/**\n * Display information from the changelog for the latest version.\n *\n * This component is used as content of a dialog.\n */\n@Component({\n  templateUrl: \"./changelog.component.html\",\n  styleUrls: [\"./changelog.component.scss\"],\n})\nexport class ChangelogComponent implements OnInit {\n  /** The array of relevant changelog entries to be displayed */\n  changelogs: Changelog[];\n\n  /** Display advanced information that may not be useful to normal users */\n  showAdvancedDetails = false;\n\n  @ViewChild(\"changelogContainer\") contentContainer: ElementRef;\n\n  /**\n   * This component is to be created through a MatDialog that should pass in the relevant data.\n   *\n   * @example\n   * dialog.open(ChangelogComponent, { data: { changelogData: latestChangesService.getChangelogs() } });\n   *\n   * @param dialogRef Reference to the parent dialog.\n   * @param data Changelog data to be display initially\n   * @param latestChangesService\n   */\n  constructor(\n    public dialogRef: MatDialogRef<ChangelogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Observable<Changelog[]>,\n    private latestChangesService: LatestChangesService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data && isObservable(this.data)) {\n      this.data.subscribe((changelog) => (this.changelogs = changelog));\n    }\n  }\n\n  /**\n   * Add one more previous release card to the end of the currently displayed list of changelogs.\n   */\n  loadPreviousRelease() {\n    const lastDisplayedVersion = this.changelogs[this.changelogs.length - 1]\n      .tag_name;\n    this.latestChangesService\n      .getChangelogsBeforeVersion(lastDisplayedVersion, 1)\n      .subscribe((additionalChangelog) => {\n        this.changelogs.push(...additionalChangelog);\n\n        setTimeout(() => this.scrollToBottomOfReleases());\n      });\n  }\n\n  private scrollToBottomOfReleases() {\n    this.contentContainer.nativeElement.scrollTop = this.contentContainer.nativeElement.scrollHeight;\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n\n<h1 mat-dialog-title>Latest Changes</h1>\n\n<mat-dialog-content #changelogContainer>\n  <mat-card *ngFor=\"let changelog of changelogs\" class=\"mat-elevation-z3\">\n    <mat-card-header>\n      <mat-card-title>{{ changelog ? changelog.name : \"No Changelog Available\" }}</mat-card-title>\n      <mat-card-subtitle>\n        <span class=\"meta-info\"><mat-icon fontIcon=\"fa-calendar-o\"></mat-icon>{{ changelog?.published_at | date }}</span>\n        <span class=\"meta-info\"><mat-icon fontIcon=\"fa-tag\"></mat-icon>{{ changelog?.tag_name }}</span>\n      </mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      <markdown [data]=\"changelog?.body\"></markdown>\n    </mat-card-content>\n\n    <mat-card-actions *ngIf=\"showAdvancedDetails\">\n      <button mat-stroked-button><a [href]=\"'https://www.github.com'\" target=\"_blank\">More Information</a></button>\n    </mat-card-actions>\n  </mat-card>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"general-actions\">\n  <button mat-raised-button (click)=\"loadPreviousRelease()\">Show previous changes</button>\n  <button mat-raised-button color=\"accent\" [mat-dialog-close]=\"true\">Close</button>\n</mat-dialog-actions>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ChangelogComponent } from \"./changelog/changelog.component\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { environment } from \"../../../environments/environment\";\nimport { LatestChangesService } from \"./latest-changes.service\";\n\n/**\n * Manage the changelog information and display it to the user\n * on request or automatically on the first visit of a new version after update.\n */\n@Injectable()\nexport class LatestChangesDialogService {\n  private static COOKIE_NAME = \"AppVersion\";\n\n  constructor(\n    private dialog: MatDialog,\n    private cookieService: CookieService,\n    private latestChangesService: LatestChangesService\n  ) {}\n\n  /**\n   * Get current app version inferred from the latest changelog entry.\n   */\n  getCurrentVersion(): string {\n    return environment.appVersion;\n  }\n\n  /**\n   * Open a modal window displaying the changelog of the latest version.\n   * @param previousVersion (Optional) previous version back to which all changes should be displayed\n   */\n  public showLatestChanges(previousVersion?: string): void {\n    this.dialog.open(ChangelogComponent, {\n      width: \"80%\",\n      data: this.latestChangesService.getChangelogsBetweenVersions(\n        this.getCurrentVersion(),\n        previousVersion\n      ),\n    });\n  }\n\n  /**\n   * Display the latest changes info box automatically if the current user has not seen this version before.\n   */\n  public showLatestChangesIfUpdated() {\n    if (this.cookieService.check(LatestChangesDialogService.COOKIE_NAME)) {\n      const previousVersion = this.cookieService.get(\n        LatestChangesDialogService.COOKIE_NAME\n      );\n      if (this.getCurrentVersion() !== previousVersion) {\n        this.showLatestChanges(previousVersion);\n      }\n    }\n    this.cookieService.set(\n      LatestChangesDialogService.COOKIE_NAME,\n      this.getCurrentVersion()\n    );\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { AppVersionComponent } from \"./app-version/app-version.component\";\nimport { AlertsModule } from \"../alerts/alerts.module\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { SessionModule } from \"../session/session.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { ChangelogComponent } from \"./changelog/changelog.component\";\nimport { SwUpdate } from \"@angular/service-worker\";\nimport { UpdateManagerService } from \"./update-manager.service\";\nimport { FlexModule } from \"@angular/flex-layout\";\nimport { MarkdownModule } from \"ngx-markdown\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { LatestChangesDialogService } from \"./latest-changes-dialog.service\";\nimport { LatestChangesService } from \"./latest-changes.service\";\n\n/**\n * Displaying app version and changelog information to the user\n * through components that can be used in other templates\n * as well as automatic popups on updates (see {@link UpdateManagerService}, {@link LatestChangesService}).\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    AlertsModule,\n    SessionModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FlexModule,\n    MarkdownModule,\n    MatIconModule,\n    MatCardModule,\n  ],\n  declarations: [AppVersionComponent, ChangelogComponent],\n  exports: [AppVersionComponent],\n  providers: [\n    LatestChangesService,\n    LatestChangesDialogService,\n    UpdateManagerService,\n  ],\n})\nexport class LatestChangesModule {\n  constructor(\n    private updates: SwUpdate,\n    private latestChangesDialogService: LatestChangesDialogService,\n    private updateManagerService: UpdateManagerService\n  ) {\n    this.latestChangesDialogService.showLatestChangesIfUpdated();\n\n    this.updateManagerService.notifyUserWhenUpdateAvailable();\n    this.updateManagerService.regularlyCheckForUpdates();\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { catchError, map } from \"rxjs/operators\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { Changelog } from \"./changelog\";\nimport { AlertService } from \"../alerts/alert.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\n\n/**\n * Manage the changelog information and display it to the user\n * on request or automatically on the first visit of a new version after update.\n */\n@Injectable()\nexport class LatestChangesService {\n  private static GITHUB_API = \"https://api.github.com/repos/\";\n\n  constructor(private http: HttpClient, private alertService: AlertService) {}\n\n  /**\n   * Load the changelog information of changes since the last update.\n   * @param currentVersion The current version for which changes are to be loaded.\n   * @param previousVersion (Optional) The older version since which changes of all versions until the currentVersion will be loaded.\n   */\n  getChangelogsBetweenVersions(\n    currentVersion: string,\n    previousVersion?: string\n  ): Observable<Changelog[]> {\n    return this.getChangelogs((releases: any[]) =>\n      this.filterReleasesBetween(releases, currentVersion, previousVersion)\n    );\n  }\n\n  private filterReleasesBetween(\n    releases: any[],\n    currentVersion: string,\n    previousVersion?: string\n  ) {\n    let relevantReleases;\n\n    const releasesUpToCurrentVersion = releases.filter(\n      (r) => r.tag_name <= currentVersion\n    );\n    if (releasesUpToCurrentVersion.length < 1) {\n      return [];\n    }\n\n    if (previousVersion) {\n      const releasesBackToPreviousVersion = releasesUpToCurrentVersion.filter(\n        (r) => r.tag_name > previousVersion\n      );\n      relevantReleases = releasesBackToPreviousVersion.sort((a, b) =>\n        (b.tag_name as string).localeCompare(a.tag_name, \"en\")\n      );\n    } else {\n      relevantReleases = [releasesUpToCurrentVersion[0]];\n    }\n\n    return relevantReleases;\n  }\n\n  /**\n   * Load the changelog information of a number of releases before (excluding) the given version.\n   * @param version The version for which preceding releases should be returned.\n   * @param count The number of releases before the given version to be returned\n   */\n  getChangelogsBeforeVersion(\n    version: string,\n    count: number\n  ): Observable<Changelog[]> {\n    return this.getChangelogs((releases: any) =>\n      this.filterReleasesBefore(releases, version, count)\n    );\n  }\n\n  private filterReleasesBefore(\n    releases: any[],\n    version: string,\n    count: number\n  ) {\n    let relevantReleases;\n\n    const releasesUpToCurrentVersion = releases.filter(\n      (r) => r.tag_name < version\n    );\n    if (releasesUpToCurrentVersion.length < 1) {\n      return [];\n    }\n\n    relevantReleases = releasesUpToCurrentVersion.sort((a, b) =>\n      (b.tag_name as string).localeCompare(a.tag_name, \"en\")\n    );\n    return relevantReleases.slice(0, count);\n  }\n\n  /**\n   * Load release information from GitHub based on a given filter to select relevant releases.\n   * @param releaseFilter Filter function that is selecting relevant objects from the array of GitHub releases\n   */\n  private getChangelogs(releaseFilter: ([]) => any[]): Observable<Changelog[]> {\n    return this.http\n      .get<any[]>(\n        LatestChangesService.GITHUB_API + environment.repositoryId + \"/releases\"\n      )\n      .pipe(\n        map(releaseFilter),\n        map((relevantReleases) =>\n          relevantReleases.map((r) => this.parseGithubApiRelease(r))\n        ),\n        catchError((error) => {\n          this.alertService.addWarning(\n            \"Could not load latest changes: \" + error\n          );\n          return throwError(\"Could not load latest changes.\");\n        })\n      );\n  }\n\n  private parseGithubApiRelease(githubResponse: any): Changelog {\n    const releaseNotesWithoutHeading = githubResponse.body.replace(\n      /#{1,2}[^###]*/,\n      \"\"\n    );\n    const releaseNotesWithoutCommitRefs = releaseNotesWithoutHeading.replace(\n      / \\(\\[\\w{7}\\]\\([^\\)]*\\)\\)/g,\n      \"\"\n    );\n\n    return {\n      tag_name: githubResponse.tag_name,\n      name: githubResponse.name,\n      published_at: githubResponse.published_at,\n      body: releaseNotesWithoutCommitRefs,\n    };\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { ApplicationRef, Injectable } from \"@angular/core\";\nimport { SwUpdate } from \"@angular/service-worker\";\nimport { first } from \"rxjs/operators\";\nimport { concat, interval } from \"rxjs\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { LoggingService } from \"../logging/logging.service\";\n\n/**\n * Check with the server whether a new version of the app is available in order to notify the user.\n *\n * As we are using ServiceWorkers to cache the app to also work offline, explicit checking for updates is necessary.\n * The user receives a toast (hover message) if an update is available\n * and can click that to reload the app with the new version.\n */\n@Injectable()\nexport class UpdateManagerService {\n  private notificationRef;\n\n  constructor(\n    private appRef: ApplicationRef,\n    private updates: SwUpdate,\n    private snackBar: MatSnackBar,\n    private logger: LoggingService\n  ) {}\n\n  /**\n   * Display a notification to the user in case a new app version is detected by the ServiceWorker.\n   */\n  public notifyUserWhenUpdateAvailable() {\n    if (!this.updates.isEnabled) {\n      return;\n    }\n\n    this.updates.available.subscribe(() => {\n      this.showUpdateNotification();\n    });\n  }\n\n  /**\n   * Schedule a regular check with the server for updates.\n   */\n  public regularlyCheckForUpdates() {\n    if (!this.updates.isEnabled) {\n      return;\n    }\n\n    // Allow the app to stabilize first, before starting polling for updates with `interval()`.\n    const appIsStable$ = this.appRef.isStable.pipe(\n      first((isStable) => isStable === true)\n    );\n    const everyHours$ = interval(60 * 60 * 1000);\n    const everyHoursOnceAppIsStable$ = concat(appIsStable$, everyHours$);\n\n    everyHoursOnceAppIsStable$.subscribe(async () => {\n      try {\n        await this.updates.checkForUpdate();\n      } catch (err) {\n        this.logger.error(err);\n      }\n    });\n  }\n\n  private showUpdateNotification() {\n    this.notificationRef = this.snackBar.open(\n      \"A new version of the app is available!\",\n      \"Update\"\n    );\n    this.notificationRef.onAction().subscribe(() => {\n      location.reload();\n    });\n  }\n}\n","/**\n * Log level indicates the context and severity of a message.\n */\nexport enum LogLevel {\n  /** for development and analysis */\n  DEBUG,\n\n  /** event during the regular functioning of the app */\n  INFO,\n\n  /** unexpected event that can still be handled */\n  WARN,\n\n  /** critical unexpected event that will affect the functioning of the app */\n  ERROR,\n}\n","import { ErrorHandler, Injectable } from \"@angular/core\";\nimport { LoggingService } from \"./logging.service\";\n\n/**\n * A simple ErrorHandler that logs any unhandled errors that occur in the app.\n * This is particularly useful if remote error logging with Sentry is set up so the development team receives such info.\n *\n * To enable this, add it as an ErrorHandler provider to your main AppModule's \"providers\" list:\n *\n * @example\n * { provide: ErrorHandler, useClass: LoggingErrorHandler }\n */\n@Injectable()\nexport class LoggingErrorHandler implements ErrorHandler {\n  constructor(private logger: LoggingService) {}\n\n  /**\n   * Handle until now uncaught error by logging it.\n   * @param error\n   */\n  handleError(error) {\n    this.logger.error(error);\n    // It is possible to show a feedback dialog to the user through Sentry:\n    // const eventId = Sentry.captureException(error.originalError || error);\n    // Sentry.showReportDialog({ eventId });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { LogLevel } from \"./log-level\";\nimport * as Sentry from \"@sentry/browser\";\nimport { environment } from \"../../../environments/environment\";\n\n/* tslint:disable:no-console */\n\n/**\n * Centrally managed logging to allow log messages to be filtered by level and even sent to a remote logging service\n * that allows developers to monitor and analyse problems.\n *\n * Logging to the remote monitoring server is set only for warnings and errors.\n *\n * To allow remote logging, call Sentry.init during bootstrap in your AppModule or somewhere early on during startup.\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class LoggingService {\n  /**\n   * Initialize the remote logging module with the given options.\n   * If set up this will be used to send errors to a remote endpoint for analysis.\n   * @param options\n   */\n  static initRemoteLogging(options: any) {\n    if (!options.dsn) {\n      // abort if no target url is set\n      return;\n    }\n\n    const defaultOptions = {\n      release: \"ndb-core@\" + environment.appVersion,\n    };\n    Sentry.init(Object.assign(defaultOptions, options));\n  }\n\n  /**\n   * Update a piece of context information that will be attached to all log messages for easier debugging,\n   * especially in remote logging.\n   * @param tagName Identifier of the key-value pair\n   * @param value Value of the key-value pair\n   */\n  static setLoggingContext(tagName: string, value: any) {\n    Sentry.configureScope((scope) => {\n      scope.setTag(tagName, value);\n    });\n  }\n\n  /**\n   * Update the username to be attached to all log messages for easier debugging,\n   * especially in remote logging.\n   * @param username\n   */\n  static setLoggingContextUser(username: string) {\n    Sentry.setUser({ username: username });\n  }\n\n  /**\n   * Log the message with \"debug\" level - for very detailed, non-essential information.\n   * @param message\n   */\n  public debug(message: any) {\n    this.log(message, LogLevel.DEBUG);\n  }\n\n  /**\n   * Log the message with \"info\" level - for relevant information that occurs during regular functioning of the app.\n   * @param message\n   */\n  public info(message: any) {\n    this.log(message, LogLevel.INFO);\n  }\n\n  /**\n   * Log the message with \"warning\" level - for unexpected events that the app can still handle gracefully.\n   * @param message\n   */\n  public warn(message: any) {\n    this.log(message, LogLevel.WARN);\n  }\n\n  /**\n   * Log the message with \"error\" level - for unexpected critical events that cannot be handled and will affect functions.\n   * @param message\n   */\n  public error(message: any) {\n    this.log(message, LogLevel.ERROR);\n  }\n\n  /**\n   * Generic logging of a message.\n   * @param message Message to be logged\n   * @param logLevel Optional log level - default is \"info\"\n   */\n  public log(message: any, logLevel: LogLevel = LogLevel.INFO) {\n    this.logToConsole(message, logLevel);\n\n    if (logLevel !== LogLevel.DEBUG && logLevel !== LogLevel.INFO) {\n      this.logToRemoteMonitoring(message, logLevel);\n    }\n  }\n\n  private logToConsole(message: any, logLevel: LogLevel) {\n    switch (+logLevel) {\n      case LogLevel.DEBUG:\n        console.debug(message);\n        break;\n      case LogLevel.INFO:\n        console.info(message);\n        break;\n      case LogLevel.WARN:\n        console.warn(message);\n        break;\n      case LogLevel.ERROR:\n        console.error(message);\n        break;\n      default:\n        console.log(message);\n        break;\n    }\n  }\n\n  private logToRemoteMonitoring(message: any, logLevel: LogLevel) {\n    Sentry.captureMessage(message, this.translateLogLevel(logLevel));\n  }\n\n  private translateLogLevel(logLevel: LogLevel): Sentry.Severity {\n    switch (+logLevel) {\n      case LogLevel.DEBUG:\n        return Sentry.Severity.Debug;\n      case LogLevel.INFO:\n        return Sentry.Severity.Info;\n      case LogLevel.WARN:\n        return Sentry.Severity.Warning;\n      case LogLevel.ERROR:\n        return Sentry.Severity.Error;\n      default:\n        return Sentry.Severity.Info;\n    }\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Structure for menu items to be displayed.\n *\n * also see {@link NavigationItemsService}\n */\nexport class MenuItem {\n  /**\n   * Create a menu item.\n   * @param label The text to be displayed in the menu.\n   * @param icon The icon to be displayed left of the label.\n   * @param routerLinkParameters The Angular routerLink parameters to which the item will route to (e.g. ['/dashboard'])\n   * @param requiresAdmin Whether the menu item is only visible for users with admin rights.\n   */\n  constructor(\n    public label: string,\n    public icon: string,\n    public routerLinkParameters: any[],\n    public requiresAdmin: boolean = false\n  ) {}\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { ConfigService } from \"../config/config.service\";\nimport { MenuItem } from \"./menu-item\";\nimport { NavigationMenuConfig } from \"./navigation-menu-config.interface\";\n\n/**\n * Manage menu items to be displayed in the main app menu.\n *\n * Inject this service in your classes to add your own custom menu entries.\n */\n@Injectable()\nexport class NavigationItemsService {\n  private readonly CONFIG_ID = \"navigationMenu\";\n  private menuItems: MenuItem[] = [];\n\n  constructor(private configService: ConfigService) {\n    this.initMenuItemsFromConfig();\n  }\n\n  private initMenuItemsFromConfig() {\n    const config: NavigationMenuConfig = this.configService.getConfig<\n      NavigationMenuConfig\n    >(this.CONFIG_ID);\n    for (const configItem of config.items) {\n      this.addMenuItem(\n        new MenuItem(\n          configItem.name,\n          configItem.icon,\n          [configItem.link],\n          this.checkMenuItemPermissions(configItem.link)\n        )\n      );\n    }\n  }\n\n  /**\n   * Check whether the given path requires admin rights\n   */\n  private checkMenuItemPermissions(link: string): boolean {\n    const viewConfig = this.configService.getConfig<any>(\n      ConfigService.PREFIX_VIEW_CONFIG + link\n    );\n    return viewConfig?.requiresAdmin;\n  }\n\n  /**\n   * Get all registered menu items.\n   */\n  public getMenuItems(): MenuItem[] {\n    return this.menuItems;\n  }\n\n  /**\n   * Register a new menu item to be display in the menu.\n   * @param menuItem\n   */\n  public addMenuItem(menuItem: MenuItem) {\n    this.menuItems.push(menuItem);\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NavigationComponent } from \"./navigation/navigation.component\";\nimport { SessionModule } from \"../session/session.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { NavigationItemsService } from \"./navigation-items.service\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { Angulartics2Module } from \"angulartics2\";\nimport { ConfigModule } from \"../config/config.module\";\n\n/**\n * Manages the main app navigation menu\n * which can dynamically be configured through the {@link NavigationItemsService}.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    SessionModule,\n    RouterModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    Angulartics2Module,\n    ConfigModule,\n  ],\n  declarations: [NavigationComponent],\n  exports: [NavigationComponent],\n  providers: [NavigationItemsService],\n})\nexport class NavigationModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { MenuItem } from \"../menu-item\";\nimport { NavigationItemsService } from \"../navigation-items.service\";\nimport { AdminGuard } from \"../../admin/admin.guard\";\n\n/**\n * Main app menu listing.\n *\n * To add new entries use {@link NavigationItemsService}.\n */\n@Component({\n  selector: \"app-navigation\",\n  templateUrl: \"./navigation.component.html\",\n  styleUrls: [\"./navigation.component.scss\"],\n})\nexport class NavigationComponent implements OnInit {\n  /** all menu items to be displayed */\n  public menu_main: MenuItem[];\n\n  constructor(\n    private _navigationItemService: NavigationItemsService,\n    private adminGuard: AdminGuard\n  ) {}\n\n  ngOnInit(): void {\n    this.menu_main = this._navigationItemService\n      .getMenuItems()\n      .filter((e) => !e.requiresAdmin || this.adminGuard.isAdmin());\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-nav-list>\n  <mat-list-item\n    angulartics2On=\"click\"\n    angularticsCategory=\"Navigation\"\n    angularticsAction=\"app_navigation_link_click\"\n    [angularticsLabel]=\"item.label\"\n    *ngFor=\"let item of menu_main\"\n    [routerLink]=\"item.routerLinkParameters\"\n  >\n    <a\n      ><mat-icon class=\"nav-icon\" fontIcon=\"fa-{{ item.icon }}\"></mat-icon\n      >{{ item.label }}</a\n    >\n    <mat-divider></mat-divider>\n  </mat-list-item>\n</mat-nav-list>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { CanActivate } from \"@angular/router\";\nimport { SessionService } from \"../session-service/session.service\";\n\n/**\n * Angular guard to prevent routing if no user is currently logged in.\n */\n@Injectable()\nexport class LoggedInGuard implements CanActivate {\n  constructor(private _sessionService: SessionService) {}\n\n  /**\n   * Allow if a user is logged in currently.\n   */\n  canActivate() {\n    return this._sessionService.isLoggedIn();\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { SyncState } from \"../session-states/sync-state.enum\";\nimport { SessionService } from \"../session-service/session.service\";\nimport { LoginState } from \"../session-states/login-state.enum\";\nimport { ConnectionState } from \"../session-states/connection-state.enum\";\n\n/**\n * Form to allow users to enter their credentials and log in.\n */\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent {\n  /** true while a login is started but result is not received yet */\n  loginInProgress = false;\n\n  /** username as entered in form */\n  username: string;\n\n  /** password as entered in form */\n  password: string;\n\n  /** errorMessage displayed in form */\n  errorMessage: string;\n\n  constructor(private _sessionService: SessionService) {}\n\n  /**\n   * Do a login with the SessionService.\n   */\n  login() {\n    this.loginInProgress = true;\n\n    this._sessionService\n      .login(this.username, this.password)\n      .then((loginState) => {\n        if (loginState === LoginState.LOGGED_IN) {\n          this.onLoginSuccess();\n        } else {\n          if (\n            this._sessionService.getSyncState().getState() ===\n              SyncState.ABORTED &&\n            this._sessionService.getConnectionState().getState() ===\n              ConnectionState.OFFLINE\n          ) {\n            this.onLoginFailure(\n              \"Can't login for the first time when offline. Please try again later.\"\n            );\n          } else if (\n            this._sessionService.getConnectionState().getState() ===\n            ConnectionState.OFFLINE\n          ) {\n            this.onLoginFailure(\n              \"Username or password incorrect!\" +\n                \" You might also face this problem because you are currently offline.\" +\n                \" Please connect to the internet to synchronize the latest user data.\"\n            );\n          } else {\n            this.onLoginFailure(\"Username or password incorrect!\");\n          }\n        }\n      })\n      .catch((reason) =>\n        this.onLoginFailure(\n          typeof reason === \"string\" ? reason : JSON.stringify(reason)\n        )\n      );\n  }\n\n  private onLoginSuccess() {\n    this.reset();\n    // login component is automatically hidden based on _sessionService.isLoggedIn()\n  }\n\n  private onLoginFailure(reason: any) {\n    this.reset();\n    this.errorMessage = reason;\n  }\n\n  private reset() {\n    this.errorMessage = \"\";\n    this.password = \"\";\n    this.loginInProgress = false;\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-card class=\"login-panel centered\">\n  <mat-card-title>\n    Please Sign In\n  </mat-card-title>\n\n\n  <mat-card-content>\n    <form>\n      <p class=\"login-error\">\n        {{errorMessage}}\n      </p>\n\n      <p>\n        <mat-form-field class=\"login-field\">\n          <input matInput placeholder=\"Username\" type=\"text\" [(ngModel)]=\"username\" (keyup.enter)=\"login()\" required autofocus\n                 name=\"username\" autocomplete=\"username\">\n          <mat-error>{{errorMessage}}</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field class=\"login-field\">\n          <input matInput placeholder=\"Password\" type=\"password\" [(ngModel)]=\"password\" (keyup.enter)=\"login()\" required\n                 name=\"password\" autocomplete=\"current-password\">\n        </mat-form-field>\n      </p>\n\n      <p>\n        <button mat-raised-button type=\"submit\" [disabled]=\"loginInProgress\" (click)=\"login()\">\n          Login\n        </button>\n      </p>\n    </form>\n  </mat-card-content>\n</mat-card>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport PouchDB from \"pouchdb-browser\";\n\nimport { Injectable } from \"@angular/core\";\n\nimport { AppConfig } from \"../../app-config/app-config\";\nimport { User } from \"../../user/user\";\n\nimport { SyncState } from \"../session-states/sync-state.enum\";\nimport { LoginState } from \"../session-states/login-state.enum\";\nimport { StateHandler } from \"../session-states/state-handler\";\nimport { EntitySchemaService } from \"app/core/entity/schema/entity-schema.service\";\nimport { AlertService } from \"app/core/alerts/alert.service\";\nimport { LoggingService } from \"../../logging/logging.service\";\nimport { AnalyticsService } from \"../../analytics/analytics.service\";\n\n/**\n * Responsibilities:\n * - Hold the local DB\n * - Hold local user\n * - Check credentials against DB\n * - Provide the state of the synchronisation of the local db\n *   - we want to block before the first full sync\n * - Provide an interface to access the data\n */\n@Injectable()\nexport class LocalSession {\n  /** local (IndexedDb) database PouchDB */\n  public database: any;\n  public liveSyncHandle: any;\n\n  /** StateHandler for login state changes */\n  public loginState: StateHandler<LoginState>;\n  /** StateHandler for sync state changes */\n  public syncState: StateHandler<SyncState>;\n\n  /** The currently authenticated user entity */\n  public currentUser: User;\n\n  /**\n   * Create a LocalSession and set up the local PouchDB instance based on AppConfig settings.\n   * @param _alertService\n   * @param _entitySchemaService\n   * @param _analyticsService\n   */\n  constructor(\n    private _alertService: AlertService,\n    private _entitySchemaService: EntitySchemaService\n  ) {\n    this.database = new PouchDB(AppConfig.settings.database.name);\n\n    this.loginState = new StateHandler<LoginState>(LoginState.LOGGED_OUT);\n    this.syncState = new StateHandler<SyncState>(SyncState.UNSYNCED);\n  }\n\n  /**\n   * Get a login at the local session by fetching the user from the local database and validating the password.\n   * Returns a Promise resolving with the loginState.\n   * Attention: This method waits for the first synchronisation of the database (or a fail of said initial sync).\n   * @param username Username\n   * @param password Password\n   */\n  public async login(username: string, password: string): Promise<LoginState> {\n    try {\n      await this.waitForFirstSync();\n      const userEntity = await this.loadUser(username);\n      if (userEntity.checkPassword(password)) {\n        this.currentUser = userEntity;\n        this.currentUser.decryptCloudPassword(password);\n        LoggingService.setLoggingContextUser(this.currentUser.name);\n        AnalyticsService.setUser(this.currentUser.name);\n        AnalyticsService.eventTrack(\"user_login\", {\n          category: \"Auth\",\n          label: \"successful\",\n          value: 1,\n        });\n        this.loginState.setState(LoginState.LOGGED_IN);\n        return LoginState.LOGGED_IN;\n      } else {\n        this.loginState.setState(LoginState.LOGIN_FAILED);\n        AnalyticsService.eventTrack(\"user_login\", {\n          category: \"Auth\",\n          label: \"failed_wrong_credentials\",\n          value: 0,\n        });\n        return LoginState.LOGIN_FAILED;\n      }\n    } catch (error) {\n      // possible error: initial sync failed or aborted\n      if (\n        error &&\n        error.toState &&\n        [SyncState.ABORTED, SyncState.FAILED].includes(error.toState)\n      ) {\n        if (this.loginState.getState() === LoginState.LOGIN_FAILED) {\n          AnalyticsService.eventTrack(\"user_login\", {\n            category: \"Auth\",\n            label: \"failed_sync_failed_remote_reject\",\n            value: 10,\n          });\n          // The sync failed because the remote rejected\n          return LoginState.LOGIN_FAILED;\n        }\n        AnalyticsService.eventTrack(\"user_login\", {\n          category: \"Auth\",\n          label: \"failed_sync_failed_unknown\",\n          value: 20,\n        });\n        // The sync failed for other reasons. The user should try again\n        this.loginState.setState(LoginState.LOGGED_OUT);\n        return LoginState.LOGGED_OUT;\n      }\n      // possible error: user object not found locally, which should return loginFailed.\n      if (error && error.status && error.status === 404) {\n        AnalyticsService.eventTrack(\"user_login\", {\n          category: \"Auth\",\n          label: \"failed\",\n          value: 30,\n        });\n        this.loginState.setState(LoginState.LOGIN_FAILED);\n        return LoginState.LOGIN_FAILED;\n      }\n      // all other cases must throw an error\n      throw error;\n    }\n  }\n\n  /**\n   * Wait for the first sync of the database, returns a Promise.\n   * Resolves directly, if the database is not initial, otherwise waits for the first change of the SyncState to completed (or failed)\n   */\n  public async waitForFirstSync() {\n    if (await this.isInitial()) {\n      return await this.syncState.waitForChangeTo(SyncState.COMPLETED, [\n        SyncState.FAILED,\n        SyncState.ABORTED,\n      ]);\n    }\n  }\n\n  /**\n   * Check whether the local database is in an initial state.\n   * This check can only be performed async, so this method returns a Promise\n   */\n  public isInitial(): Promise<Boolean> {\n    // `doc_count === 0 => initial` is a valid assumptions, as documents for users must always be present, even after db-clean\n    return this.database.info().then((result) => result.doc_count === 0);\n  }\n\n  /**\n   * Logout\n   */\n  public logout() {\n    this.currentUser = undefined;\n    AnalyticsService.eventTrack(\"user_logout\", {\n      category: \"Auth\",\n      label: \"successful\",\n      value: 1,\n    });\n    this.loginState.setState(LoginState.LOGGED_OUT);\n  }\n\n  /**\n   * Helper to get a User Entity from the Database without needing the EntityMapperService\n   * @param userId Id of the User to be loaded\n   */\n  public async loadUser(userId: string): Promise<User> {\n    const user = new User(\"\");\n    const userData = await this.database.get(\"User:\" + userId);\n    this._entitySchemaService.loadDataIntoEntity(user, userData);\n    return user;\n  }\n}\n","import { SessionService } from \"./session.service\";\nimport { User } from \"app/core/user/user\";\nimport { StateHandler } from \"../session-states/state-handler\";\nimport { ConnectionState } from \"../session-states/connection-state.enum\";\nimport { LoginState } from \"../session-states/login-state.enum\";\nimport { SyncState } from \"../session-states/sync-state.enum\";\nimport { MockDatabase } from \"app/core/database/mock-database\";\nimport { Database } from \"app/core/database/database\";\nimport { EntitySchemaService } from \"app/core/entity/schema/entity-schema.service\";\n\n/**\n * SessionService implementation for testing and demo purposes.\n * The MockSessionService does not set up a remote connection or sync and only creates an in-memory database,\n * which will lose any changes after closing the browser.\n *\n * Set `\"database\": { \"useTemporaryDatabase\": true }` in your app-config.json\n * to use the MockSessionService which will also generate demo data.\n *\n * For an CouchDB/PouchDB sync based session implementation see {@link SyncedSessionService}\n */\nexport class MockSessionService extends SessionService {\n  private database: MockDatabase;\n  private currentUser: User;\n  private loginState: StateHandler<LoginState> = new StateHandler<LoginState>(\n    LoginState.LOGGED_OUT\n  );\n  private connectionState: StateHandler<ConnectionState> = new StateHandler<\n    ConnectionState\n  >(ConnectionState.DISCONNECTED);\n  private syncState: StateHandler<SyncState> = new StateHandler<SyncState>(\n    SyncState.UNSYNCED\n  );\n\n  constructor(private _entitySchemaService: EntitySchemaService) {\n    super();\n    this.database = new MockDatabase();\n  }\n\n  /** see {@link SessionService} */\n  public getCurrentUser(): User {\n    return this.currentUser;\n  }\n\n  /** see {@link SessionService} */\n  public isLoggedIn(): boolean {\n    return this.loginState.getState() === LoginState.LOGGED_IN;\n  }\n  /** see {@link SessionService} */\n  public getConnectionState(): StateHandler<ConnectionState> {\n    return this.connectionState;\n  }\n  /** see {@link SessionService} */\n  public getLoginState(): StateHandler<LoginState> {\n    return this.loginState;\n  }\n  /** see {@link SessionService} */\n  public getSyncState(): StateHandler<SyncState> {\n    return this.syncState;\n  }\n  /** see {@link SessionService} */\n  public getDatabase(): Database {\n    return this.database;\n  }\n\n  /**\n   * Log in the given user.\n   * Checks the in-memory database for User Entities to authenticate against.\n   *\n   * also see {@link SessionService}\n   */\n  public async login(username, password): Promise<LoginState> {\n    try {\n      const userEntity = await this.loadUser(username);\n      if (userEntity.checkPassword(password)) {\n        this.loginState.setState(LoginState.LOGGED_IN);\n        this.connectionState.setState(ConnectionState.CONNECTED);\n        this.currentUser = userEntity;\n        this.currentUser.decryptCloudPassword(password);\n        setTimeout(() => this.sync(), 0);\n        return LoginState.LOGGED_IN;\n      } else {\n        this.loginState.setState(LoginState.LOGIN_FAILED);\n        this.connectionState.setState(ConnectionState.REJECTED);\n        return LoginState.LOGIN_FAILED;\n      }\n    } catch (error) {\n      // possible error: user object not found locally, which should return loginFailed.\n      if (error && error.status && error.status === 404) {\n        this.loginState.setState(LoginState.LOGIN_FAILED);\n        this.connectionState.setState(ConnectionState.REJECTED);\n        return LoginState.LOGIN_FAILED;\n      }\n      // all other cases must throw an error\n      throw error;\n    }\n  }\n  /** see {@link SessionService} */\n  public logout(): void {\n    this.loginState.setState(LoginState.LOGGED_OUT);\n    this.connectionState.setState(ConnectionState.DISCONNECTED);\n  }\n\n  /**\n   * Dummy implementation, will trigger syncState to quickly switch to SyncState.COMPLETED.\n   */\n  public sync(): Promise<any> {\n    this.syncState.setState(SyncState.STARTED);\n    return new Promise((resolve) =>\n      setTimeout(() => {\n        this.syncState.setState(SyncState.COMPLETED);\n        resolve();\n      }, 0)\n    );\n  }\n\n  /**\n   * Helper to get a User Entity from the Database without needing the EntityMapperService\n   * @param userId Id of the User to be loaded\n   */\n  public async loadUser(userId: string): Promise<User> {\n    const user = new User(\"\");\n    const userData = await this.database.get(\"User:\" + userId);\n    this._entitySchemaService.loadDataIntoEntity(user, userData);\n    return user;\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport PouchDB from \"pouchdb-browser\";\nimport PouchDBAuthentication from \"pouchdb-authentication\";\n\nimport { AppConfig } from \"../../app-config/app-config\";\nimport { Injectable } from \"@angular/core\";\nimport { StateHandler } from \"../session-states/state-handler\";\nimport { ConnectionState } from \"../session-states/connection-state.enum\";\n\nPouchDB.plugin(PouchDBAuthentication);\n\n/**\n * Responsibilities:\n * - Hold the remote DB\n * - Handle auth\n * - provide \"am i online\"-info\n */\n@Injectable()\nexport class RemoteSession {\n  /** remote (!) database PouchDB */\n  public database: any;\n\n  /** state of the remote connection */\n  public connectionState: StateHandler<ConnectionState> = new StateHandler<\n    ConnectionState\n  >(ConnectionState.DISCONNECTED);\n\n  /**\n   * Create a RemoteSession and set up connection to the remote database CouchDB server configured in AppConfig.\n   */\n  constructor() {\n    const thisRemoteSession = this;\n    this.database = new PouchDB(\n      AppConfig.settings.database.remote_url + AppConfig.settings.database.name,\n      {\n        ajax: {\n          rejectUnauthorized: false,\n          timeout: AppConfig.settings.database.timeout,\n        },\n        // This is a workaround for PouchDB 7.0.0 with pouchdb-authentication 1.1.3:\n        // https://github.com/pouchdb-community/pouchdb-authentication/issues/239\n        // It is necessary, until this merged PR will be published in PouchDB 7.0.1\n        // https://github.com/pouchdb/pouchdb/pull/7395\n        fetch(url, opts) {\n          opts.credentials = \"include\";\n          const req = fetch(url, opts);\n          req.then((result) => {\n            if (\n              thisRemoteSession.connectionState.getState() ===\n              ConnectionState.OFFLINE\n            ) {\n              thisRemoteSession.connectionState.setState(\n                ConnectionState.CONNECTED\n              );\n            }\n            return result;\n          });\n          req.catch((error) => {\n            // fetch will throw on network errors, giving us a chance to check the online status\n            // if we are offline at the start, this will already be set on login, so we need not check that initial condition here\n            // do not set offline on AbortErrors, as these are fine:\n            // https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Exceptions\n            if (\n              error.name !== \"AbortError\" &&\n              thisRemoteSession.connectionState.getState() ===\n                ConnectionState.CONNECTED\n            ) {\n              thisRemoteSession.connectionState.setState(\n                ConnectionState.OFFLINE\n              );\n            }\n            throw error;\n          });\n          return req;\n        },\n        skip_setup: true,\n      } as PouchDB.Configuration.RemoteDatabaseConfiguration\n    );\n  }\n\n  /**\n   * Connect to the remote Database. Tries to determine from a possible error whether the login was rejected or the user is offline.\n   * @param username Username\n   * @param password Password\n   */\n  public async login(\n    username: string,\n    password: string\n  ): Promise<ConnectionState> {\n    const ajaxOpts = {\n      ajax: {\n        headers: {\n          Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n        },\n      },\n    };\n\n    try {\n      await this.database.login(username, password, ajaxOpts);\n      this.connectionState.setState(ConnectionState.CONNECTED);\n      return ConnectionState.CONNECTED;\n    } catch (error) {\n      if (error.name === \"unauthorized\" || error.name === \"forbidden\") {\n        this.connectionState.setState(ConnectionState.REJECTED);\n        return ConnectionState.REJECTED;\n      } else {\n        this.connectionState.setState(ConnectionState.OFFLINE);\n        return ConnectionState.OFFLINE;\n      }\n    }\n  }\n\n  /**\n   * Logout at the remote database.\n   */\n  public logout(): void {\n    this.database.logout();\n    this.connectionState.setState(ConnectionState.DISCONNECTED);\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\n\nimport { LoginState } from \"../session-states/login-state.enum\";\nimport { Database } from \"../../database/database\";\nimport { ConnectionState } from \"../session-states/connection-state.enum\";\nimport { SyncState } from \"../session-states/sync-state.enum\";\nimport { User } from \"../../user/user\";\nimport { StateHandler } from \"../session-states/state-handler\";\n\n/**\n * A session manages user authentication and database connection for the app.\n *\n * To get the current user object in any other class, inject the SessionService.\n *\n * The SessionService also sets up and provides the Database.\n * To access the database in other classes\n * you should use rather inject the `Database` or the `EntityMapperService` directly, however.\n *\n * This SessionService is the abstract base class for the concrete implementations like SyncedSessionService.\n * You should still use `SessionService` as the dependency injection key to get access to the functionality,\n * providers are set up in a way that you will get the correct implementation during runtime.\n */\n@Injectable()\nexport abstract class SessionService {\n  /**\n   * Authenticate a user.\n   * @param username\n   * @param password\n   */\n  abstract login(username: string, password: string): Promise<LoginState>;\n\n  /**\n   * Logout the current user.\n   */\n  abstract logout();\n\n  /**\n   * Get the currently logged in user (or undefined).\n   */\n  abstract getCurrentUser(): User;\n\n  /**\n   * Get the session status - whether a user is authenticated currently.\n   */\n  abstract isLoggedIn(): boolean;\n\n  /**\n   * Get the state of the session.\n   */\n  abstract getLoginState(): StateHandler<LoginState>;\n\n  /**\n   * Get the state of the connection to the remote server.\n   */\n  abstract getConnectionState(): StateHandler<ConnectionState>;\n\n  /**\n   * Get the state of the synchronization with the remote server.\n   */\n  abstract getSyncState(): StateHandler<SyncState>;\n\n  /**\n   * Start a synchronization process.\n   */\n  abstract sync(): Promise<any>;\n\n  /**\n   * Get the database for the current session.\n   */\n  abstract getDatabase(): Database;\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { AlertService } from \"../../alerts/alert.service\";\n\nimport { SessionService } from \"./session.service\";\nimport { LocalSession } from \"./local-session\";\nimport { RemoteSession } from \"./remote-session\";\nimport { LoginState } from \"../session-states/login-state.enum\";\nimport { Database } from \"../../database/database\";\nimport { PouchDatabase } from \"../../database/pouch-database\";\nimport { ConnectionState } from \"../session-states/connection-state.enum\";\nimport { SyncState } from \"../session-states/sync-state.enum\";\nimport { User } from \"../../user/user\";\nimport { EntitySchemaService } from \"app/core/entity/schema/entity-schema.service\";\nimport { LoggingService } from \"../../logging/logging.service\";\n\n/**\n * A synced session creates and manages a LocalSession and a RemoteSession\n * and handles the setup of synchronisation.\n *\n * also see\n * [Session Handling, Authentication & Synchronisation]{@link /additional-documentation/concepts/session-and-authentication-system.html}\n */\n@Injectable()\nexport class SyncedSessionService extends SessionService {\n  private _localSession: LocalSession;\n  private _remoteSession: RemoteSession;\n  private _liveSyncHandle: any;\n  private _liveSyncScheduledHandle: any;\n  private _offlineRetryLoginScheduleHandle: any;\n\n  constructor(\n    private _alertService: AlertService,\n    private _loggingService: LoggingService,\n    private _entitySchemaService: EntitySchemaService\n  ) {\n    super();\n    this._localSession = new LocalSession(\n      this._alertService,\n      this._entitySchemaService\n    );\n    this._remoteSession = new RemoteSession();\n  }\n\n  /** see {@link SessionService} */\n  public isLoggedIn(): boolean {\n    return this._localSession.loginState.getState() === LoginState.LOGGED_IN;\n  }\n\n  /**\n   * Perform a login. The result will only be the login at the local DB, as we might be offline.\n   * Calling this function will trigger a login in the background.\n   * - If it is successful, a sync is performed in the background\n   * - If it fails due to wrong credentials, yet the local login was successful somehow, we fail local login after the fact\n   *\n   * If the localSession is empty, the local login waits for the result of the sync triggered by the remote login (see local-session.ts).\n   * If the remote login fails for some reason, this sync will never be performed, which is why it must be failed manually here\n   * to abort the local login and prevent a deadlock.\n   * @param username Username\n   * @param password Password\n   * @returns a promise resolving with the local LoginState\n   */\n  public login(username: string, password: string): Promise<LoginState> {\n    this.cancelLoginOfflineRetry(); // in case this is running in the background\n    this.getSyncState().setState(SyncState.UNSYNCED);\n\n    const localLogin = this._localSession.login(username, password);\n    const remoteLogin = this._remoteSession.login(username, password);\n\n    remoteLogin.then(async (connectionState: ConnectionState) => {\n      // remote connected -- sync!\n      if (connectionState === ConnectionState.CONNECTED) {\n        const syncPromise = this.sync(); // no liveSync() here, as we can't know when that's finished if there are no changes.\n\n        // no matter the result of the non-live sync(), start liveSync() once it is done\n        syncPromise.then(\n          // successful -> start liveSync()\n          () => this.liveSyncDeferred(),\n          // not successful -> only start a liveSync() to retry, if we are logged in locally\n          // otherwise the UI is in a fairly unusable state.\n          async () => {\n            if ((await localLogin) === LoginState.LOGGED_IN) {\n              this.liveSyncDeferred();\n            } else {\n              // TODO(lh): Alert the AlertService: Your password was changed recently, but there is an issue with sync. Try again later!\n            }\n          }\n        );\n\n        // asynchronously check if the local login failed --> this happens, when the password was changed at the remote\n        localLogin.then(async (loginState: LoginState) => {\n          if (loginState === LoginState.LOGIN_FAILED) {\n            // in this case: when the sync is completed, retry the local login after the sync\n            await syncPromise;\n            return this._localSession.login(username, password);\n          }\n        });\n\n        return syncPromise;\n      }\n\n      // If we are not connected, we must check (asynchronously), whether the local database is initial\n      this._localSession.isInitial().then((isInitial) => {\n        if (isInitial) {\n          // If we were initial, the local session was waiting for a sync.\n          if (connectionState === ConnectionState.REJECTED) {\n            // Explicitly fail the login if the Connection was rejected, so the LocalSession knows what's going on\n            // additionally, fail sync to resolve deadlock\n            this._localSession.loginState.setState(LoginState.LOGIN_FAILED);\n            this._localSession.syncState.setState(SyncState.FAILED);\n          } else {\n            // Explicitly abort the sync to resolve the deadlock\n            this._localSession.syncState.setState(SyncState.ABORTED);\n          }\n        }\n      });\n\n      // remote rejected but local logged in\n      if (connectionState === ConnectionState.REJECTED) {\n        if ((await localLogin) === LoginState.LOGGED_IN) {\n          // Someone changed the password remotely --> log out and signal failed login\n          this._localSession.logout();\n          this._localSession.loginState.setState(LoginState.LOGIN_FAILED);\n          this._alertService.addDanger(\n            \"Your password was changed recently. Please retry with your new password!\"\n          );\n        }\n      }\n\n      // offline? retry (unless we are in an initial state)! TODO(lh): Backoff\n      if (\n        connectionState === ConnectionState.OFFLINE &&\n        !(await this._localSession.isInitial())\n      ) {\n        this._offlineRetryLoginScheduleHandle = setTimeout(() => {\n          this.login(username, password);\n        }, 2000);\n      }\n    });\n    return localLogin; // the local login is the Promise that counts\n  }\n\n  /** see {@link SessionService} */\n  public getCurrentUser(): User {\n    return this._localSession.currentUser;\n  }\n\n  /** see {@link SessionService} */\n  public getLoginState() {\n    return this._localSession.loginState;\n  }\n  /** see {@link SessionService} */\n  public getConnectionState() {\n    return this._remoteSession.connectionState;\n  }\n  /** see {@link SessionService} */\n  public getSyncState() {\n    return this._localSession.syncState;\n  }\n\n  /** see {@link SessionService} */\n  public async sync(): Promise<any> {\n    this._localSession.syncState.setState(SyncState.STARTED);\n    try {\n      const result = await this._localSession.database.sync(\n        this._remoteSession.database,\n        { batch_size: 500 }\n      );\n      this._localSession.syncState.setState(SyncState.COMPLETED);\n      return result;\n    } catch (error) {\n      this._localSession.syncState.setState(SyncState.FAILED);\n      throw error; // rethrow, so later Promise-handling lands in .catch, too\n    }\n  }\n\n  /**\n   * Start live sync in background.\n   */\n  public liveSync() {\n    this.cancelLiveSync(); // cancel any liveSync that may have been alive before\n    this._localSession.syncState.setState(SyncState.STARTED);\n    this._liveSyncHandle = this._localSession.database\n      .sync(this._remoteSession.database, {\n        live: true,\n        retry: true,\n      })\n      .on(\"change\", (change) => {\n        // after sync. change has direction and changes with info on errors etc\n      })\n      .on(\"paused\", (info) => {\n        // replication was paused: either because sync is finished or because of a failed sync (mostly due to lost connection). info is empty.\n        if (this.getConnectionState().getState() !== ConnectionState.OFFLINE) {\n          this._localSession.syncState.setState(SyncState.COMPLETED);\n          // We might end up here after a failed sync that is not due to offline errors.\n          // It shouldn't happen too often, as we have an initial non-live sync to catch those situations, but we can't find that out here\n        }\n      })\n      .on(\"active\", (info) => {\n        // replication was resumed: either because new things to sync or because connection is available again. info contains the direction\n        this._localSession.syncState.setState(SyncState.STARTED);\n      })\n      .on(\"error\", (err) => {\n        // totally unhandled error (shouldn't happen)\n        this._localSession.syncState.setState(SyncState.FAILED);\n      })\n      .on(\"complete\", (info) => {\n        // replication was canceled!\n        this._liveSyncHandle = null;\n      });\n    return this._liveSyncHandle;\n  }\n\n  /**\n   * Schedules liveSync to be started.\n   * This method should be used to start the liveSync after the initial non-live sync,\n   * so the browser makes a round trip to the UI and hides the potentially visible first-sync dialog.\n   * @param timeout ms to wait before starting the liveSync\n   */\n  public liveSyncDeferred(timeout = 1000) {\n    this.cancelLiveSync(); // cancel any liveSync that may have been alive before\n    this._liveSyncScheduledHandle = setTimeout(() => this.liveSync(), timeout);\n  }\n\n  /**\n   * Cancels a pending login retry scheduled to start in the future.\n   */\n  public cancelLoginOfflineRetry() {\n    if (this._offlineRetryLoginScheduleHandle) {\n      clearTimeout(this._offlineRetryLoginScheduleHandle);\n    }\n  }\n\n  /**\n   * Cancels a currently running liveSync or a liveSync scheduled to start in the future.\n   */\n  public cancelLiveSync() {\n    if (this._liveSyncScheduledHandle) {\n      clearTimeout(this._liveSyncScheduledHandle);\n    }\n    if (this._liveSyncHandle) {\n      this._liveSyncHandle.cancel();\n    }\n  }\n\n  /**\n   * Get the local database instance that should be used for regular data access.\n   * als see {@link SessionService}\n   */\n  public getDatabase(): Database {\n    return new PouchDatabase(\n      this._localSession.database,\n      this._alertService,\n      this._loggingService\n    );\n  }\n\n  /**\n   * Logout and stop any existing sync.\n   * also see {@link SessionService}\n   */\n  public logout() {\n    this.cancelLoginOfflineRetry();\n    this.cancelLiveSync();\n    this._localSession.logout();\n    this._remoteSession.logout();\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** State of the connection to the remote database  */\nexport enum ConnectionState {\n  /** we are offline and therefor not connected to the remote db */\n  OFFLINE,\n  /** we tried to login, but it failed, so we are not connected to the remote db */\n  REJECTED,\n  /** we are intentionally not connected to the remote db */\n  DISCONNECTED,\n  /** we are connected to the remote db */\n  CONNECTED,\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/** State of the login at the local database, which is synonymous to login at the whole application */\nexport enum LoginState {\n  /** Login failed due to wrong credentials */\n  LOGIN_FAILED,\n  /** Login state either before first login-attempt or after logout */\n  LOGGED_OUT,\n  /** Successfully logged in */\n  LOGGED_IN,\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EventEmitter } from \"@angular/core\";\n\n/**\n * Interface of state transition events.\n */\nexport interface StateChangedEvent<StateEnum> {\n  /** previous state before change */\n  fromState: StateEnum;\n\n  /** new state after change */\n  toState: StateEnum;\n}\n\n/**\n * Utility class supporting generic state transitions by emitting change events\n * and allowing to wait for a certain state transition.\n */\nexport class StateHandler<StateEnum> {\n  private state: StateEnum;\n  private stateChanged: EventEmitter<\n    StateChangedEvent<StateEnum>\n  > = new EventEmitter<StateChangedEvent<StateEnum>>();\n\n  /**\n   * Create a StateHandler helper.\n   * @param defaultState Optional initial state.\n   */\n  constructor(defaultState?: StateEnum) {\n    this.state = defaultState;\n  }\n\n  /**\n   * Get the current state.\n   */\n  public getState(): StateEnum {\n    return this.state;\n  }\n\n  /**\n   * Change to the given new state.\n   * The state handler ensures an event is emitted.\n   * @param state The new state\n   */\n  public setState(state: StateEnum): StateHandler<StateEnum> {\n    const oldState = this.state;\n    this.state = state;\n    this.stateChanged.emit({\n      fromState: oldState,\n      toState: this.state,\n    });\n    return this;\n  }\n\n  /**\n   * Subscribe to all state change events.\n   */\n  public getStateChangedStream(): EventEmitter<StateChangedEvent<StateEnum>> {\n    return this.stateChanged;\n  }\n\n  /**\n   * Subscribe to a certain state transition.\n   * @param toState The state for which to wait for and resolve the Promise.\n   * @param failOnStates Optional array of states for which the reject the Promise.\n   */\n  public waitForChangeTo(\n    toState: StateEnum,\n    failOnStates?: StateEnum[]\n  ): Promise<StateChangedEvent<StateEnum>> {\n    return new Promise((resolve, reject) => {\n      if (this.getState() === toState) {\n        resolve({ fromState: undefined, toState });\n        return;\n      } else if (failOnStates && failOnStates.includes(this.getState())) {\n        reject({ fromState: undefined, toState: this.getState() });\n        return;\n      }\n      const subscription = this.getStateChangedStream().subscribe((change) => {\n        if (change.toState === toState) {\n          subscription.unsubscribe(); // only once\n          resolve(change);\n        } else if (failOnStates && failOnStates.includes(change.toState)) {\n          subscription.unsubscribe(); // only once\n          reject(change);\n        }\n      });\n    });\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * State of the Synchronization between local and remote database\n */\nexport enum SyncState {\n  /** Sync started. In case of liveSync, this means the sync was resumed */\n  STARTED,\n  /** Sync completed. In case of liveSync, this means the sync was paused (and waits for more changes) */\n  COMPLETED,\n  /** Sync failed. This may be, because we are offline, or due to some other reason */\n  FAILED,\n  /** (Potentially) Unsynced. This is the state before the first sync after startup */\n  UNSYNCED,\n  /** Sync was aborted. Currently only used when the initial login takes place offline */\n  ABORTED,\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { EntityModule } from \"app/core/entity/entity.module\";\nimport { AlertsModule } from \"../alerts/alerts.module\";\nimport { LoggedInGuard } from \"./logged-in-guard/logged-in.guard\";\nimport { sessionServiceProvider } from \"./session.service.provider\";\nimport { databaseServiceProvider } from \"../database/database.service.provider\";\nimport { UserModule } from \"app/core/user/user.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { RouterModule } from \"@angular/router\";\n\n/**\n * The core session logic handling user login as well as connection and synchronization with the remote database.\n *\n * A detailed discussion about the Session concept is available separately:\n * [Session Handling, Authentication & Synchronisation]{@link /additional-documentation/concepts/session-and-authentication-system.html}\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    EntityModule,\n    AlertsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    RouterModule,\n    UserModule,\n  ],\n  declarations: [LoginComponent],\n  exports: [LoginComponent],\n  providers: [LoggedInGuard, sessionServiceProvider, databaseServiceProvider],\n})\nexport class SessionModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { SyncedSessionService } from \"./session-service/synced-session.service\";\nimport { AppConfig } from \"../app-config/app-config\";\nimport { MockSessionService } from \"./session-service/mock-session.service\";\nimport { SessionService } from \"./session-service/session.service\";\nimport { AlertService } from \"../alerts/alert.service\";\nimport { EntitySchemaService } from \"app/core/entity/schema/entity-schema.service\";\nimport { LoggingService } from \"../logging/logging.service\";\n\n/**\n * Factory method for Angular DI provider of SessionService.\n *\n * see [sessionServiceProvider]{@link sessionServiceProvider} for details.\n *\n * @param alertService\n * @param loggingService\n * @param entitySchemaService\n */\nexport function sessionServiceFactory(\n  alertService: AlertService,\n  loggingService: LoggingService,\n  entitySchemaService: EntitySchemaService\n): SessionService {\n  if (AppConfig.settings.database.useTemporaryDatabase) {\n    return new MockSessionService(entitySchemaService);\n  } else {\n    return new SyncedSessionService(\n      alertService,\n      loggingService,\n      entitySchemaService\n    );\n\n    // TODO: requires a configuration or UI option to select OnlineSession: https://github.com/Aam-Digital/ndb-core/issues/434\n    // return new OnlineSessionService(alertService, entitySchemaService);\n  }\n}\n\n/**\n * Provider for SessionService implementation based on the AppConfig settings.\n *\n * Set `\"database\": { \"useTemporaryDatabase\": true }` in your app-config.json\n * to use the MockSessionService which will set up an in-memory database with demo data.\n * Otherwise the SyncedSessionService is used, establishing a local and remote session and setting up sync between them.\n */\nexport const sessionServiceProvider = {\n  provide: SessionService,\n  useFactory: sessionServiceFactory,\n  deps: [AlertService, LoggingService, EntitySchemaService],\n};\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n} from \"@angular/core\";\nimport { MatMenuTrigger } from \"@angular/material/menu\";\nimport { BackgroundProcessState } from \"../background-process-state.interface\";\n\n/**\n * A dumb component handling presentation of the sync indicator icon\n * and an additional details dropdown listing all currently running background processes.\n */\n@Component({\n  selector: \"app-background-processing-indicator\",\n  templateUrl: \"./background-processing-indicator.component.html\",\n  styleUrls: [\"./background-processing-indicator.component.scss\"],\n})\nexport class BackgroundProcessingIndicatorComponent implements OnChanges {\n  /** details on current background processes to be displayed to user */\n  @Input() backgroundProcesses: BackgroundProcessState[] = [];\n\n  /** whether processes of with the same title shall be summarized into one line */\n  @Input() summarize: boolean = true;\n\n  /** how many special tasks (e.g. index creations) are currently being processed */\n  taskCounter: number;\n\n  /** handle to programmatically open/close the details dropdown */\n  @ViewChild(MatMenuTrigger) taskListDropdownTrigger: MatMenuTrigger;\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes.backgroundProcesses) {\n      return;\n    }\n\n    if (this.summarize && this.backgroundProcesses) {\n      this.backgroundProcesses = this.summarizeProcesses(\n        this.backgroundProcesses\n      );\n    }\n\n    this.taskCounter = this.backgroundProcesses?.filter(\n      (s) => s.pending\n    ).length;\n\n    if (this.taskCounter > 1) {\n      if (\n        !(\n          changes.backgroundProcesses.previousValue?.filter((s) => s.pending)\n            .length > 1\n        )\n      ) {\n        // open menu automatically only if it has not been opened previously, to avoid reopening after user closed it\n        this.taskListDropdownTrigger?.openMenu();\n      }\n    } else if (this.taskCounter === 0) {\n      this.taskListDropdownTrigger?.closeMenu();\n    }\n  }\n\n  private summarizeProcesses(\n    processes: BackgroundProcessState[]\n  ): BackgroundProcessState[] {\n    return processes.reduce((accumulator, currentEntry) => {\n      const summaryEntry = accumulator.find(\n        (i) => i.title === currentEntry.title\n      );\n      if (!summaryEntry) {\n        accumulator.push(currentEntry);\n      } else {\n        delete summaryEntry.details;\n        summaryEntry.pending = summaryEntry.pending || currentEntry.pending;\n      }\n      return accumulator;\n    }, []);\n  }\n}\n","<button mat-icon-button class=\"sync-icon\" [hidden]=\"!taskCounter\"\n        [matMenuTriggerFor]=\"taskListDropdown\">\n  <span [matBadge]=\"taskCounter\" matBadgeColor=\"accent\" [matBadgeHidden]=\"taskCounter <= 1\">\n    <mat-icon class=\"header-icon\" fontIcon=\"fa-refresh\"></mat-icon>\n  </span>\n</button>\n\n<mat-menu #taskListDropdown=\"matMenu\" class=\"details-container\">\n  <div class=\"details-header details-container\">\n    The following processes are still running in the background.\n    Until these are finished some pages may be slow or incomplete.\n  </div>\n\n  <div *ngFor=\"let process of backgroundProcesses\" class=\"details-line details-container\" fxLayout=\"row\">\n    <div fxFlex=\"28px\">\n      <mat-spinner *ngIf=\"process.pending\" [diameter]='20' class=\"process-spinner\"></mat-spinner>\n      <mat-icon *ngIf=\"!process.pending\" fontIcon=\"fa-check\" class=\"process-checkmark\"></mat-icon>\n    </div>\n    <div class=\"process-title\" [matTooltip]=\"process.description\" fxFlex>\n      {{process.title}} <span *ngIf=\"process.details\">({{process.details}})</span>\n    </div>\n  </div>\n\n  <div class=\"details-container\">\n    <button mat-stroked-button class=\"details-close\" (click)=\"taskListDropdownTrigger.closeMenu()\">Close</button>\n  </div>\n</mat-menu>\n\n\n\n\n\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SyncStatusComponent } from \"./sync-status/sync-status.component\";\nimport { SessionModule } from \"../session/session.module\";\nimport { AlertsModule } from \"../alerts/alerts.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { InitialSyncDialogComponent } from \"./sync-status/initial-sync-dialog.component\";\nimport { MatBadgeModule } from \"@angular/material/badge\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { BackgroundProcessingIndicatorComponent } from \"./background-processing-indicator/background-processing-indicator.component\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { FlexModule } from \"@angular/flex-layout\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SessionModule,\n    AlertsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    MatBadgeModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    FlexModule,\n    MatTooltipModule,\n  ],\n  declarations: [\n    InitialSyncDialogComponent,\n    SyncStatusComponent,\n    BackgroundProcessingIndicatorComponent,\n  ],\n  exports: [SyncStatusComponent],\n  providers: [],\n})\nexport class SyncStatusModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component } from \"@angular/core\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\n/**\n * Content for the dialog being displayed during an initial synchronization which blocks login\n * (because user accounts need to be synced first).\n */\n@Component({\n  templateUrl: \"./initial-sync-dialog.component.html\",\n})\nexport class InitialSyncDialogComponent {\n  /**\n   * This component is usually instanciated through the MatDialog service which provides the necessary paramters.\n   * @param dialogRef Reference to the dialog in which the component is being displayed.\n   */\n  constructor(public dialogRef: MatDialogRef<InitialSyncDialogComponent>) {\n    this.dialogRef.disableClose = true;\n  }\n}\n","<h1 mat-dialog-title>Downloading Initial Database ...</h1>\n<div mat-dialog-content>\n  <p>Synchronizing with remote database.</p>\n  <p>Login may not be possible until this is completed.</p>\n  <p><mat-progress-bar mode=\"indeterminate\"></mat-progress-bar></p>\n</div>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { SessionService } from \"../../session/session-service/session.service\";\nimport { SyncState } from \"../../session/session-states/sync-state.enum\";\nimport { AlertService } from \"../../alerts/alert.service\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { InitialSyncDialogComponent } from \"./initial-sync-dialog.component\";\nimport { StateChangedEvent } from \"app/core/session/session-states/state-handler\";\nimport { DatabaseIndexingService } from \"../../entity/database-indexing/database-indexing.service\";\nimport { BackgroundProcessState } from \"../background-process-state.interface\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { debounceTime } from \"rxjs/operators\";\n\n/**\n * A small indicator component that displays an icon when there is currently synchronization\n * with the remote server going on in the background.\n *\n * This component also triggers a blocking dialog box when an initial sync is detected that prevents\n * user login (because user accounts need to be synced first).\n */\n@Component({\n  selector: \"app-sync-status\",\n  templateUrl: \"./sync-status.component.html\",\n  styleUrls: [\"./sync-status.component.scss\"],\n})\nexport class SyncStatusComponent implements OnInit {\n  private syncInProgress: boolean;\n  private indexingProcesses: BackgroundProcessState[];\n\n  private _backgroundProcesses: BehaviorSubject<\n    BackgroundProcessState[]\n  > = new BehaviorSubject([]);\n  /** background processes to be displayed to users, with short delay to avoid flickering */\n  backgroundProcesses = this._backgroundProcesses\n    .asObservable()\n    .pipe(debounceTime(1000));\n\n  private dialogRef: MatDialogRef<InitialSyncDialogComponent>;\n\n  constructor(\n    public dialog: MatDialog,\n    private sessionService: SessionService,\n    private dbIndexingService: DatabaseIndexingService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit(): void {\n    this.dbIndexingService.indicesRegistered.subscribe((indicesStatus) =>\n      this.handleIndexingState(indicesStatus)\n    );\n\n    this.sessionService\n      .getSyncState()\n      .getStateChangedStream()\n      .subscribe((state) => this.handleSyncState(state));\n  }\n\n  private handleSyncState(state: StateChangedEvent<SyncState>) {\n    switch (state.toState) {\n      case SyncState.STARTED:\n        this.syncInProgress = true;\n        if (!this.sessionService.isLoggedIn() && !this.dialogRef) {\n          this.dialogRef = this.dialog.open(InitialSyncDialogComponent);\n        }\n        break;\n      case SyncState.COMPLETED:\n        this.syncInProgress = false;\n        if (this.dialogRef) {\n          this.dialogRef.close();\n        }\n        this.alertService.addInfo(\"Database sync completed.\");\n        break;\n      case SyncState.FAILED:\n        this.syncInProgress = false;\n        if (this.dialogRef) {\n          this.dialogRef.close();\n        }\n        this.alertService.addWarning(\"Database sync failed.\");\n        break;\n    }\n    this.updateBackgroundProcessesList();\n  }\n\n  private handleIndexingState(indicesStatus: BackgroundProcessState[]) {\n    this.indexingProcesses = indicesStatus;\n    this.updateBackgroundProcessesList();\n  }\n\n  /**\n   * Build and emit an updated array of current background processes\n   * @private\n   */\n  private updateBackgroundProcessesList() {\n    let currentProcesses: BackgroundProcessState[] = [];\n    if (this.syncInProgress) {\n      currentProcesses.push({ title: \"Synchronizing database\", pending: true });\n    } else {\n      currentProcesses.push({ title: \"Database up-to-date\", pending: false });\n    }\n    currentProcesses = currentProcesses.concat(this.indexingProcesses);\n    this._backgroundProcesses.next(currentProcesses);\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<app-background-processing-indicator [backgroundProcesses]=\"backgroundProcesses | async\">\n</app-background-processing-indicator>\n","import { Component } from \"@angular/core\";\nimport { Note } from \"../../../child-dev-project/notes/model/note\";\nimport { SessionService } from \"../../session/session-service/session.service\";\nimport { NoteDetailsComponent } from \"../../../child-dev-project/notes/note-details/note-details.component\";\nimport { FormDialogService } from \"../../form-dialog/form-dialog.service\";\n\n/**\n * The \"Primary Action\" is always displayed hovering over the rest of the app as a quick action for the user.\n *\n * This is a UX concept also used in many Android apps.\n * see {@link https://material.io/components/buttons-floating-action-button/}\n */\n@Component({\n  selector: \"app-primary-action\",\n  templateUrl: \"./primary-action.component.html\",\n  styleUrls: [\"./primary-action.component.scss\"],\n})\nexport class PrimaryActionComponent {\n  constructor(\n    private sessionService: SessionService,\n    private formDialog: FormDialogService\n  ) {}\n\n  /**\n   * The primary action to be triggered when the user clicks the hovering button.\n   */\n  primaryAction() {\n    this.formDialog.openDialog(NoteDetailsComponent, this.createNewNote());\n  }\n\n  private createNewNote() {\n    const newNote = new Note(Date.now().toString());\n    newNote.date = new Date();\n    newNote.author = this.sessionService.getCurrentUser().name;\n    return newNote;\n  }\n}\n","<button\n  mat-fab\n  class=\"primary-action\"\n  (click)=\"primaryAction()\"\n  angulartics2On=\"click\"\n  angularticsCategory=\"Navigation\"\n  angularticsAction=\"dashboard_primary_action_click\"\n>\n  <span class=\"fa fa-file-text-o\"></span>\n</button>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Child } from \"../../../child-dev-project/children/model/child\";\nimport { School } from \"../../../child-dev-project/schools/model/school\";\nimport { Entity } from \"../../entity/entity\";\nimport { EntitySchemaService } from \"../../entity/schema/entity-schema.service\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, switchMap } from \"rxjs/operators\";\nimport { LoggingService } from \"../../logging/logging.service\";\nimport { LogLevel } from \"../../logging/log-level\";\nimport { AlertService } from \"../../alerts/alert.service\";\nimport { DatabaseIndexingService } from \"../../entity/database-indexing/database-indexing.service\";\nimport { Router } from \"@angular/router\";\n\n/**\n * General search box that provides results out of any kind of entities from the system\n * as soon as the user starts typing.\n *\n * This is usually displayed in the app header to be available to the user anywhere, allowing to navigate quickly.\n */\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.scss\"],\n})\nexport class SearchComponent implements OnInit {\n  results = [];\n  searchText = \"\";\n  showSearchToolbar = false;\n  isSearching: boolean = false;\n\n  MIN_CHARACTERS_FOR_SEARCH: number = 3;\n  INPUT_DEBOUNCE_TIME_MS: number = 400;\n\n  searchStringChanged: Subject<string> = new Subject<string>();\n  searchQuery: Subject<Promise<any>> = new Subject<Promise<any>>();\n\n  constructor(\n    private dbIndexingService: DatabaseIndexingService,\n    private entitySchemaService: EntitySchemaService,\n    private router: Router,\n    private loggingService: LoggingService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.createSearchIndex();\n\n    this.searchStringChanged\n      .pipe(debounceTime(this.INPUT_DEBOUNCE_TIME_MS))\n      .subscribe((searchString) => {\n        if (typeof searchString !== \"string\") {\n          // abort if a result object was selected rather than a search term entered\n          return;\n        }\n\n        this.searchQuery.next(this.startSearch(searchString));\n      });\n\n    this.searchQuery\n      .pipe(\n        switchMap((value) => {\n          return value;\n        })\n      )\n      .subscribe(\n        (result: { queryResults: any; searchTerms: string[] }) => {\n          this.handleSearchQueryResult(result);\n        },\n        (error) => {\n          this.loggingService.log(\n            {\n              message: \"[Search] An error has occurred in a search query.\",\n              error,\n            },\n            LogLevel.ERROR\n          );\n          this.alertService.addWarning(\n            \"An error has occurred in your search query. Please try again.\"\n          );\n        }\n      );\n  }\n\n  async startSearch(searchString: string): Promise<any> {\n    this.isSearching = true;\n    this.results = [];\n\n    if (!searchString) {\n      return Promise.resolve();\n    }\n\n    searchString = searchString.toLowerCase();\n\n    if (!this.isRelevantSearchInput(searchString)) {\n      return Promise.resolve();\n    }\n\n    const searchTerms = searchString.split(\" \");\n\n    const queryResults = await this.dbIndexingService.queryIndex(\n      \"search_index/by_name\",\n      {\n        startkey: searchTerms[0],\n        endkey: searchTerms[0] + \"\\ufff0\",\n        include_docs: true,\n      }\n    );\n\n    return {\n      queryResults,\n      searchTerms,\n    };\n  }\n\n  async clickOption(optionElement) {\n    const resultEntity: Entity = optionElement.value;\n    await this.router.navigate([\n      resultEntity.getType().toLowerCase(),\n      resultEntity.getId(),\n    ]);\n\n    this.searchText = \"\";\n    this.showSearchToolbar = false;\n  }\n\n  toggleSearchToolbar() {\n    this.showSearchToolbar = !this.showSearchToolbar;\n  }\n\n  handleSearchQueryResult(result: {\n    queryResults: any;\n    searchTerms: string[];\n  }) {\n    this.isSearching = false;\n\n    if (!result || !result.queryResults) {\n      this.results = [];\n      return;\n    }\n\n    this.results = this.prepareResults(\n      result.queryResults.rows,\n      result.searchTerms\n    );\n  }\n\n  private createSearchIndex(): Promise<any> {\n    // `emit(x)` to add x as a key to the index that can be searched\n    const searchMapFunction =\n      \"(doc) => {\" +\n      'if (doc.hasOwnProperty(\"searchIndices\")) { doc.searchIndices.forEach(word => emit(word.toString().toLowerCase())) }' +\n      \"}\";\n\n    const designDoc = {\n      _id: \"_design/search_index\",\n      views: {\n        by_name: {\n          map: searchMapFunction,\n        },\n      },\n    };\n\n    return this.dbIndexingService.createIndex(designDoc);\n  }\n\n  /**\n   * Check if the input should start an actual search.\n   * Only search for words starting with a char or number -> no searching for space or no input\n   * @param searchText\n   */\n  private isRelevantSearchInput(searchText: string) {\n    const regexp = new RegExp(\"[a-z]+|[0-9]+\");\n    return (\n      searchText.match(regexp) &&\n      searchText.length >= this.MIN_CHARACTERS_FOR_SEARCH\n    );\n  }\n\n  private prepareResults(rows, searchTerms: string[]): any[] {\n    return this.getResultsWithoutDuplicates(rows)\n      .map((doc) => this.transformDocToEntity(doc))\n      .filter((r) => r !== null)\n      .filter((r) => this.containsSecondarySearchTerms(r, searchTerms))\n      .sort((a, b) => this.sortResults(a, b));\n  }\n\n  private getResultsWithoutDuplicates(rows): any[] {\n    const filteredResults = new Map<string, any>();\n    for (const row of rows) {\n      filteredResults.set(row.id, row.doc);\n    }\n    return Array.from(filteredResults.values());\n  }\n\n  private transformDocToEntity(doc: any): Entity {\n    let resultEntity;\n    if (doc._id.startsWith(Child.ENTITY_TYPE + \":\")) {\n      resultEntity = new Child(doc.entityId);\n    } else if (doc._id.startsWith(School.ENTITY_TYPE + \":\")) {\n      resultEntity = new School(doc.entityId);\n    }\n\n    if (resultEntity) {\n      this.entitySchemaService.loadDataIntoEntity(resultEntity, doc);\n      return resultEntity;\n    } else {\n      return null;\n    }\n  }\n\n  private containsSecondarySearchTerms(item, searchTerms: string[]) {\n    const itemKey = item.generateSearchIndices().join(\" \").toLowerCase();\n    for (let i = 1; i < searchTerms.length; i++) {\n      if (!itemKey.includes(searchTerms[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private sortResults(a, b) {\n    const entityComparison = this.compareEntityTypes(a, b);\n    if (entityComparison === 0) {\n      return a.toString().localeCompare(b.toString());\n    } else {\n      return entityComparison;\n    }\n  }\n\n  private compareEntityTypes(a: Entity, b: Entity) {\n    const e = [a, b];\n    const t = [a.getType(), b.getType()];\n\n    // special sorting for Child entities\n    for (let i = 0; i < 2; i++) {\n      if (e[i].getType() === Child.ENTITY_TYPE) {\n        if ((e[i] as Child).isActive()) {\n          // show first\n          t[i] = \"!\" + t[i];\n        } else {\n          // show last\n          t[i] = \"\\ufff0\" + t[i];\n        }\n      }\n    }\n\n    return t[0].localeCompare(t[1]);\n  }\n}\n","<div class=\"desktop-search-bar\" fxHide.xs=\"true\" fxHide=\"false\">\n  <mat-form-field fxFill class=\"search-field\" floatLabel=\"never\">\n    <span matPrefix>\n      <mat-icon matPrefix class=\"search-icon\" fontIcon=\"fa-search\"></mat-icon>\n    </span>\n    <mat-label>Search</mat-label>\n    <input\n      matInput\n      title=\"Search\"\n      [matAutocomplete]=\"autoResults\"\n      [(ngModel)]=\"searchText\"\n      (ngModelChange)=\"searchStringChanged.next($event)\"\n      #searchInput\n    />\n  </mat-form-field>\n\n  <mat-autocomplete\n    #autoResults=\"matAutocomplete\"\n    (optionSelected)=\"clickOption($event.option)\"\n  >\n    <mat-option\n      class=\"result-hint\"\n      *ngIf=\"\n        searchInput.value.length > 0 &&\n        searchInput.value.length < MIN_CHARACTERS_FOR_SEARCH\n      \"\n    >\n      <p>Insert at least {{ MIN_CHARACTERS_FOR_SEARCH }} characters</p>\n    </mat-option>\n\n    <mat-option\n      class=\"result-hint\"\n      *ngIf=\"\n        results.length === 0 &&\n        searchInput.value.length >= MIN_CHARACTERS_FOR_SEARCH &&\n        !isSearching\n      \"\n    >\n      <p>There were no results</p>\n    </mat-option>\n\n    <mat-option class=\"result-hint\" *ngIf=\"isSearching\">\n      <p>Search in progress...</p>\n    </mat-option>\n\n    <mat-option *ngFor=\"let res of results\" [value]=\"res\">\n      <app-child-block\n        *ngIf=\"res.getType() === 'Child'\"\n        [entity]=\"res\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"Navigation\"\n        angularticsAction=\"search_result_list_link\"\n        [angularticsLabel]=\"'search-result-type-child'\"\n      ></app-child-block>\n      <app-school-block\n        *ngIf=\"res.getType() === 'School'\"\n        [entity]=\"res\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"Navigation\"\n        angularticsAction=\"search_result_list_link\"\n        [angularticsLabel]=\"'search-result-type-school'\"\n      ></app-school-block>\n    </mat-option>\n  </mat-autocomplete>\n</div>\n\n<button\n  mat-icon-button\n  fxHide.xs=\"false\"\n  fxHide=\"true\"\n  (click)=\"toggleSearchToolbar()\"\n>\n  <mat-icon class=\"header-icon\" fontIcon=\"fa-search\"></mat-icon>\n</button>\n\n<mat-toolbar\n  *ngIf=\"showSearchToolbar\"\n  class=\"search-header mat-elevation-z7 mat-typography\"\n>\n  <mat-toolbar-row fxLayout=\"row\">\n    <span matPrefix>\n      <mat-icon class=\"search-icon\" fontIcon=\"fa-search\"></mat-icon>\n    </span>\n    <input\n      #searchInput\n      fxFlex=\"grow\"\n      matInput\n      title=\"Search\"\n      [matAutocomplete]=\"autoResults\"\n      [(ngModel)]=\"searchText\"\n      (ngModelChange)=\"searchStringChanged.next($event)\"\n    />\n    {{ searchInput.focus() }}\n    <button mat-icon-button (click)=\"toggleSearchToolbar()\">\n      <mat-icon class=\"search-icon\" fontIcon=\"fa-times\"></mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { UiComponent } from \"./ui/ui.component\";\nimport { NavigationModule } from \"../navigation/navigation.module\";\nimport { SessionModule } from \"../session/session.module\";\nimport { SyncStatusModule } from \"../sync-status/sync-status.module\";\nimport { RouterModule } from \"@angular/router\";\nimport { LatestChangesModule } from \"../latest-changes/latest-changes.module\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { SearchComponent } from \"./search/search.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ChildrenModule } from \"../../child-dev-project/children/children.module\";\nimport { SchoolsModule } from \"../../child-dev-project/schools/schools.module\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { PrimaryActionComponent } from \"./primary-action/primary-action.component\";\nimport { NotesModule } from \"../../child-dev-project/notes/notes.module\";\nimport { Angulartics2Module } from \"angulartics2\";\n\n/**\n * The core user interface structure that ties different components together into the overall app layout.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    LatestChangesModule,\n    NavigationModule,\n    RouterModule,\n    SessionModule,\n    SyncStatusModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    FlexLayoutModule,\n    ChildrenModule,\n    SchoolsModule,\n    NotesModule,\n    Angulartics2Module,\n  ],\n  declarations: [SearchComponent, UiComponent, PrimaryActionComponent],\n  exports: [UiComponent],\n})\nexport class UiModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { SessionService } from \"../../session/session-service/session.service\";\nimport { AppConfig } from \"../../app-config/app-config\";\nimport { Title } from \"@angular/platform-browser\";\nimport { MediaObserver, MediaChange } from \"@angular/flex-layout\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\n\n/**\n * The main user interface component as root element for the app structure\n * which also ties different components together into the overall app layout.\n */\n@UntilDestroy()\n@Component({\n  moduleId: module.id,\n  selector: \"app-ui\",\n  templateUrl: \"./ui.component.html\",\n  styleUrls: [\"./ui.component.scss\"],\n})\nexport class UiComponent implements OnInit {\n  /** display mode for the menu to make it responive and usable on smaller screens */\n  sideNavMode: string;\n  /** reference to sideNav component in template, required for toggling the menu on user actions */\n  @ViewChild(\"sideNav\") sideNav;\n\n  /** title displayed in the app header bar */\n  title: string;\n\n  constructor(\n    private _sessionService: SessionService,\n    private titleService: Title,\n    mediaObserver: MediaObserver\n  ) {\n    // watch screen width to change sidenav mode\n    mediaObserver.media$\n      .pipe(untilDestroyed(this))\n      .subscribe((change: MediaChange) => {\n        this.sideNavMode = change.mqAlias === (\"xs\" || \"sm\") ? \"over\" : \"side\";\n      });\n  }\n\n  ngOnInit(): void {\n    this.title = AppConfig.settings.site_name;\n    this.titleService.setTitle(this.title);\n  }\n\n  /**\n   * Check if user is logged in.\n   */\n  isLoggedIn(): boolean {\n    return this._sessionService.isLoggedIn();\n  }\n\n  /**\n   * Trigger logout of user.\n   */\n  logout() {\n    this._sessionService.logout();\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<!-- HEADER -->\n<mat-toolbar color=\"primary\" class=\"app-header mat-elevation-z6 mat-typography\">\n  <mat-toolbar-row fxLayout=\"row\">\n    <span fxFlex *ngIf=\"isLoggedIn()\">\n      <button\n        mat-icon-button\n        fxHide.lt-md=\"false\"\n        fxHide=\"true\"\n        (click)=\"sideNav.toggle()\"\n      >\n        <mat-icon class=\"header-icon\" fontIcon=\"fa-bars\"></mat-icon>\n      </button>\n    </span>\n    <span fxFlex=\"\"\n      ><a\n        class=\"header-title\"\n        [routerLink]=\"['']\"\n        angulartics2On=\"click\"\n        angularticsCategory=\"Navigation\"\n        angularticsAction=\"navbar_site_title_link\"\n        >{{ title }}</a\n      ></span\n    >\n    <span fxFlex=\"grow\">&nbsp;</span>\n    <span fxFlex=\"grow\">&nbsp;</span>\n    <!--top right icons and search-->\n    <app-search\n      *ngIf=\"isLoggedIn()\"\n      [fxFlex]=\"sideNavMode == 'side' ? 'grow' : 'none'\"\n    ></app-search>\n    <app-sync-status></app-sync-status>\n    <button\n      mat-icon-button\n      [routerLink]=\"['/user']\"\n      *ngIf=\"isLoggedIn()\"\n      angulartics2On=\"click\"\n      angularticsCategory=\"Navigation\"\n      angularticsAction=\"navbar_profile_link\"\n    >\n      <mat-icon class=\"header-icon\" fontIcon=\"fa-user-circle-o\"></mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      (click)=\"logout()\"\n      [routerLink]=\"['']\"\n      *ngIf=\"isLoggedIn()\"\n    >\n      <mat-icon class=\"header-icon\" fontIcon=\"fa-sign-out\"></mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<app-primary-action *ngIf=\"isLoggedIn()\"></app-primary-action>\n\n<!-- MAIN NAVIGATION + CONTENT -->\n<mat-sidenav-container class=\"app-content mat-typography\">\n  <mat-sidenav\n    #sideNav\n    *ngIf=\"isLoggedIn()\"\n    [autoFocus]=\"false\"\n    [mode]=\"sideNavMode\"\n    [opened]=\"sideNavMode == 'side'\"\n    disableClose\n    fixedInViewport=\"true\"\n    class=\"sidenav-menu mat-elevation-z6\"\n  >\n    <app-navigation\n      (click)=\"sideNavMode == 'over' && sideNav.close()\"\n    ></app-navigation>\n    <app-version style=\"position: absolute; bottom: 0;\"></app-version>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <div class=\"sidenav-content\">\n      <router-outlet *ngIf=\"isLoggedIn()\"></router-outlet>\n      <app-login *ngIf=\"!isLoggedIn()\"></app-login>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { DemoDataGenerator } from \"../demo-data/demo-data-generator\";\nimport { Injectable } from \"@angular/core\";\nimport { User } from \"./user\";\n\n/**\n * Generate demo users for the application with its DemoDataModule.\n */\n@Injectable()\nexport class DemoUserGeneratorService extends DemoDataGenerator<User> {\n  /**\n   * This function returns a provider object to be used in an Angular Module configuration\n   *\n   * @return `providers: [DemoUserGeneratorService.provider()]`\n   */\n  static provider() {\n    return [\n      { provide: DemoUserGeneratorService, useClass: DemoUserGeneratorService },\n    ];\n  }\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Generate User entities to be loaded by the DemoDataModule.\n   */\n  public generateEntities(): User[] {\n    const demoUser = new User(\"demo\");\n    demoUser.name = \"demo\";\n    demoUser.setNewPassword(\"pass\");\n\n    const demoAdmin = new User(\"demo-admin\");\n    demoUser.name = \"demo-admin\";\n    demoAdmin.admin = true;\n    demoAdmin.setNewPassword(\"pass\");\n\n    return [demoUser, demoAdmin];\n  }\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, OnInit } from \"@angular/core\";\nimport { User } from \"../user\";\nimport { SessionService } from \"../../session/session-service/session.service\";\nimport { EntityMapperService } from \"app/core/entity/entity-mapper.service\";\nimport { AppConfig } from \"../../app-config/app-config\";\n\n/**\n * User account form to allow the user to view and edit information.\n */\n@Component({\n  selector: \"app-user-account\",\n  templateUrl: \"./user-account.component.html\",\n  styleUrls: [\"./user-account.component.scss\"],\n})\nexport class UserAccountComponent implements OnInit {\n  /** user to be edited */\n  user: User;\n\n  /** whether webdav integration is configured and the cloud settings section should be displayed */\n  webdavEnabled = !!AppConfig.settings.webdav;\n\n  constructor(\n    private entityMapperService: EntityMapperService,\n    private sessionService: SessionService\n  ) {}\n\n  ngOnInit() {\n    this.user = this.sessionService.getCurrentUser();\n  }\n\n  /**\n   * Change the user's password.\n   *\n   * @todo This is not implemented yet!\n   *\n   * @param pwd New password to be set\n   * @param rpwd Confirmation of new password (second input by the user to prevent typos)\n   */\n  changePassword(pwd, rpwd) {\n    if (pwd === rpwd) {\n      // TODO: update the password for this remote database user first and deny the password change if that fails\n      this.user.setNewPassword(pwd);\n      // TODO: Show success message\n    } else {\n      // TODO: Show error message\n    }\n  }\n}\n","<!--\n  ~     This file is part of ndb-core.\n  ~\n  ~     ndb-core is free software: you can redistribute it and/or modify\n  ~     it under the terms of the GNU General Public License as published by\n  ~     the Free Software Foundation, either version 3 of the License, or\n  ~     (at your option) any later version.\n  ~\n  ~     ndb-core is distributed in the hope that it will be useful,\n  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of\n  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  ~     GNU General Public License for more details.\n  ~\n  ~     You should have received a copy of the GNU General Public License\n  ~     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n  -->\n\n<mat-tab-group>\n\n  <mat-tab label=\"User Account\">\n    <ng-template matTabContent>\n      <div class='user-profile-tab'>\n        <p>\n          <mat-form-field>\n            <input placeholder=\"Username\" matInput=\"text\" id=\"username\" type=\"text\" [(value)]=\"user.name\" disabled>\n          </mat-form-field>\n        </p>\n\n        <p>\n          <mat-form-field>\n            <input placeholder=\"New Password\" matInput=\"text\" id=\"password1\" type=\"password\" value=\"pass\" #passwordInp disabled>\n          </mat-form-field>\n          <br>\n          <mat-form-field>\n            <input placeholder=\"Confirm New Password\" matInput=\"text\" id=\"confirm\" type=\"password\" value=\"pass\" #confirmationInp disabled>\n          </mat-form-field>\n        </p>\n\n        <p>\n          <i>Changes currently not supported. Please talk to your administrator for password changes.</i>\n        </p>\n\n        <p>\n          <button mat-raised-button (click)=\"changePassword(passwordInp.value,confirmationInp.value)\" disabled>Save</button>\n        </p>\n      </div>\n    </ng-template>\n  </mat-tab>\n\n\n  <mat-tab label=\"Image Service\" *ngIf='webdavEnabled'>\n    <ng-template matTabContent>\n      <div class='user-profile-tab'>\n        <app-cloud-file-service-user-settings [user]='user'></app-cloud-file-service-user-settings>\n      </div>\n    </ng-template>\n  </mat-tab>\n\n</mat-tab-group>\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { NgModule } from \"@angular/core\";\nimport { UserAccountComponent } from \"./user-account/user-account.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { WebdavModule } from \"../webdav/webdav.module\";\n\n/**\n * Provides a User functionality including user account forms.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTabsModule,\n    WebdavModule,\n  ],\n  declarations: [UserAccountComponent],\n})\nexport class UserModule {}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Entity } from \"../entity/entity\";\nimport { DatabaseEntity } from \"../entity/database-entity.decorator\";\nimport { DatabaseField } from \"../entity/database-field.decorator\";\n\nimport * as CryptoJS from \"crypto-js\";\n\n/**\n * Entity representing a User object including password.\n *\n * Note that in addition to the User Entity there also is a \"regular\" CouchDB user with the same name and password\n * in the CouchDB _users database which is used for remote database authentication.\n */\n@DatabaseEntity(\"User\")\nexport class User extends Entity {\n  /** username used for login and identification */\n  @DatabaseField() name: string;\n\n  /** whether this user has admin rights */\n  @DatabaseField() admin: boolean;\n\n  /** password object (encrypted) */\n  @DatabaseField() private password: any;\n\n  /** settings for the mat-paginator for tables\n   * pageSizeOptions is set in the corresponding html of the component,\n   * pageSize is stored persistently in the database and\n   * pageIndex is saved only temporarily for the session\n   */\n  @DatabaseField() paginatorSettingsPageSize: PaginatorSettings = {\n    childrenList: 10,\n    schoolsList: 10,\n    notesList: 10,\n  };\n  public paginatorSettingsPageIndex: PaginatorSettings = {\n    childrenList: 0,\n    schoolsList: 0,\n    notesList: 0,\n  };\n\n  /** password for webdav account (encrypted with user.password) */\n  @DatabaseField() private cloudPasswordEnc: any;\n\n  /** username for webdav account */\n  @DatabaseField() public cloudUserName: string;\n\n  /** password for webdav account (plaintext, decrypted during runtime from user.cloudPasswordEnc, not written to db) */\n  public cloudPasswordDec: any;\n\n  /** base folder for webdav, all actions of the app will happen relative to this as the root folder */\n  @DatabaseField() public cloudBaseFolder: string = \"/aam-digital/\";\n\n  /**\n   * Set a new user password.\n   * This will be encrypted before saving.\n   *\n   * Warning: User password must be identical to the CouchDB user password. Otherwise database sync will fail!\n   *\n   * @param password The new password to be set\n   */\n  public setNewPassword(password: string) {\n    const cryptKeySize = 256 / 32;\n    const cryptIterations = 128;\n    const cryptSalt = CryptoJS.lib.WordArray.random(128 / 8).toString();\n    const hash = CryptoJS.PBKDF2(password, cryptSalt, {\n      keySize: cryptKeySize,\n      iterations: cryptIterations,\n    }).toString();\n\n    this.password = {\n      hash: hash,\n      salt: cryptSalt,\n      iterations: cryptIterations,\n      keysize: cryptKeySize,\n    };\n\n    // update encrypted nextcloud password\n    this.cloudPasswordEnc = CryptoJS.AES.encrypt(\n      this.cloudPasswordDec,\n      password\n    ).toString();\n  }\n\n  /**\n   * Check whether the given password is correct.\n   * @param givenPassword Password attempted\n   */\n  public checkPassword(givenPassword: string): boolean {\n    // hash the given password string and compare it with the stored hash\n    return this.hashPassword(givenPassword) === this.password.hash;\n  }\n\n  private hashPassword(givenPassword: string): string {\n    const options = {\n      keySize: this.password.keysize,\n      iterations: this.password.iterations,\n    };\n    return CryptoJS.PBKDF2(\n      givenPassword,\n      this.password.salt,\n      options\n    ).toString();\n  }\n\n  /**\n   * Decrypt the stored cloud password with the user's regular password.\n   * @param givenPassword The user entity's password (not the webdav cloud password)\n   * @return the decrypted cloud password\n   */\n  public decryptCloudPassword(givenPassword: string): string {\n    if (!this.cloudPasswordEnc) {\n      return;\n    }\n\n    this.cloudPasswordDec = CryptoJS.AES.decrypt(\n      this.cloudPasswordEnc.toString(),\n      givenPassword\n    ).toString(CryptoJS.enc.Utf8);\n    return this.cloudPasswordDec;\n  }\n\n  /**\n   * Set a new webdav cloud password.\n   * @param blobPassword The password for the cloud account.\n   * @param givenPassword The user entity's password (used for encrypting the cloud password before storage)\n   */\n  public setCloudPassword(blobPassword: string, givenPassword: string) {\n    if (this.checkPassword(givenPassword)) {\n      this.cloudPasswordDec = blobPassword;\n      this.cloudPasswordEnc = CryptoJS.AES.encrypt(\n        blobPassword,\n        givenPassword\n      ).toString();\n    }\n  }\n\n  /**\n   * Check admin rights of the user.\n   */\n  public isAdmin(): boolean {\n    return this.admin;\n  }\n\n  /**\n   * Change this user's admin status\n   * @param admin New admin status to be set\n   */\n  public setAdmin(admin: boolean) {\n    this.admin = admin;\n  }\n}\n\n/** Interface for the PaginatorSettings for the three components\n * childrenList, schoolsList and notesList.\n */\nexport interface PaginatorSettings {\n  childrenList: number;\n  schoolsList: number;\n  notesList: number;\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { User } from \"../../user/user\";\nimport { CloudFileService } from \"../cloud-file-service.service\";\nimport { AppConfig } from \"../../app-config/app-config\";\nimport { EntityMapperService } from \"../../entity/entity-mapper.service\";\nimport { AlertService } from \"../../alerts/alert.service\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n/**\n * User Profile form to allow the user to set up credentials for a webdav server to be used by the CloudFileService.\n */\n@Component({\n  selector: \"app-cloud-file-service-user-settings\",\n  templateUrl: \"./cloud-file-service-user-settings.component.html\",\n  styleUrls: [\"./cloud-file-service-user-settings.component.scss\"],\n})\nexport class CloudFileServiceUserSettingsComponent implements OnInit {\n  /** The user for who this form edits data */\n  @Input() user: User;\n\n  /** Webdav server URL */\n  webdavUrl: string;\n\n  /** whether checking and saving the webdav credentials is currently in progress */\n  processing: boolean;\n\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private entityMapperService: EntityMapperService,\n    private cloudFileService: CloudFileService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.webdavUrl = AppConfig.settings.webdav.remote_url;\n\n    this.form = this.fb.group({\n      cloudUser: [this.user.cloudUserName, Validators.required],\n      cloudPassword: [\"\", Validators.required],\n      userPassword: [\"\", Validators.required],\n    });\n  }\n\n  /**\n   * Sets the username and password for the cloud-service, provided the login password is correct\n   * and saves the user entity.\n   */\n  async updateCloudServiceSettings() {\n    const password = this.form.controls.userPassword.value;\n    if (!this.user.checkPassword(password)) {\n      this.form.controls.userPassword.setErrors({ incorrectPassword: true });\n      return;\n    }\n\n    this.processing = true;\n\n    this.user.cloudUserName = this.form.controls.cloudUser.value;\n    this.user.setCloudPassword(\n      this.form.controls.cloudPassword.value,\n      password\n    );\n\n    try {\n      await this.cloudFileService.connect();\n      const isConnected = await this.cloudFileService.checkConnection();\n      if (!isConnected) {\n        // noinspection ExceptionCaughtLocallyJS\n        throw new Error(\"Connection check failed.\");\n      }\n    } catch (error) {\n      this.form.controls.cloudPassword.setErrors({ connectionFailed: true });\n      console.warn(error);\n      this.processing = false;\n      return;\n    }\n\n    await this.entityMapperService.save<User>(this.user);\n    this.alertService.addInfo(\"Successfully saved cloud service credentials.\");\n    this.processing = false;\n  }\n}\n","<form [formGroup]='form' (ngSubmit)=\"updateCloudServiceSettings()\">\n  <p>\n    <i>Please enter your username and password for your Nextcloud account. This will be used for photo uploads.</i>\n  </p>\n  <p>\n    <mat-form-field>\n      <input matInput required formControlName='cloudUser'\n             placeholder=\"Cloud Image Service User\">\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n      <input matInput type=\"password\" required formControlName='cloudPassword'\n             placeholder=\"Cloud Image Service Password\">\n      <mat-error *ngIf=\"form.controls.cloudPassword.errors?.connectionFailed\">\n        Couldn't connect to the cloud service.\n        Please check your username and password or try again later.\n      </mat-error>\n    </mat-form-field>\n    <br>\n  </p>\n  <p>\n    <i>Please enter your password for this app, so your cloud service password above will then be encrypted and stored for future uses.</i>\n  </p>\n  <p>\n    <mat-form-field>\n      <input matInput type=\"password\" required formControlName='userPassword'\n             placeholder=\"Password\">\n      <mat-error *ngIf=\"form.controls.userPassword.errors?.incorrectPassword\">\n        The password you entered is not correct.\n        Please enter your user account password for this app here (not your password for the cloud service above).\n      </mat-error>\n    </mat-form-field>\n  </p>\n  <p class='p-submit'>\n    <button mat-raised-button type='submit' [disabled]='!form.valid || processing'>Save</button>\n    &nbsp;<mat-spinner diameter='20' *ngIf='processing'></mat-spinner>\n  </p>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { AppConfig } from \"../app-config/app-config\";\nimport webdav from \"webdav\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\nimport { SessionService } from \"../session/session-service/session.service\";\n\n/**\n * Connect and access a remote cloud file system like Nextcloud\n * to upload and download files.\n *\n * Connection requires setup of the server in the AppConfig\n * as well as valid user credentials for that server in the currently logged in user entity.\n */\n@Injectable()\nexport class CloudFileService {\n  // TODO Check connection/login success?\n  private client: any;\n  private basePath: string;\n  private fileList: string;\n  private currentlyGettingList: Promise<boolean>;\n\n  /**\n   * Construct the service and immediately attempt to connect to the server with the current user.\n   * @param domSanitizer\n   * @param sessionService\n   */\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private sessionService: SessionService\n  ) {\n    this.connect();\n  }\n\n  /**\n   * (Re)-initialize the client connecting to the webdav server.\n   * @param username Optional webdav username, otherwise the one set in the current user entity is used.\n   * @param password Optional webdav password, otherwise the one set in the current user entity is used.\n   */\n  public async connect(username: string = null, password: string = null) {\n    if (!AppConfig.settings.webdav || !this.sessionService.getCurrentUser()) {\n      return;\n    }\n\n    this.reset();\n\n    const currentUser = this.sessionService.getCurrentUser();\n    this.basePath = currentUser.cloudBaseFolder;\n\n    if (username === null && password == null) {\n      username = currentUser.cloudUserName;\n      password = currentUser.cloudPasswordDec;\n    }\n\n    if (!username || !password) {\n      // abort if account is not configured\n      this.client = null;\n      return;\n    }\n\n    this.client = await webdav.createClient(\n      AppConfig.settings.webdav.remote_url,\n      {\n        username: username,\n        password: password,\n      }\n    );\n  }\n\n  /**\n   * Reset the current state and requests.\n   * e.g. clear promise that retrieves the root dir\n   */\n  private reset() {\n    this.currentlyGettingList = null;\n    this.fileList = null;\n  }\n\n  /**\n   * checkConnection\n   *\n   * tries to upload and redownload a file.\n   */\n  public async checkConnection(): Promise<boolean> {\n    // delete 'tmp.txt' if it exists\n    const fileName: string = this.basePath + \"/test.txt\";\n    if (await this.doesFileExist(fileName)) {\n      await this.client.deleteFile(fileName);\n    }\n\n    await this.client.putFileContents(fileName, \"TestString\");\n    const buffer = await this.client.getFileContents(fileName);\n    const tmpContent = String.fromCharCode.apply(null, new Uint8Array(buffer));\n    await this.client.deleteFile(fileName);\n\n    if (tmpContent === \"TestString\") {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the content path.\n   * @param path File path relative to the base path, without leading slash; example 'folder1'\n   */\n  public async getDir(path: string): Promise<string> {\n    const contents = await this.client.getDirectoryContents(\n      this.basePath + path\n    );\n    return JSON.stringify(contents, undefined, 4);\n  }\n\n  /**\n   * Checks if the file exists in the root directory.\n   * @param name file name to check\n   */\n  public async doesFileExist(name: string): Promise<boolean> {\n    // TODO: doesFileExist seems to have problems at least with nested files?\n\n    if (!this.fileList && !this.currentlyGettingList) {\n      // create promise that resolves when the file list is loaded\n      // if this function gets called mulitple times this ensures that the list will only be loaded once\n      this.currentlyGettingList = new Promise((resolve) => {\n        this.getDir(\"\").then((list) => {\n          this.fileList = list;\n          resolve(true);\n        });\n      });\n    }\n    if (!this.fileList) {\n      await this.currentlyGettingList;\n    }\n    // hacky way of checking if file exists, subject to change\n    // TODO fix this\n    if (this.fileList.includes('\"basename\": \"' + name.split(\"/\").pop() + '\"')) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * creates new directory\n   * @param path path to directory to be created, without leading slash; e.g. 'new-folder'\n   */\n  public async createDir(path: string) {\n    this.client.createDirectory(this.basePath + path);\n  }\n\n  /**\n   * Uploads a given file to the nextcloud server.\n   * @param file The file to be stored\n   * @param filePath the filename and path to which the file will be uploaded, no leading slash\n   */\n  public async uploadFile(file: any, filePath: string): Promise<void> {\n    return this.client.putFileContents(\n      this.basePath + filePath,\n      file\n      // { onUploadProgress: progress => {  console.log(`Uploaded ${progress.loaded} / ${progress.total} bytes`); } },\n    );\n  }\n\n  /**\n   * Returns a Promise which resolves as an ArrayBuffer of the file located at the given path\n   * @param filePath the filename and path relative to the base path without leading slash; e.g. 'photos/105.png'\n   */\n  public async getFile(filePath: string): Promise<SafeUrl> {\n    let file;\n    try {\n      file = await this.client.getFileContents(this.basePath + filePath);\n      return this.bufferArrayToBase64(file);\n    } catch (err) {\n      return Promise.reject(\"Could not load file.\");\n    }\n  }\n\n  /**\n   * converts an ArrayBuffer to a SafeUrl and returns it\n   * @param arrayBuffer ArrayBuffer to be converted\n   */\n  private bufferArrayToBase64(arrayBuffer: ArrayBuffer): SafeUrl {\n    const base64String = btoa(\n      new Uint8Array(arrayBuffer).reduce((data, byte) => {\n        return data + String.fromCharCode(byte);\n      }, \"\")\n    );\n    return this.domSanitizer.bypassSecurityTrustUrl(\n      \"data:image/jpg;base64,\" + base64String\n    );\n  }\n\n  /**\n   * Check whether the client is connected and therefore this service is able to execute its remote actions.\n   */\n  public isConnected() {\n    return !!this.client;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { CloudFileService } from \"./cloud-file-service.service\";\nimport { CloudFileServiceUserSettingsComponent } from \"./cloud-file-service-user-settings/cloud-file-service-user-settings.component\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\n\n/**\n * Provides cloud file storage integration with platforms like Nextcloud.\n * Configuration is described in the main README.\n */\n@NgModule({\n  declarations: [CloudFileServiceUserSettingsComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n  ],\n  providers: [CloudFileService],\n  exports: [CloudFileServiceUserSettingsComponent],\n})\nexport class WebdavModule {}\n","/**\n * Checks if the given value is an instance of Date and holds a valid date value.\n * @param date The date to be checked\n */\nexport function isValidDate(date: any): boolean {\n  return (\n    date &&\n    Object.prototype.toString.call(date) === \"[object Date]\" &&\n    !Number.isNaN(date.getTime())\n  );\n}\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Central environment that allows to configure differences between a \"dev\" and a \"prod\" build.\n *\n * The file contents for the current environment will overwrite these during build.\n * The build system defaults to the dev environment which uses `environment.ts`, but if you do\n * `ng build --env=prod` then `environment.prod.ts` will be used instead.\n * The list of which env maps to which file can be found in `.angular-cli.json`.\n */\nexport const environment = {\n  production: false,\n  appVersion: \"2.19.1\", // replaced automatically by semantic-release\n  repositoryId: \"Aam-Digital/ndb-core\",\n  remoteLoggingDsn: undefined, // only set for production mode in environment.prod.ts\n};\n","/*\n *     This file is part of ndb-core.\n *\n *     ndb-core is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     ndb-core is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with ndb-core.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}